"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@telegram-apps";
exports.ids = ["vendor-chunks/@telegram-apps"];
exports.modules = {

/***/ "(rsc)/./node_modules/@telegram-apps/init-data-node/dist/entries/node.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@telegram-apps/init-data-node/dist/entries/node.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthDateInvalidError: () => (/* reexport safe */ _shared_cWQiAT7_js__WEBPACK_IMPORTED_MODULE_1__.A),\n/* harmony export */   ExpiredError: () => (/* reexport safe */ _shared_cWQiAT7_js__WEBPACK_IMPORTED_MODULE_1__.E),\n/* harmony export */   SignatureInvalidError: () => (/* reexport safe */ _shared_cWQiAT7_js__WEBPACK_IMPORTED_MODULE_1__.d),\n/* harmony export */   SignatureMissingError: () => (/* reexport safe */ _shared_cWQiAT7_js__WEBPACK_IMPORTED_MODULE_1__.S),\n/* harmony export */   hashToken: () => (/* binding */ hashToken),\n/* harmony export */   isAuthDateInvalidError: () => (/* reexport safe */ _shared_cWQiAT7_js__WEBPACK_IMPORTED_MODULE_1__.f),\n/* harmony export */   isExpiredError: () => (/* reexport safe */ _shared_cWQiAT7_js__WEBPACK_IMPORTED_MODULE_1__.g),\n/* harmony export */   isSignatureInvalidError: () => (/* reexport safe */ _shared_cWQiAT7_js__WEBPACK_IMPORTED_MODULE_1__.j),\n/* harmony export */   isSignatureMissingError: () => (/* reexport safe */ _shared_cWQiAT7_js__WEBPACK_IMPORTED_MODULE_1__.e),\n/* harmony export */   isValid: () => (/* binding */ isValid),\n/* harmony export */   isValid3rd: () => (/* reexport safe */ _shared_cWQiAT7_js__WEBPACK_IMPORTED_MODULE_1__.c),\n/* harmony export */   parse: () => (/* reexport safe */ _shared_cWQiAT7_js__WEBPACK_IMPORTED_MODULE_1__.p),\n/* harmony export */   sign: () => (/* binding */ sign),\n/* harmony export */   signData: () => (/* binding */ signData),\n/* harmony export */   validate: () => (/* binding */ validate),\n/* harmony export */   validate3rd: () => (/* reexport safe */ _shared_cWQiAT7_js__WEBPACK_IMPORTED_MODULE_1__.b)\n/* harmony export */ });\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n/* harmony import */ var _shared_cWQiAT7_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shared-cWQiAT7_.js */ \"(rsc)/./node_modules/@telegram-apps/init-data-node/dist/entries/shared-cWQiAT7_.js\");\n\n\n\nfunction textToBuffer(text) {\n  return Buffer.from(typeof text === \"string\" ? text : new Uint8Array(text));\n}\nconst createHmac = (data, key) => {\n  return (0,node_crypto__WEBPACK_IMPORTED_MODULE_0__.createHmac)(\"sha256\", textToBuffer(key)).update(textToBuffer(data)).digest();\n};\nfunction hashToken(token) {\n  return Buffer.from((0,_shared_cWQiAT7_js__WEBPACK_IMPORTED_MODULE_1__.h)(token, createHmac));\n}\nfunction isValid(value, token, options) {\n  return (0,_shared_cWQiAT7_js__WEBPACK_IMPORTED_MODULE_1__.i)(value, token, validate, options);\n}\nfunction sign(data, key, authDate, options) {\n  return (0,_shared_cWQiAT7_js__WEBPACK_IMPORTED_MODULE_1__.s)(data, key, authDate, signData, options);\n}\nfunction signData(data, key, options) {\n  return (0,_shared_cWQiAT7_js__WEBPACK_IMPORTED_MODULE_1__.a)(data, key, createHmac, options);\n}\nfunction validate(value, token, options) {\n  return (0,_shared_cWQiAT7_js__WEBPACK_IMPORTED_MODULE_1__.v)(value, token, signData, options);\n}\n\n//# sourceMappingURL=node.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHRlbGVncmFtLWFwcHMvaW5pdC1kYXRhLW5vZGUvZGlzdC9lbnRyaWVzL25vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXlEO0FBQzhEO0FBQ2hEO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyx1REFBWTtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCLHFEQUFXO0FBQ2hDO0FBQ0E7QUFDQSxTQUFTLHFEQUFTO0FBQ2xCO0FBQ0E7QUFDQSxTQUFTLHFEQUFNO0FBQ2Y7QUFDQTtBQUNBLFNBQVMscURBQVU7QUFDbkI7QUFDQTtBQUNBLFNBQVMscURBQVU7QUFDbkI7QUFrQkU7QUFDRiIsInNvdXJjZXMiOlsiRDpcXFByb2dyYW1taW5nXFxCdXNpbmVzc1xcVXJiYW5hdXRcXHdlYlxcbm9kZV9tb2R1bGVzXFxAdGVsZWdyYW0tYXBwc1xcaW5pdC1kYXRhLW5vZGVcXGRpc3RcXGVudHJpZXNcXG5vZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlSG1hYyBhcyBjcmVhdGVIbWFjJDEgfSBmcm9tIFwibm9kZTpjcnlwdG9cIjtcbmltcG9ydCB7IGggYXMgaGFzaFRva2VuJDEsIGkgYXMgaXNWYWxpZCQxLCBzIGFzIHNpZ24kMSwgYSBhcyBzaWduRGF0YSQxLCB2IGFzIHZhbGlkYXRlJDEgfSBmcm9tIFwiLi9zaGFyZWQtY1dRaUFUN18uanNcIjtcbmltcG9ydCB7IEEsIEUsIGQsIFMsIGYsIGcsIGosIGUsIGMsIHAsIGIgfSBmcm9tIFwiLi9zaGFyZWQtY1dRaUFUN18uanNcIjtcbmZ1bmN0aW9uIHRleHRUb0J1ZmZlcih0ZXh0KSB7XG4gIHJldHVybiBCdWZmZXIuZnJvbSh0eXBlb2YgdGV4dCA9PT0gXCJzdHJpbmdcIiA/IHRleHQgOiBuZXcgVWludDhBcnJheSh0ZXh0KSk7XG59XG5jb25zdCBjcmVhdGVIbWFjID0gKGRhdGEsIGtleSkgPT4ge1xuICByZXR1cm4gY3JlYXRlSG1hYyQxKFwic2hhMjU2XCIsIHRleHRUb0J1ZmZlcihrZXkpKS51cGRhdGUodGV4dFRvQnVmZmVyKGRhdGEpKS5kaWdlc3QoKTtcbn07XG5mdW5jdGlvbiBoYXNoVG9rZW4odG9rZW4pIHtcbiAgcmV0dXJuIEJ1ZmZlci5mcm9tKGhhc2hUb2tlbiQxKHRva2VuLCBjcmVhdGVIbWFjKSk7XG59XG5mdW5jdGlvbiBpc1ZhbGlkKHZhbHVlLCB0b2tlbiwgb3B0aW9ucykge1xuICByZXR1cm4gaXNWYWxpZCQxKHZhbHVlLCB0b2tlbiwgdmFsaWRhdGUsIG9wdGlvbnMpO1xufVxuZnVuY3Rpb24gc2lnbihkYXRhLCBrZXksIGF1dGhEYXRlLCBvcHRpb25zKSB7XG4gIHJldHVybiBzaWduJDEoZGF0YSwga2V5LCBhdXRoRGF0ZSwgc2lnbkRhdGEsIG9wdGlvbnMpO1xufVxuZnVuY3Rpb24gc2lnbkRhdGEoZGF0YSwga2V5LCBvcHRpb25zKSB7XG4gIHJldHVybiBzaWduRGF0YSQxKGRhdGEsIGtleSwgY3JlYXRlSG1hYywgb3B0aW9ucyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZSh2YWx1ZSwgdG9rZW4sIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHZhbGlkYXRlJDEodmFsdWUsIHRva2VuLCBzaWduRGF0YSwgb3B0aW9ucyk7XG59XG5leHBvcnQge1xuICBBIGFzIEF1dGhEYXRlSW52YWxpZEVycm9yLFxuICBFIGFzIEV4cGlyZWRFcnJvcixcbiAgZCBhcyBTaWduYXR1cmVJbnZhbGlkRXJyb3IsXG4gIFMgYXMgU2lnbmF0dXJlTWlzc2luZ0Vycm9yLFxuICBoYXNoVG9rZW4sXG4gIGYgYXMgaXNBdXRoRGF0ZUludmFsaWRFcnJvcixcbiAgZyBhcyBpc0V4cGlyZWRFcnJvcixcbiAgaiBhcyBpc1NpZ25hdHVyZUludmFsaWRFcnJvcixcbiAgZSBhcyBpc1NpZ25hdHVyZU1pc3NpbmdFcnJvcixcbiAgaXNWYWxpZCxcbiAgYyBhcyBpc1ZhbGlkM3JkLFxuICBwIGFzIHBhcnNlLFxuICBzaWduLFxuICBzaWduRGF0YSxcbiAgdmFsaWRhdGUsXG4gIGIgYXMgdmFsaWRhdGUzcmRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub2RlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@telegram-apps/init-data-node/dist/entries/node.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@telegram-apps/init-data-node/dist/entries/shared-cWQiAT7_.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@telegram-apps/init-data-node/dist/entries/shared-cWQiAT7_.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (/* binding */ AuthDateInvalidError),\n/* harmony export */   E: () => (/* binding */ ExpiredError),\n/* harmony export */   S: () => (/* binding */ SignatureMissingError),\n/* harmony export */   a: () => (/* binding */ signData),\n/* harmony export */   b: () => (/* binding */ validate3rd),\n/* harmony export */   c: () => (/* binding */ isValid3rd),\n/* harmony export */   d: () => (/* binding */ SignatureInvalidError),\n/* harmony export */   e: () => (/* binding */ isSignatureMissingError),\n/* harmony export */   f: () => (/* binding */ isAuthDateInvalidError),\n/* harmony export */   g: () => (/* binding */ isExpiredError),\n/* harmony export */   h: () => (/* binding */ hashToken),\n/* harmony export */   i: () => (/* binding */ isValid),\n/* harmony export */   j: () => (/* binding */ isSignatureInvalidError),\n/* harmony export */   p: () => (/* binding */ parse),\n/* harmony export */   s: () => (/* binding */ sign),\n/* harmony export */   v: () => (/* binding */ validate)\n/* harmony export */ });\n/* harmony import */ var error_kid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! error-kid */ \"(rsc)/./node_modules/error-kid/dist/index.js\");\n\nfunction hashToken(token, createHmac) {\n  return createHmac(token, \"WebAppData\");\n}\n// @__NO_SIDE_EFFECTS__\nfunction N(e) {\n  return {\n    lang: (e == null ? void 0 : e.lang) ?? void 0,\n    message: e == null ? void 0 : e.message,\n    abortEarly: (e == null ? void 0 : e.abortEarly) ?? void 0,\n    abortPipeEarly: (e == null ? void 0 : e.abortPipeEarly) ?? void 0\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction Z(e) {\n  return void 0;\n}\n// @__NO_SIDE_EFFECTS__\nfunction ee(e) {\n  return void 0;\n}\n// @__NO_SIDE_EFFECTS__\nfunction ne(e, n) {\n  var r;\n  return (r = void 0) == null ? void 0 : r.get(n);\n}\n// @__NO_SIDE_EFFECTS__\nfunction re(e) {\n  var r, t;\n  const n = typeof e;\n  return n === \"string\" ? `\"${e}\"` : n === \"number\" || n === \"bigint\" || n === \"boolean\" ? `${e}` : n === \"object\" || n === \"function\" ? (e && ((t = (r = Object.getPrototypeOf(e)) == null ? void 0 : r.constructor) == null ? void 0 : t.name)) ?? \"null\" : n;\n}\nfunction f(e, n, r, t, s) {\n  const u = s && \"input\" in s ? s.input : r.value, i = (s == null ? void 0 : s.expected) ?? e.expects ?? null, l = (s == null ? void 0 : s.received) ?? /* @__PURE__ */ re(u), o = {\n    kind: e.kind,\n    type: e.type,\n    input: u,\n    expected: i,\n    received: l,\n    message: `Invalid ${n}: ${i ? `Expected ${i} but r` : \"R\"}eceived ${l}`,\n    requirement: e.requirement,\n    path: s == null ? void 0 : s.path,\n    issues: s == null ? void 0 : s.issues,\n    lang: t.lang,\n    abortEarly: t.abortEarly,\n    abortPipeEarly: t.abortPipeEarly\n  }, y = e.kind === \"schema\", p = (s == null ? void 0 : s.message) ?? e.message ?? /* @__PURE__ */ ne(e.reference, o.lang) ?? (y ? /* @__PURE__ */ ee(o.lang) : null) ?? t.message ?? /* @__PURE__ */ Z(o.lang);\n  p && (o.message = typeof p == \"function\" ? (\n    // @ts-expect-error\n    p(o)\n  ) : p), y && (r.typed = false), r.issues ? r.issues.push(o) : r.issues = [o];\n}\n// @__NO_SIDE_EFFECTS__\nfunction h(e) {\n  return {\n    version: 1,\n    vendor: \"valibot\",\n    validate(n) {\n      return e[\"~run\"]({ value: n }, /* @__PURE__ */ N());\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction W(e, n) {\n  return Object.hasOwn(e, n) && n !== \"__proto__\" && n !== \"prototype\" && n !== \"constructor\";\n}\n// @__NO_SIDE_EFFECTS__\nfunction te(e, n) {\n  const r = [...new Set(e)];\n  return r.length > 1 ? `(${r.join(` ${n} `)})` : r[0] ?? \"never\";\n}\nvar se = class extends Error {\n  /**\n   * Creates a Valibot error with useful information.\n   *\n   * @param issues The error issues.\n   */\n  constructor(e) {\n    super(e[0].message), this.name = \"ValiError\", this.issues = e;\n  }\n};\n// @__NO_SIDE_EFFECTS__\nfunction R(e) {\n  return {\n    kind: \"validation\",\n    type: \"integer\",\n    reference: R,\n    async: false,\n    expects: null,\n    requirement: Number.isInteger,\n    message: e,\n    \"~run\"(n, r) {\n      return n.typed && !this.requirement(n.value) && f(this, \"integer\", n, r), n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction d(e) {\n  return {\n    kind: \"transformation\",\n    type: \"transform\",\n    reference: d,\n    async: false,\n    operation: e,\n    \"~run\"(n) {\n      return n.value = this.operation(n.value), n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction U(e, n, r) {\n  return typeof e.default == \"function\" ? (\n    // @ts-expect-error\n    e.default(n, r)\n  ) : (\n    // @ts-expect-error\n    e.default\n  );\n}\n// @__NO_SIDE_EFFECTS__\nfunction _(e) {\n  return {\n    kind: \"schema\",\n    type: \"boolean\",\n    reference: _,\n    expects: \"boolean\",\n    async: false,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(n, r) {\n      return typeof n.value == \"boolean\" ? n.typed = true : f(this, \"type\", n, r), n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction z(e) {\n  return {\n    kind: \"schema\",\n    type: \"date\",\n    reference: z,\n    expects: \"Date\",\n    async: false,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(n, r) {\n      return n.value instanceof Date ? isNaN(n.value) ? f(this, \"type\", n, r, {\n        received: '\"Invalid Date\"'\n      }) : n.typed = true : f(this, \"type\", n, r), n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction J(e, n) {\n  return {\n    kind: \"schema\",\n    type: \"instance\",\n    reference: J,\n    expects: e.name,\n    async: false,\n    class: e,\n    message: n,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(r, t) {\n      return r.value instanceof this.class ? r.typed = true : f(this, \"type\", r, t), r;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction A(e) {\n  return {\n    kind: \"schema\",\n    type: \"lazy\",\n    reference: A,\n    expects: \"unknown\",\n    async: false,\n    getter: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(n, r) {\n      return this.getter(n.value)[\"~run\"](n, r);\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction k(e, n) {\n  return {\n    kind: \"schema\",\n    type: \"loose_object\",\n    reference: k,\n    expects: \"Object\",\n    async: false,\n    entries: e,\n    message: n,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(r, t) {\n      var u;\n      const s = r.value;\n      if (s && typeof s == \"object\") {\n        r.typed = true, r.value = {};\n        for (const i in this.entries) {\n          const l = this.entries[i];\n          if (i in s || (l.type === \"exact_optional\" || l.type === \"optional\" || l.type === \"nullish\") && // @ts-expect-error\n          l.default !== void 0) {\n            const o = i in s ? (\n              // @ts-expect-error\n              s[i]\n            ) : /* @__PURE__ */ U(l), y = l[\"~run\"]({ value: o }, t);\n            if (y.issues) {\n              const p = {\n                type: \"object\",\n                origin: \"value\",\n                input: s,\n                key: i,\n                value: o\n              };\n              for (const m of y.issues)\n                m.path ? m.path.unshift(p) : m.path = [p], (u = r.issues) == null || u.push(m);\n              if (r.issues || (r.issues = y.issues), t.abortEarly) {\n                r.typed = false;\n                break;\n              }\n            }\n            y.typed || (r.typed = false), r.value[i] = y.value;\n          } else if (l.type !== \"exact_optional\" && l.type !== \"optional\" && l.type !== \"nullish\" && (f(this, \"key\", r, t, {\n            input: void 0,\n            expected: `\"${i}\"`,\n            path: [\n              {\n                type: \"object\",\n                origin: \"key\",\n                input: s,\n                key: i,\n                // @ts-expect-error\n                value: s[i]\n              }\n            ]\n          }), t.abortEarly))\n            break;\n        }\n        if (!r.issues || !t.abortEarly)\n          for (const i in s)\n            /* @__PURE__ */ W(s, i) && !(i in this.entries) && (r.value[i] = s[i]);\n      } else\n        f(this, \"type\", r, t);\n      return r;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction E(e) {\n  return {\n    kind: \"schema\",\n    type: \"number\",\n    reference: E,\n    expects: \"number\",\n    async: false,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(n, r) {\n      return typeof n.value == \"number\" && !isNaN(n.value) ? n.typed = true : f(this, \"type\", n, r), n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction c(e, n) {\n  return {\n    kind: \"schema\",\n    type: \"optional\",\n    reference: c,\n    expects: `(${e.expects} | undefined)`,\n    async: false,\n    wrapped: e,\n    default: n,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(r, t) {\n      return r.value === void 0 && (this.default !== void 0 && (r.value = /* @__PURE__ */ U(this, r, t)), r.value === void 0) ? (r.typed = true, r) : this.wrapped[\"~run\"](r, t);\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction a(e) {\n  return {\n    kind: \"schema\",\n    type: \"string\",\n    reference: a,\n    expects: \"string\",\n    async: false,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(n, r) {\n      return typeof n.value == \"string\" ? n.typed = true : f(this, \"type\", n, r), n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction O(e) {\n  let n;\n  if (e)\n    for (const r of e)\n      n ? n.push(...r.issues) : n = r.issues;\n  return n;\n}\n// @__NO_SIDE_EFFECTS__\nfunction $(e, n) {\n  return {\n    kind: \"schema\",\n    type: \"union\",\n    reference: $,\n    expects: /* @__PURE__ */ te(\n      e.map((r) => r.expects),\n      \"|\"\n    ),\n    async: false,\n    options: e,\n    message: n,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(r, t) {\n      let s, u, i;\n      for (const l of this.options) {\n        const o = l[\"~run\"]({ value: r.value }, t);\n        if (o.typed)\n          if (o.issues)\n            u ? u.push(o) : u = [o];\n          else {\n            s = o;\n            break;\n          }\n        else\n          i ? i.push(o) : i = [o];\n      }\n      if (s)\n        return s;\n      if (u) {\n        if (u.length === 1)\n          return u[0];\n        f(this, \"type\", r, t, {\n          issues: /* @__PURE__ */ O(u)\n        }), r.typed = true;\n      } else {\n        if ((i == null ? void 0 : i.length) === 1)\n          return i[0];\n        f(this, \"type\", r, t, {\n          issues: /* @__PURE__ */ O(i)\n        });\n      }\n      return r;\n    }\n  };\n}\nfunction B(e, n, r) {\n  const t = e[\"~run\"]({ value: n }, /* @__PURE__ */ N(r));\n  if (t.issues)\n    throw new se(t.issues);\n  return t.value;\n}\n// @__NO_SIDE_EFFECTS__\nfunction v(...e) {\n  return {\n    ...e[0],\n    pipe: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ h(this);\n    },\n    \"~run\"(n, r) {\n      for (const t of e)\n        if (t.kind !== \"metadata\") {\n          if (n.issues && (t.kind === \"schema\" || t.kind === \"transformation\")) {\n            n.typed = false;\n            break;\n          }\n          (!n.issues || !r.abortEarly && !r.abortPipeEarly) && (n = t[\"~run\"](n, r));\n        }\n      return n;\n    }\n  };\n}\nfunction ue(e) {\n  return e.replace(/_[a-z]/g, (n) => n[1].toUpperCase());\n}\nfunction ae(e) {\n  return Object.entries(e).reduce((n, [r, t]) => (n[ue(r)] = t, n), {});\n}\nfunction w(e) {\n  const n = ae(e);\n  for (const r in n) {\n    const t = n[r];\n    t && typeof t == \"object\" && !(t instanceof Date) && (n[r] = Array.isArray(t) ? t.map(w) : w(t));\n  }\n  return n;\n}\nfunction I(e) {\n  return /* @__PURE__ */ d((n) => e ? w(n) : n);\n}\nfunction M(e) {\n  return (n) => /* @__PURE__ */ v(\n    e,\n    I(n)\n  );\n}\nfunction T(e) {\n  return (n, r) => B(\n    /* @__PURE__ */ v(e, I(r)),\n    n\n  );\n}\nfunction oe() {\n  return /* @__PURE__ */ d(JSON.parse);\n}\nfunction C(e) {\n  const n = M(e);\n  return (r) => /* @__PURE__ */ v(\n    /* @__PURE__ */ a(),\n    oe(),\n    n(r)\n  );\n}\nfunction ce(e) {\n  return /* @__PURE__ */ d((n) => {\n    const r = {};\n    return new URLSearchParams(n).forEach((t, s) => {\n      const u = r[s];\n      Array.isArray(u) ? u.push(t) : u === void 0 ? r[s] = t : r[s] = [u, t];\n    }), B(e, r);\n  });\n}\nfunction K(e) {\n  return (n) => /* @__PURE__ */ v(\n    /* @__PURE__ */ $([/* @__PURE__ */ a(), /* @__PURE__ */ J(URLSearchParams)]),\n    ce(e),\n    I(n)\n  );\n}\nconst Q = /* @__PURE__ */ c(/* @__PURE__ */ A(() => he())), le = /* @__PURE__ */ k({\n  id: /* @__PURE__ */ E(),\n  photo_url: /* @__PURE__ */ c(/* @__PURE__ */ a()),\n  type: /* @__PURE__ */ a(),\n  title: /* @__PURE__ */ a(),\n  username: /* @__PURE__ */ c(/* @__PURE__ */ a())\n}), pe = /* @__PURE__ */ k({\n  added_to_attachment_menu: /* @__PURE__ */ c(/* @__PURE__ */ _()),\n  allows_write_to_pm: /* @__PURE__ */ c(/* @__PURE__ */ _()),\n  first_name: /* @__PURE__ */ a(),\n  id: /* @__PURE__ */ E(),\n  is_bot: /* @__PURE__ */ c(/* @__PURE__ */ _()),\n  is_premium: /* @__PURE__ */ c(/* @__PURE__ */ _()),\n  last_name: /* @__PURE__ */ c(/* @__PURE__ */ a()),\n  language_code: /* @__PURE__ */ c(/* @__PURE__ */ a()),\n  photo_url: /* @__PURE__ */ c(/* @__PURE__ */ a()),\n  username: /* @__PURE__ */ c(/* @__PURE__ */ a())\n}), fe = /* @__PURE__ */ k({\n  auth_date: /* @__PURE__ */ v(\n    /* @__PURE__ */ a(),\n    /* @__PURE__ */ d((e) => new Date(Number(e) * 1e3)),\n    /* @__PURE__ */ z()\n  ),\n  can_send_after: /* @__PURE__ */ c(/* @__PURE__ */ v(/* @__PURE__ */ a(), /* @__PURE__ */ d(Number), /* @__PURE__ */ R())),\n  chat: /* @__PURE__ */ c(/* @__PURE__ */ A(() => ye())),\n  chat_type: /* @__PURE__ */ c(/* @__PURE__ */ a()),\n  chat_instance: /* @__PURE__ */ c(/* @__PURE__ */ a()),\n  hash: /* @__PURE__ */ a(),\n  query_id: /* @__PURE__ */ c(/* @__PURE__ */ a()),\n  receiver: Q,\n  start_param: /* @__PURE__ */ c(/* @__PURE__ */ a()),\n  signature: /* @__PURE__ */ a(),\n  user: Q\n}), ye = C(le), he = C(pe), F = K(fe);\nconst ke = T(F());\nfunction Y(e, n) {\n  return n || (n = (r, t) => JSON.stringify(t)), new URLSearchParams(\n    Object.entries(e).reduce((r, [t, s]) => (Array.isArray(s) ? r.push(...s.map((u) => [t, String(u)])) : s != null && r.push([\n      t,\n      s instanceof Date ? (s.getTime() / 1e3 | 0).toString() : typeof s == \"string\" || typeof s == \"number\" ? String(s) : typeof s == \"boolean\" ? s ? \"1\" : \"0\" : n(t, s)\n    ]), r), [])\n  ).toString();\n}\nfunction ve(e) {\n  return Y(e);\n}\nfunction sign(data, key, authDate, signData2, options) {\n  const searchParams = new URLSearchParams(\n    ve({\n      ...data,\n      auth_date: authDate,\n      hash: \"\",\n      signature: data.signature || \"\"\n    })\n  );\n  searchParams.delete(\"hash\");\n  const pairs = [...searchParams.entries()].map(([name, value]) => `${name}=${value}`).sort();\n  function processSign2(s) {\n    searchParams.append(\"hash\", s);\n    return searchParams.toString();\n  }\n  const sign2 = signData2(pairs.join(\"\\n\"), key, options);\n  return typeof sign2 === \"string\" ? processSign2(sign2) : sign2.then(processSign2);\n}\nfunction arrayBufferToHex(buffer) {\n  return new Uint8Array(buffer).reduce((acc, byte) => {\n    return acc + byte.toString(16).padStart(2, \"0\");\n  }, \"\");\n}\nfunction hexToArrayBuffer(hexString) {\n  if (hexString.length % 2 !== 0) {\n    throw new Error(\"Hex string must have an even number of characters\");\n  }\n  const buffer = new ArrayBuffer(hexString.length / 2);\n  const uint8Array = new Uint8Array(buffer);\n  for (let i = 0; i < hexString.length; i += 2) {\n    uint8Array[i / 2] = parseInt(hexString.substring(i, i + 2), 16);\n  }\n  return buffer;\n}\nfunction signData(data, key, createHmac, options = {}) {\n  const keyHmac = options.tokenHashed ? typeof key === \"string\" ? hexToArrayBuffer(key) : key : hashToken(key, createHmac);\n  if (keyHmac instanceof Promise) {\n    return keyHmac.then((v2) => createHmac(data, v2)).then(arrayBufferToHex);\n  }\n  const hmac = createHmac(data, keyHmac);\n  return hmac instanceof Promise ? hmac.then(arrayBufferToHex) : arrayBufferToHex(hmac);\n}\nconst [\n  AuthDateInvalidError,\n  isAuthDateInvalidError\n] = (0,error_kid__WEBPACK_IMPORTED_MODULE_0__.errorClassWithData)(\n  \"AuthDateInvalidError\",\n  (value) => ({ value }),\n  (value) => [`\"auth_date\" is invalid: ${value || \"value is missing\"}`]\n);\nconst [\n  SignatureInvalidError,\n  isSignatureInvalidError\n] = (0,error_kid__WEBPACK_IMPORTED_MODULE_0__.errorClass)(\"SignatureInvalidError\");\nconst [\n  SignatureMissingError,\n  isSignatureMissingError\n] = (0,error_kid__WEBPACK_IMPORTED_MODULE_0__.errorClass)(\"SignatureMissingError\", (thirdParty) => [\n  `\"${thirdParty ? \"signature\" : \"hash\"}\" parameter is missing`\n]);\nconst [\n  ExpiredError,\n  isExpiredError\n] = (0,error_kid__WEBPACK_IMPORTED_MODULE_0__.errorClassWithData)(\n  \"ExpiredError\",\n  (issuedAt, expiresAt) => ({ issuedAt, expiresAt }),\n  (issuedAt, expiresAt, now) => [\n    `Init data expired. Issued at ${issuedAt.toISOString()}, expires at ${expiresAt.toISOString()}, now is ${now.toISOString()}`\n  ]\n);\nfunction processSign(actual, expected) {\n  if (actual !== expected) {\n    throw new SignatureInvalidError();\n  }\n  return;\n}\nfunction validate(value, token, signData2, options = {}) {\n  let authDate;\n  let authDateString;\n  let hash;\n  const pairs = [];\n  (typeof value === \"string\" ? new URLSearchParams(value) : value).forEach((value2, key) => {\n    if (key === \"hash\") {\n      hash = value2;\n      return;\n    }\n    if (key === \"auth_date\") {\n      authDateString = value2;\n      const authDateNum = parseInt(value2, 10);\n      if (!Number.isNaN(authDateNum)) {\n        authDate = new Date(authDateNum * 1e3);\n      }\n    }\n    pairs.push(`${key}=${value2}`);\n  });\n  if (!hash) {\n    throw new SignatureMissingError(false);\n  }\n  if (!authDate) {\n    throw new AuthDateInvalidError(authDateString);\n  }\n  const { expiresIn = 86400 } = options;\n  if (expiresIn > 0) {\n    const expiresAtTs = authDate.getTime() + expiresIn * 1e3;\n    const nowTs = Date.now();\n    if (expiresAtTs < nowTs) {\n      throw new ExpiredError(authDate, new Date(expiresAtTs), new Date(nowTs));\n    }\n  }\n  pairs.sort();\n  const sign2 = signData2(pairs.join(\"\\n\"), token, options);\n  return typeof sign2 === \"string\" ? processSign(sign2, hash) : sign2.then((v2) => processSign(v2, hash));\n}\nfunction isValid(value, token, validate2, options) {\n  try {\n    const maybePromise = validate2(value, token, options);\n    return maybePromise ? maybePromise.then(() => true, () => false) : true;\n  } catch {\n    return false;\n  }\n}\nfunction processResult(verified) {\n  if (!verified) {\n    throw new SignatureInvalidError();\n  }\n  return;\n}\nfunction validate3rd$1(value, botId, verify, options = {}) {\n  let authDate;\n  let authDateString;\n  let signature;\n  const pairs = [];\n  (typeof value === \"string\" ? new URLSearchParams(value) : value).forEach((value2, key) => {\n    if (key === \"hash\") {\n      return;\n    }\n    if (key === \"signature\") {\n      signature = value2;\n      return;\n    }\n    if (key === \"auth_date\") {\n      authDateString = value2;\n      const authDateNum = parseInt(value2, 10);\n      if (!Number.isNaN(authDateNum)) {\n        authDate = new Date(authDateNum * 1e3);\n      }\n    }\n    pairs.push(`${key}=${value2}`);\n  });\n  if (!signature) {\n    throw new SignatureMissingError(true);\n  }\n  if (!authDate) {\n    throw new AuthDateInvalidError(authDateString);\n  }\n  const { expiresIn = 86400 } = options;\n  if (expiresIn > 0) {\n    const expiresAtTs = authDate.getTime() + expiresIn * 1e3;\n    const nowTs = Date.now();\n    if (expiresAtTs < nowTs) {\n      throw new ExpiredError(authDate, new Date(expiresAtTs), new Date(nowTs));\n    }\n  }\n  const verified = verify(\n    `${botId}:WebAppData\n${pairs.sort().join(\"\\n\")}`,\n    options.test ? \"40055058a4ee38156a06562e52eece92a771bcd8346a8c4615cb7376eddf72ec\" : \"e7bf03a2fa4602af4580703d88dda5bb59f32ed8b02a56c187fe7d34caed242d\",\n    signature\n  );\n  return typeof verified === \"boolean\" ? processResult(verified) : verified.then(processResult);\n}\nfunction isValid3rd$1(value, botId, validate2, options) {\n  try {\n    const maybePromise = validate2(value, botId, options);\n    return maybePromise ? maybePromise.then(() => true, () => false) : true;\n  } catch {\n    return false;\n  }\n}\nconst parse = ke;\nconst verify3rd = async (data, key, signature) => {\n  return crypto.subtle.verify(\n    \"Ed25519\",\n    await crypto.subtle.importKey(\"raw\", Buffer.from(key, \"hex\"), \"Ed25519\", false, [\"verify\"]),\n    Buffer.from(signature, \"base64\"),\n    Buffer.from(data)\n  );\n};\nasync function validate3rd(value, botId, options) {\n  return validate3rd$1(value, botId, verify3rd, options);\n}\nfunction isValid3rd(value, botId, options) {\n  return isValid3rd$1(value, botId, validate3rd, options);\n}\n\n//# sourceMappingURL=shared-cWQiAT7_.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@telegram-apps/init-data-node/dist/entries/shared-cWQiAT7_.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@telegram-apps/sdk/dist/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@telegram-apps/sdk/dist/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortablePromise: () => (/* binding */ fn),\n/* harmony export */   AccessDeniedError: () => (/* binding */ Us),\n/* harmony export */   CSSVarsBoundError: () => (/* binding */ Cn),\n/* harmony export */   CancelledError: () => (/* binding */ Xa),\n/* harmony export */   ConcurrentCallError: () => (/* binding */ su),\n/* harmony export */   FullscreenFailedError: () => (/* binding */ au),\n/* harmony export */   FunctionUnavailableError: () => (/* binding */ xe),\n/* harmony export */   InvalidArgumentsError: () => (/* binding */ J),\n/* harmony export */   InvalidEnvError: () => (/* binding */ Nf),\n/* harmony export */   InvalidLaunchParamsError: () => (/* binding */ Vi),\n/* harmony export */   InvokeCustomMethodError: () => (/* binding */ Ri),\n/* harmony export */   LaunchParamsRetrieveError: () => (/* binding */ Ni),\n/* harmony export */   ManualPromise: () => (/* binding */ Cf),\n/* harmony export */   MethodParameterUnsupportedError: () => (/* binding */ Di),\n/* harmony export */   MethodUnsupportedError: () => (/* binding */ qi),\n/* harmony export */   NotAvailableError: () => (/* binding */ Ws),\n/* harmony export */   SetEmojiStatusError: () => (/* binding */ ou),\n/* harmony export */   ShareMessageError: () => (/* binding */ iu),\n/* harmony export */   TimeoutError: () => (/* binding */ ei),\n/* harmony export */   UnknownEnvError: () => (/* binding */ Li),\n/* harmony export */   addToHomeScreen: () => (/* binding */ Am),\n/* harmony export */   authenticateBiometry: () => (/* binding */ Lu),\n/* harmony export */   backButton: () => (/* binding */ Gf),\n/* harmony export */   bindMiniAppCssVars: () => (/* binding */ bp),\n/* harmony export */   bindThemeParamsCssVars: () => (/* binding */ rp),\n/* harmony export */   bindViewportCssVars: () => (/* binding */ Ld),\n/* harmony export */   biometry: () => (/* binding */ Jf),\n/* harmony export */   biometryAuthError: () => (/* binding */ Hu),\n/* harmony export */   biometryAuthPromise: () => (/* binding */ no),\n/* harmony export */   biometryMountError: () => (/* binding */ Iu),\n/* harmony export */   biometryState: () => (/* binding */ Cu),\n/* harmony export */   changeFullscreenError: () => (/* binding */ zd),\n/* harmony export */   changeFullscreenPromise: () => (/* binding */ Wd),\n/* harmony export */   checkHomeScreenStatus: () => (/* binding */ km),\n/* harmony export */   checkHomeScreenStatusError: () => (/* binding */ xm),\n/* harmony export */   checkHomeScreenStatusPromise: () => (/* binding */ Mm),\n/* harmony export */   closeMiniApp: () => (/* binding */ yp),\n/* harmony export */   closeQrScanner: () => (/* binding */ Np),\n/* harmony export */   closingBehavior: () => (/* binding */ Kf),\n/* harmony export */   cloudStorage: () => (/* binding */ Yf),\n/* harmony export */   configure: () => (/* binding */ nu),\n/* harmony export */   copyTextToClipboard: () => (/* binding */ Wm),\n/* harmony export */   createPostEvent: () => (/* binding */ Qi),\n/* harmony export */   createRequestId: () => (/* binding */ Fs),\n/* harmony export */   deleteCloudStorageItem: () => (/* binding */ bo),\n/* harmony export */   disableClosingConfirmation: () => (/* binding */ ec),\n/* harmony export */   disableVerticalSwipes: () => (/* binding */ wd),\n/* harmony export */   downloadFile: () => (/* binding */ Um),\n/* harmony export */   emitEvent: () => (/* binding */ Pr),\n/* harmony export */   enableClosingConfirmation: () => (/* binding */ tc),\n/* harmony export */   enableVerticalSwipes: () => (/* binding */ Ed),\n/* harmony export */   exitFullscreen: () => (/* binding */ Qd),\n/* harmony export */   expandViewport: () => (/* binding */ Rd),\n/* harmony export */   getCloudStorageItem: () => (/* binding */ pc),\n/* harmony export */   getCloudStorageKeys: () => (/* binding */ yo),\n/* harmony export */   getCurrentTime: () => (/* binding */ zm),\n/* harmony export */   hapticFeedback: () => (/* binding */ Zf),\n/* harmony export */   hapticFeedbackImpactOccurred: () => (/* binding */ hc),\n/* harmony export */   hapticFeedbackNotificationOccurred: () => (/* binding */ _c),\n/* harmony export */   hapticFeedbackSelectionChanged: () => (/* binding */ bc),\n/* harmony export */   hideBackButton: () => (/* binding */ pu),\n/* harmony export */   hideSettingsButton: () => (/* binding */ pd),\n/* harmony export */   ignoreCanceled: () => (/* binding */ Ks),\n/* harmony export */   init: () => (/* binding */ Xm),\n/* harmony export */   initData: () => (/* binding */ Xf),\n/* harmony export */   initDataAuthDate: () => (/* binding */ vo),\n/* harmony export */   initDataCanSendAfter: () => (/* binding */ wo),\n/* harmony export */   initDataCanSendAfterDate: () => (/* binding */ gc),\n/* harmony export */   initDataChat: () => (/* binding */ vc),\n/* harmony export */   initDataChatInstance: () => (/* binding */ Ec),\n/* harmony export */   initDataChatType: () => (/* binding */ wc),\n/* harmony export */   initDataHash: () => (/* binding */ $c),\n/* harmony export */   initDataQueryId: () => (/* binding */ Sc),\n/* harmony export */   initDataRaw: () => (/* binding */ Ac),\n/* harmony export */   initDataReceiver: () => (/* binding */ kc),\n/* harmony export */   initDataStartParam: () => (/* binding */ Pc),\n/* harmony export */   initDataState: () => (/* binding */ yc),\n/* harmony export */   initDataUser: () => (/* binding */ xc),\n/* harmony export */   invoice: () => (/* binding */ em),\n/* harmony export */   invokeCustomMethod: () => (/* binding */ ke),\n/* harmony export */   isAccessDeniedError: () => (/* binding */ Wf),\n/* harmony export */   isAuthenticatingBiometry: () => (/* binding */ Ru),\n/* harmony export */   isBackButtonMounted: () => (/* binding */ cu),\n/* harmony export */   isBackButtonSupported: () => (/* binding */ lu),\n/* harmony export */   isBackButtonVisible: () => (/* binding */ uu),\n/* harmony export */   isBiometryAvailable: () => (/* binding */ Au),\n/* harmony export */   isBiometryMounted: () => (/* binding */ qu),\n/* harmony export */   isBiometryMounting: () => (/* binding */ Ou),\n/* harmony export */   isBiometrySupported: () => (/* binding */ Mu),\n/* harmony export */   isCSSVarsBoundError: () => (/* binding */ qf),\n/* harmony export */   isCancelledError: () => (/* binding */ $f),\n/* harmony export */   isCheckingHomeScreenStatus: () => (/* binding */ Pm),\n/* harmony export */   isClosingBehaviorMounted: () => (/* binding */ so),\n/* harmony export */   isClosingConfirmationEnabled: () => (/* binding */ Zu),\n/* harmony export */   isCloudStorageSupported: () => (/* binding */ cc),\n/* harmony export */   isColorDark: () => (/* binding */ Ro),\n/* harmony export */   isConcurrentCallError: () => (/* binding */ Hf),\n/* harmony export */   isFullscreen: () => (/* binding */ qa),\n/* harmony export */   isFullscreenFailedError: () => (/* binding */ Uf),\n/* harmony export */   isFunctionNotAvailableError: () => (/* binding */ Lf),\n/* harmony export */   isHapticFeedbackSupported: () => (/* binding */ mc),\n/* harmony export */   isInvalidArguments: () => (/* binding */ Rf),\n/* harmony export */   isInvalidEnvError: () => (/* binding */ Vf),\n/* harmony export */   isInvalidLaunchParamsError: () => (/* binding */ xf),\n/* harmony export */   isInvoiceOpened: () => (/* binding */ Vc),\n/* harmony export */   isInvoiceSupported: () => (/* binding */ Bc),\n/* harmony export */   isInvokeCustomMethodError: () => (/* binding */ Bf),\n/* harmony export */   isLaunchParamsRetrieveError: () => (/* binding */ Pf),\n/* harmony export */   isLocationManagerAccessGranted: () => (/* binding */ Fc),\n/* harmony export */   isLocationManagerAccessRequested: () => (/* binding */ Wc),\n/* harmony export */   isLocationManagerAvailable: () => (/* binding */ Hc),\n/* harmony export */   isLocationManagerMounted: () => (/* binding */ tl),\n/* harmony export */   isLocationManagerMounting: () => (/* binding */ Zc),\n/* harmony export */   isLocationManagerSupported: () => (/* binding */ Rc),\n/* harmony export */   isMainButtonEnabled: () => (/* binding */ Hl),\n/* harmony export */   isMainButtonLoaderVisible: () => (/* binding */ Fl),\n/* harmony export */   isMainButtonMounted: () => (/* binding */ Wo),\n/* harmony export */   isMainButtonVisible: () => (/* binding */ Wl),\n/* harmony export */   isMethodMethodParameterUnsupportedError: () => (/* binding */ Mf),\n/* harmony export */   isMethodUnsupportedError: () => (/* binding */ kf),\n/* harmony export */   isMiniAppActive: () => (/* binding */ fp),\n/* harmony export */   isMiniAppCssVarsBound: () => (/* binding */ pp),\n/* harmony export */   isMiniAppDark: () => (/* binding */ dp),\n/* harmony export */   isMiniAppMounted: () => (/* binding */ Ep),\n/* harmony export */   isMiniAppMounting: () => (/* binding */ vp),\n/* harmony export */   isMiniAppSupported: () => (/* binding */ mp),\n/* harmony export */   isNotAvailableError: () => (/* binding */ Df),\n/* harmony export */   isPopupOpened: () => (/* binding */ xp),\n/* harmony export */   isPopupShown: () => (/* binding */ Ip),\n/* harmony export */   isPopupSupported: () => (/* binding */ kp),\n/* harmony export */   isQrScannerOpened: () => (/* binding */ Up),\n/* harmony export */   isQrScannerSupported: () => (/* binding */ Vp),\n/* harmony export */   isRGB: () => (/* binding */ Ee),\n/* harmony export */   isRGBShort: () => (/* binding */ wl),\n/* harmony export */   isRequestingBiometryAccess: () => (/* binding */ Qu),\n/* harmony export */   isRequestingContact: () => (/* binding */ Nm),\n/* harmony export */   isRequestingEmojiStatusAccess: () => (/* binding */ _m),\n/* harmony export */   isRequestingLocation: () => (/* binding */ al),\n/* harmony export */   isRequestingPhoneAccess: () => (/* binding */ Im),\n/* harmony export */   isRequestingWriteAccess: () => (/* binding */ Hm),\n/* harmony export */   isSSR: () => (/* binding */ Dr),\n/* harmony export */   isSecondaryButtonEnabled: () => (/* binding */ Jp),\n/* harmony export */   isSecondaryButtonLoaderVisible: () => (/* binding */ Kp),\n/* harmony export */   isSecondaryButtonMounted: () => (/* binding */ da),\n/* harmony export */   isSecondaryButtonSupported: () => (/* binding */ nd),\n/* harmony export */   isSecondaryButtonVisible: () => (/* binding */ Yp),\n/* harmony export */   isSetEmojiStatusError: () => (/* binding */ Ff),\n/* harmony export */   isSettingEmojiStatus: () => (/* binding */ vm),\n/* harmony export */   isSettingsButtonMounted: () => (/* binding */ cd),\n/* harmony export */   isSettingsButtonSupported: () => (/* binding */ ld),\n/* harmony export */   isSettingsButtonVisible: () => (/* binding */ ud),\n/* harmony export */   isShareMessageError: () => (/* binding */ zf),\n/* harmony export */   isSwipeBehaviorMounted: () => (/* binding */ bd),\n/* harmony export */   isSwipeBehaviorSupported: () => (/* binding */ yd),\n/* harmony export */   isTMA: () => (/* binding */ Ir),\n/* harmony export */   isThemeParamsCssVarsBound: () => (/* binding */ kl),\n/* harmony export */   isThemeParamsDark: () => (/* binding */ Ol),\n/* harmony export */   isThemeParamsMounted: () => (/* binding */ ap),\n/* harmony export */   isThemeParamsMounting: () => (/* binding */ sp),\n/* harmony export */   isTimeoutError: () => (/* binding */ Sf),\n/* harmony export */   isUnknownEnvError: () => (/* binding */ Tf),\n/* harmony export */   isVerticalSwipesEnabled: () => (/* binding */ gd),\n/* harmony export */   isViewportCssVarsBound: () => (/* binding */ Vd),\n/* harmony export */   isViewportExpanded: () => (/* binding */ Cd),\n/* harmony export */   isViewportMounted: () => (/* binding */ qd),\n/* harmony export */   isViewportMounting: () => (/* binding */ Id),\n/* harmony export */   isViewportStable: () => (/* binding */ Ad),\n/* harmony export */   locationManager: () => (/* binding */ tm),\n/* harmony export */   locationManagerMountError: () => (/* binding */ Xc),\n/* harmony export */   locationManagerMountPromise: () => (/* binding */ Yc),\n/* harmony export */   mainButton: () => (/* binding */ om),\n/* harmony export */   mainButtonBackgroundColor: () => (/* binding */ Ll),\n/* harmony export */   mainButtonHasShineEffect: () => (/* binding */ Rl),\n/* harmony export */   mainButtonState: () => (/* binding */ zn),\n/* harmony export */   mainButtonText: () => (/* binding */ Ul),\n/* harmony export */   mainButtonTextColor: () => (/* binding */ zl),\n/* harmony export */   miniApp: () => (/* binding */ im),\n/* harmony export */   miniAppBackgroundColor: () => (/* binding */ up),\n/* harmony export */   miniAppBackgroundColorRGB: () => (/* binding */ Zn),\n/* harmony export */   miniAppBottomBarColor: () => (/* binding */ cp),\n/* harmony export */   miniAppBottomBarColorRGB: () => (/* binding */ Xn),\n/* harmony export */   miniAppHeaderColor: () => (/* binding */ lp),\n/* harmony export */   miniAppHeaderColorRGB: () => (/* binding */ Xo),\n/* harmony export */   miniAppMountError: () => (/* binding */ wp),\n/* harmony export */   miniAppMountPromise: () => (/* binding */ oa),\n/* harmony export */   miniAppReady: () => (/* binding */ Sp),\n/* harmony export */   miniAppState: () => (/* binding */ ea),\n/* harmony export */   mockTelegramEnv: () => (/* binding */ Of),\n/* harmony export */   mountBackButton: () => (/* binding */ du),\n/* harmony export */   mountBiometry: () => (/* binding */ Bu),\n/* harmony export */   mountBiometryPromise: () => (/* binding */ to),\n/* harmony export */   mountClosingBehavior: () => (/* binding */ nc),\n/* harmony export */   mountLocationManager: () => (/* binding */ Kc),\n/* harmony export */   mountMainButton: () => (/* binding */ Jl),\n/* harmony export */   mountMiniApp: () => (/* binding */ gp),\n/* harmony export */   mountMiniAppSync: () => (/* binding */ $p),\n/* harmony export */   mountSecondaryButton: () => (/* binding */ rd),\n/* harmony export */   mountSettingsButton: () => (/* binding */ dd),\n/* harmony export */   mountSwipeBehavior: () => (/* binding */ $d),\n/* harmony export */   mountThemeParams: () => (/* binding */ Jo),\n/* harmony export */   mountThemeParamsSync: () => (/* binding */ Yo),\n/* harmony export */   mountViewport: () => (/* binding */ Od),\n/* harmony export */   off: () => (/* binding */ B),\n/* harmony export */   offAddToHomeScreenFailed: () => (/* binding */ $m),\n/* harmony export */   offAddedToHomeScreen: () => (/* binding */ Cm),\n/* harmony export */   offBackButtonClick: () => (/* binding */ mu),\n/* harmony export */   offMainButtonClick: () => (/* binding */ Yl),\n/* harmony export */   offSecondaryButtonClick: () => (/* binding */ od),\n/* harmony export */   offSettingsButtonClick: () => (/* binding */ md),\n/* harmony export */   on: () => (/* binding */ S),\n/* harmony export */   onAddToHomeScreenFailed: () => (/* binding */ Em),\n/* harmony export */   onAddedToHomeScreen: () => (/* binding */ Sm),\n/* harmony export */   onBackButtonClick: () => (/* binding */ fu),\n/* harmony export */   onMainButtonClick: () => (/* binding */ Kl),\n/* harmony export */   onSecondaryButtonClick: () => (/* binding */ sd),\n/* harmony export */   onSettingsButtonClick: () => (/* binding */ fd),\n/* harmony export */   openBiometrySettings: () => (/* binding */ Fu),\n/* harmony export */   openInvoice: () => (/* binding */ Dc),\n/* harmony export */   openInvoiceError: () => (/* binding */ Lc),\n/* harmony export */   openInvoicePromise: () => (/* binding */ Nc),\n/* harmony export */   openLink: () => (/* binding */ Tm),\n/* harmony export */   openLocationManagerSettings: () => (/* binding */ ul),\n/* harmony export */   openPopup: () => (/* binding */ Mp),\n/* harmony export */   openPopupError: () => (/* binding */ Tp),\n/* harmony export */   openPopupPromise: () => (/* binding */ Pp),\n/* harmony export */   openQrScanner: () => (/* binding */ Wp),\n/* harmony export */   openQrScannerError: () => (/* binding */ zp),\n/* harmony export */   openQrScannerPromise: () => (/* binding */ pa),\n/* harmony export */   openTelegramLink: () => (/* binding */ uf),\n/* harmony export */   parseInitDataQuery: () => (/* binding */ nm),\n/* harmony export */   parseLaunchParamsQuery: () => (/* binding */ rm),\n/* harmony export */   popup: () => (/* binding */ um),\n/* harmony export */   postEvent: () => (/* binding */ _),\n/* harmony export */   postMessage: () => (/* binding */ Wi),\n/* harmony export */   postMessageImplementation: () => (/* binding */ Ge),\n/* harmony export */   qrScanner: () => (/* binding */ cm),\n/* harmony export */   readTextFromClipboard: () => (/* binding */ Gm),\n/* harmony export */   request: () => (/* binding */ C),\n/* harmony export */   requestBiometry: () => (/* binding */ ku),\n/* harmony export */   requestBiometryAccess: () => (/* binding */ Gu),\n/* harmony export */   requestBiometryAccessError: () => (/* binding */ Ju),\n/* harmony export */   requestBiometryAccessPromise: () => (/* binding */ ro),\n/* harmony export */   requestContact: () => (/* binding */ qm),\n/* harmony export */   requestContactError: () => (/* binding */ Vm),\n/* harmony export */   requestContactPromise: () => (/* binding */ Dm),\n/* harmony export */   requestContentSafeAreaInsets: () => (/* binding */ Yr),\n/* harmony export */   requestEmojiStatusAccess: () => (/* binding */ mm),\n/* harmony export */   requestEmojiStatusAccessError: () => (/* binding */ bm),\n/* harmony export */   requestEmojiStatusAccessPromise: () => (/* binding */ hm),\n/* harmony export */   requestFullscreen: () => (/* binding */ Gd),\n/* harmony export */   requestLocation: () => (/* binding */ ol),\n/* harmony export */   requestLocationError: () => (/* binding */ il),\n/* harmony export */   requestLocationPromise: () => (/* binding */ So),\n/* harmony export */   requestPhoneAccess: () => (/* binding */ mf),\n/* harmony export */   requestPhoneAccessError: () => (/* binding */ jm),\n/* harmony export */   requestPhoneAccessPromise: () => (/* binding */ Om),\n/* harmony export */   requestSafeAreaInsets: () => (/* binding */ Zr),\n/* harmony export */   requestViewport: () => (/* binding */ Md),\n/* harmony export */   requestWriteAccess: () => (/* binding */ Lm),\n/* harmony export */   requestWriteAccessError: () => (/* binding */ Fm),\n/* harmony export */   requestWriteAccessPromise: () => (/* binding */ Rm),\n/* harmony export */   restoreInitData: () => (/* binding */ Mc),\n/* harmony export */   retrieveLaunchParams: () => (/* binding */ $n),\n/* harmony export */   retrieveRawInitData: () => (/* binding */ zi),\n/* harmony export */   retrieveRawLaunchParams: () => (/* binding */ qs),\n/* harmony export */   safeCall: () => (/* binding */ Zm),\n/* harmony export */   secondaryButton: () => (/* binding */ lm),\n/* harmony export */   secondaryButtonBackgroundColor: () => (/* binding */ Gp),\n/* harmony export */   secondaryButtonHasShineEffect: () => (/* binding */ Qp),\n/* harmony export */   secondaryButtonPosition: () => (/* binding */ Zp),\n/* harmony export */   secondaryButtonState: () => (/* binding */ cr),\n/* harmony export */   secondaryButtonText: () => (/* binding */ Xp),\n/* harmony export */   secondaryButtonTextColor: () => (/* binding */ ed),\n/* harmony export */   sendData: () => (/* binding */ Qm),\n/* harmony export */   serializeInitDataQuery: () => (/* binding */ Al),\n/* harmony export */   serializeLaunchParamsQuery: () => (/* binding */ sm),\n/* harmony export */   serializeToQuery: () => (/* binding */ Lo),\n/* harmony export */   setCloudStorageItem: () => (/* binding */ dc),\n/* harmony export */   setDebug: () => (/* binding */ jf),\n/* harmony export */   setEmojiStatus: () => (/* binding */ ym),\n/* harmony export */   setEmojiStatusError: () => (/* binding */ wm),\n/* harmony export */   setEmojiStatusPromise: () => (/* binding */ gm),\n/* harmony export */   setMainButtonParams: () => (/* binding */ Zl),\n/* harmony export */   setMiniAppBackgroundColor: () => (/* binding */ rr),\n/* harmony export */   setMiniAppBottomBarColor: () => (/* binding */ sr),\n/* harmony export */   setMiniAppHeaderColor: () => (/* binding */ or),\n/* harmony export */   setSecondaryButtonParams: () => (/* binding */ ad),\n/* harmony export */   settingsButton: () => (/* binding */ pm),\n/* harmony export */   shareMessage: () => (/* binding */ Jm),\n/* harmony export */   shareStory: () => (/* binding */ Km),\n/* harmony export */   shareURL: () => (/* binding */ Bm),\n/* harmony export */   showBackButton: () => (/* binding */ hu),\n/* harmony export */   showPopup: () => (/* binding */ Bp),\n/* harmony export */   showPopupError: () => (/* binding */ jp),\n/* harmony export */   showPopupPromise: () => (/* binding */ Op),\n/* harmony export */   showSettingsButton: () => (/* binding */ hd),\n/* harmony export */   supports: () => (/* binding */ fe),\n/* harmony export */   swipeBehavior: () => (/* binding */ dm),\n/* harmony export */   switchInlineQuery: () => (/* binding */ Ym),\n/* harmony export */   targetOrigin: () => (/* binding */ Ui),\n/* harmony export */   themeParams: () => (/* binding */ am),\n/* harmony export */   themeParamsAccentTextColor: () => (/* binding */ Pl),\n/* harmony export */   themeParamsBackgroundColor: () => (/* binding */ mt),\n/* harmony export */   themeParamsBottomBarBgColor: () => (/* binding */ Fo),\n/* harmony export */   themeParamsButtonColor: () => (/* binding */ Un),\n/* harmony export */   themeParamsButtonTextColor: () => (/* binding */ Ho),\n/* harmony export */   themeParamsDestructiveTextColor: () => (/* binding */ xl),\n/* harmony export */   themeParamsHeaderBackgroundColor: () => (/* binding */ Tl),\n/* harmony export */   themeParamsHintColor: () => (/* binding */ Bl),\n/* harmony export */   themeParamsLinkColor: () => (/* binding */ Il),\n/* harmony export */   themeParamsMountError: () => (/* binding */ op),\n/* harmony export */   themeParamsMountPromise: () => (/* binding */ Ko),\n/* harmony export */   themeParamsSecondaryBackgroundColor: () => (/* binding */ Ze),\n/* harmony export */   themeParamsSectionBackgroundColor: () => (/* binding */ jl),\n/* harmony export */   themeParamsSectionHeaderTextColor: () => (/* binding */ ql),\n/* harmony export */   themeParamsSectionSeparatorColor: () => (/* binding */ Dl),\n/* harmony export */   themeParamsState: () => (/* binding */ Ml),\n/* harmony export */   themeParamsSubtitleTextColor: () => (/* binding */ Nl),\n/* harmony export */   themeParamsTextColor: () => (/* binding */ Vl),\n/* harmony export */   toRGB: () => (/* binding */ El),\n/* harmony export */   transformQueryUsing: () => (/* binding */ Do),\n/* harmony export */   unmountBackButton: () => (/* binding */ _u),\n/* harmony export */   unmountBiometry: () => (/* binding */ Ku),\n/* harmony export */   unmountClosingBehavior: () => (/* binding */ rc),\n/* harmony export */   unmountLocationManager: () => (/* binding */ cl),\n/* harmony export */   unmountMainButton: () => (/* binding */ Xl),\n/* harmony export */   unmountMiniApp: () => (/* binding */ Cp),\n/* harmony export */   unmountSecondaryButton: () => (/* binding */ id),\n/* harmony export */   unmountSettingsButton: () => (/* binding */ _d),\n/* harmony export */   unmountSwipeBehavior: () => (/* binding */ Sd),\n/* harmony export */   unmountThemeParams: () => (/* binding */ ip),\n/* harmony export */   unmountViewport: () => (/* binding */ Dd),\n/* harmony export */   updateBiometryToken: () => (/* binding */ Yu),\n/* harmony export */   viewport: () => (/* binding */ fm),\n/* harmony export */   viewportContentSafeAreaInsetBottom: () => (/* binding */ va),\n/* harmony export */   viewportContentSafeAreaInsetLeft: () => (/* binding */ wa),\n/* harmony export */   viewportContentSafeAreaInsetRight: () => (/* binding */ Ea),\n/* harmony export */   viewportContentSafeAreaInsetTop: () => (/* binding */ $a),\n/* harmony export */   viewportContentSafeAreaInsets: () => (/* binding */ vr),\n/* harmony export */   viewportHeight: () => (/* binding */ yr),\n/* harmony export */   viewportMountError: () => (/* binding */ jd),\n/* harmony export */   viewportMountPromise: () => (/* binding */ Ia),\n/* harmony export */   viewportSafeAreaInsetBottom: () => (/* binding */ Sa),\n/* harmony export */   viewportSafeAreaInsetLeft: () => (/* binding */ Ca),\n/* harmony export */   viewportSafeAreaInsetRight: () => (/* binding */ Aa),\n/* harmony export */   viewportSafeAreaInsetTop: () => (/* binding */ ka),\n/* harmony export */   viewportSafeAreaInsets: () => (/* binding */ wr),\n/* harmony export */   viewportStableHeight: () => (/* binding */ gr),\n/* harmony export */   viewportState: () => (/* binding */ ya),\n/* harmony export */   viewportWidth: () => (/* binding */ ga),\n/* harmony export */   wrapSafe: () => (/* binding */ A)\n/* harmony export */ });\n// @__NO_SIDE_EFFECTS__\nfunction is(e) {\n  return {\n    lang: (e == null ? void 0 : e.lang) ?? void 0,\n    message: e == null ? void 0 : e.message,\n    abortEarly: (e == null ? void 0 : e.abortEarly) ?? void 0,\n    abortPipeEarly: (e == null ? void 0 : e.abortPipeEarly) ?? void 0\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction za(e, t) {\n  var n;\n  return (n = void 0) == null ? void 0 : n.get(t);\n}\n// @__NO_SIDE_EFFECTS__\nfunction Ga(e) {\n  var t, n;\n  const r = typeof e;\n  return r === \"string\" ? `\"${e}\"` : r === \"number\" || r === \"bigint\" || r === \"boolean\" ? `${e}` : r === \"object\" || r === \"function\" ? (e && ((n = (t = Object.getPrototypeOf(e)) == null ? void 0 : t.constructor) == null ? void 0 : n.name)) ?? \"null\" : r;\n}\nfunction we(e, t, n, r, s) {\n  const o = s && \"input\" in s ? s.input : n.value, a = (s == null ? void 0 : s.expected) ?? e.expects ?? null, i = (s == null ? void 0 : s.received) ?? /* @__PURE__ */ Ga(o), u = {\n    kind: e.kind,\n    type: e.type,\n    input: o,\n    expected: a,\n    received: i,\n    message: `Invalid ${t}: ${a ? `Expected ${a} but r` : \"R\"}eceived ${i}`,\n    requirement: e.requirement,\n    path: s == null ? void 0 : s.path,\n    issues: s == null ? void 0 : s.issues,\n    lang: r.lang,\n    abortEarly: r.abortEarly,\n    abortPipeEarly: r.abortPipeEarly\n  }, c = e.kind === \"schema\", l = (s == null ? void 0 : s.message) ?? e.message ?? /* @__PURE__ */ za(e.reference, u.lang) ?? (c ? (u.lang, void 0) : null) ?? r.message ?? (u.lang, void 0);\n  l && (u.message = typeof l == \"function\" ? (\n    // @ts-expect-error\n    l(u)\n  ) : l), c && (n.typed = !1), n.issues ? n.issues.push(u) : n.issues = [u];\n}\n// @__NO_SIDE_EFFECTS__\nfunction K(e) {\n  return {\n    version: 1,\n    vendor: \"valibot\",\n    validate(t) {\n      return e[\"~run\"]({ value: t }, /* @__PURE__ */ is());\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction Qa(e, t) {\n  return Object.hasOwn(e, t) && t !== \"__proto__\" && t !== \"prototype\" && t !== \"constructor\";\n}\nvar Ja = class extends Error {\n  /**\n   * Creates a Valibot error with useful information.\n   *\n   * @param issues The error issues.\n   */\n  constructor(e) {\n    super(e[0].message), this.name = \"ValiError\", this.issues = e;\n  }\n};\n// @__NO_SIDE_EFFECTS__\nfunction pn(e, t, n) {\n  return typeof e.default == \"function\" ? (\n    // @ts-expect-error\n    e.default(t, n)\n  ) : (\n    // @ts-expect-error\n    e.default\n  );\n}\n// @__NO_SIDE_EFFECTS__\nfunction rt(e, t) {\n  return !e[\"~run\"]({ value: t }, { abortEarly: !0 }).issues;\n}\n// @__NO_SIDE_EFFECTS__\nfunction us() {\n  return {\n    kind: \"schema\",\n    type: \"any\",\n    reference: us,\n    expects: \"any\",\n    async: !1,\n    get \"~standard\"() {\n      return /* @__PURE__ */ K(this);\n    },\n    \"~run\"(e) {\n      return e.typed = !0, e;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction Lt(e) {\n  return {\n    kind: \"schema\",\n    type: \"boolean\",\n    reference: Lt,\n    expects: \"boolean\",\n    async: !1,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ K(this);\n    },\n    \"~run\"(t, n) {\n      return typeof t.value == \"boolean\" ? t.typed = !0 : we(this, \"type\", t, n), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction dn(e) {\n  return {\n    kind: \"schema\",\n    type: \"function\",\n    reference: dn,\n    expects: \"Function\",\n    async: !1,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ K(this);\n    },\n    \"~run\"(t, n) {\n      return typeof t.value == \"function\" ? t.typed = !0 : we(this, \"type\", t, n), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction U(e, t) {\n  return {\n    kind: \"schema\",\n    type: \"loose_object\",\n    reference: U,\n    expects: \"Object\",\n    async: !1,\n    entries: e,\n    message: t,\n    get \"~standard\"() {\n      return /* @__PURE__ */ K(this);\n    },\n    \"~run\"(n, r) {\n      var s;\n      const o = n.value;\n      if (o && typeof o == \"object\") {\n        n.typed = !0, n.value = {};\n        for (const a in this.entries) {\n          const i = this.entries[a];\n          if (a in o || (i.type === \"exact_optional\" || i.type === \"optional\" || i.type === \"nullish\") && // @ts-expect-error\n          i.default !== void 0) {\n            const u = a in o ? (\n              // @ts-expect-error\n              o[a]\n            ) : /* @__PURE__ */ pn(i), c = i[\"~run\"]({ value: u }, r);\n            if (c.issues) {\n              const l = {\n                type: \"object\",\n                origin: \"value\",\n                input: o,\n                key: a,\n                value: u\n              };\n              for (const p of c.issues)\n                p.path ? p.path.unshift(l) : p.path = [l], (s = n.issues) == null || s.push(p);\n              if (n.issues || (n.issues = c.issues), r.abortEarly) {\n                n.typed = !1;\n                break;\n              }\n            }\n            c.typed || (n.typed = !1), n.value[a] = c.value;\n          } else if (i.type !== \"exact_optional\" && i.type !== \"optional\" && i.type !== \"nullish\" && (we(this, \"key\", n, r, {\n            input: void 0,\n            expected: `\"${a}\"`,\n            path: [\n              {\n                type: \"object\",\n                origin: \"key\",\n                input: o,\n                key: a,\n                // @ts-expect-error\n                value: o[a]\n              }\n            ]\n          }), r.abortEarly))\n            break;\n        }\n        if (!n.issues || !r.abortEarly)\n          for (const a in o)\n            /* @__PURE__ */ Qa(o, a) && !(a in this.entries) && (n.value[a] = o[a]);\n      } else\n        we(this, \"type\", n, r);\n      return n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction Te(e, t) {\n  return {\n    kind: \"schema\",\n    type: \"nullish\",\n    reference: Te,\n    expects: `(${e.expects} | null | undefined)`,\n    async: !1,\n    wrapped: e,\n    default: t,\n    get \"~standard\"() {\n      return /* @__PURE__ */ K(this);\n    },\n    \"~run\"(n, r) {\n      return (n.value === null || n.value === void 0) && (this.default !== void 0 && (n.value = /* @__PURE__ */ pn(this, n, r)), n.value === null || n.value === void 0) ? (n.typed = !0, n) : this.wrapped[\"~run\"](n, r);\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction Rt(e) {\n  return {\n    kind: \"schema\",\n    type: \"number\",\n    reference: Rt,\n    expects: \"number\",\n    async: !1,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ K(this);\n    },\n    \"~run\"(t, n) {\n      return typeof t.value == \"number\" && !isNaN(t.value) ? t.typed = !0 : we(this, \"type\", t, n), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction Ht(e, t) {\n  return {\n    kind: \"schema\",\n    type: \"optional\",\n    reference: Ht,\n    expects: `(${e.expects} | undefined)`,\n    async: !1,\n    wrapped: e,\n    default: t,\n    get \"~standard\"() {\n      return /* @__PURE__ */ K(this);\n    },\n    \"~run\"(n, r) {\n      return n.value === void 0 && (this.default !== void 0 && (n.value = /* @__PURE__ */ pn(this, n, r)), n.value === void 0) ? (n.typed = !0, n) : this.wrapped[\"~run\"](n, r);\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction re(e) {\n  return {\n    kind: \"schema\",\n    type: \"string\",\n    reference: re,\n    expects: \"string\",\n    async: !1,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ K(this);\n    },\n    \"~run\"(t, n) {\n      return typeof t.value == \"string\" ? t.typed = !0 : we(this, \"type\", t, n), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction cs() {\n  return {\n    kind: \"schema\",\n    type: \"unknown\",\n    reference: cs,\n    expects: \"unknown\",\n    async: !1,\n    get \"~standard\"() {\n      return /* @__PURE__ */ K(this);\n    },\n    \"~run\"(e) {\n      return e.typed = !0, e;\n    }\n  };\n}\nfunction Ft(e, t, n) {\n  const r = e[\"~run\"]({ value: t }, /* @__PURE__ */ is(n));\n  if (r.issues)\n    throw new Ja(r.issues);\n  return r.value;\n}\n// @__NO_SIDE_EFFECTS__\nfunction ls(...e) {\n  return {\n    ...e[0],\n    pipe: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ K(this);\n    },\n    \"~run\"(t, n) {\n      for (const r of e)\n        if (r.kind !== \"metadata\") {\n          if (t.issues && (r.kind === \"schema\" || r.kind === \"transformation\")) {\n            t.typed = !1;\n            break;\n          }\n          (!t.issues || !n.abortEarly && !n.abortPipeEarly) && (t = r[\"~run\"](t, n));\n        }\n      return t;\n    }\n  };\n}\nfunction ps(e) {\n  return /* @__PURE__ */ rt(\n    /* @__PURE__ */ U({ TelegramWebviewProxy: /* @__PURE__ */ U({ postEvent: /* @__PURE__ */ dn() }) }),\n    e\n  );\n}\nfunction ds() {\n  try {\n    return window.self !== window.top;\n  } catch {\n    return !0;\n  }\n}\nvar Ka = Object.defineProperty, Ya = (e, t, n) => t in e ? Ka(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n, Wt = (e, t, n) => Ya(e, typeof t != \"symbol\" ? t + \"\" : t, n);\nfunction Za(e) {\n  return (t) => t instanceof e;\n}\nfunction fs(e, t) {\n  t || (t = []);\n  class n extends Error {\n    constructor(...s) {\n      const o = typeof t == \"function\" ? t(...s) : typeof t == \"string\" ? [t] : t || [];\n      super(...o), this.name = e;\n    }\n  }\n  return Object.defineProperty(n, \"name\", { value: e }), [n, Za(n)];\n}\nconst [Xa, $f] = fs(\"CancelledError\", \"Promise was canceled\"), [ei, Sf] = fs(\n  \"TimeoutError\",\n  (e, t) => [`Timeout reached: ${e}ms`, { cause: t }]\n), ms = Symbol(\"Resolved\");\nfunction $r(e) {\n  return Array.isArray(e) && e[0] === ms;\n}\nfunction ti(e) {\n  return [ms, e];\n}\nfunction Sr(e, t) {\n  return e.reject = t.reject, e.abort = t.abort, e;\n}\nlet fn = class Ut extends Promise {\n  constructor(t, n) {\n    let r, s;\n    super((o, a) => {\n      let i, u;\n      typeof t == \"function\" ? (i = t, u = n) : u = t;\n      const c = [], l = (d) => (...j) => {\n        const ee = d(...j);\n        return c.forEach((kt) => kt()), ee;\n      }, p = new AbortController(), { signal: m } = p;\n      s = (d) => {\n        !m.aborted && p.abort(d);\n      };\n      const f = () => m.reason, k = (d) => {\n        const j = () => {\n          d(f());\n        };\n        m.addEventListener(\"abort\", j, !0);\n        const ee = () => {\n          m.removeEventListener(\"abort\", j, !0);\n        };\n        return c.push(ee), ee;\n      }, ge = l((d) => {\n        o(d), s(ti(d));\n      });\n      r = l((d) => {\n        a(d), s(d);\n      }), u || (u = {});\n      const { abortSignal: M, rejectOnAbort: ne = !0 } = u;\n      if (M)\n        if (M.aborted) {\n          const { reason: d } = M;\n          if (ne)\n            return r(d);\n          s(d);\n        } else {\n          const d = () => {\n            s(M.reason);\n          };\n          M.addEventListener(\"abort\", d), c.push(() => {\n            M.removeEventListener(\"abort\", d);\n          });\n        }\n      ne && k(a);\n      const { timeout: E } = u;\n      if (E) {\n        const d = setTimeout(() => {\n          s(new ei(E));\n        }, E);\n        c.push(() => {\n          clearTimeout(d);\n        });\n      }\n      const $ = () => m.aborted, I = () => $r(f()), R = () => {\n        const d = f();\n        return $r(d) ? d[1] : void 0;\n      };\n      try {\n        const d = i && i(ge, r, {\n          abortReason: f,\n          abortSignal: m,\n          isAborted: $,\n          isResolved: I,\n          onAborted: k,\n          onResolved: (j) => k(() => {\n            I() && j(R());\n          }),\n          resolved: R,\n          throwIfAborted() {\n            if ($())\n              throw f();\n          }\n        });\n        d instanceof Promise && d.catch(r);\n      } catch (d) {\n        r(d);\n      }\n    }), Wt(this, \"abort\"), Wt(this, \"reject\"), this.abort = s, this.reject = r;\n  }\n  /**\n   * Creates a new AbortablePromise instance using an executor, resolving the promise when a result\n   * was returned.\n   * @param fn - function returning promise result.\n   * @param options - additional options.\n   */\n  static fn(t, n) {\n    return new Ut(async (r, s, o) => {\n      try {\n        r(await t(o));\n      } catch (a) {\n        s(a);\n      }\n    }, n);\n  }\n  static resolve(t) {\n    return this.fn(() => t);\n  }\n  /**\n   * @see Promise.reject\n   */\n  static reject(t) {\n    return new Ut((n, r) => {\n      r(t);\n    });\n  }\n  /**\n   * Aborts the promise with the cancel error.\n   */\n  cancel() {\n    this.abort(new Xa());\n  }\n  /**\n   * @see Promise.catch\n   */\n  catch(t) {\n    return this.then(void 0, t);\n  }\n  /**\n   * @see Promise.finally\n   */\n  finally(t) {\n    return Sr(super.finally(t), this);\n  }\n  /**\n   * @see Promise.then\n   */\n  then(t, n) {\n    return Sr(super.then(t, n), this);\n  }\n};\nfunction Cr(e, t) {\n  return e.resolve = t.resolve, e;\n}\nlet Cf = class zt extends fn {\n  constructor(t, n) {\n    let r, s;\n    typeof t == \"function\" ? (r = t, s = n) : s = t;\n    let o;\n    super((a, i, u) => {\n      o = a, r && r(a, i, u);\n    }, s), Wt(this, \"resolve\"), this.resolve = o;\n  }\n  /**\n   * Creates a new ManualPromise instance using an executor, resolving the promise when a result\n   * was returned.\n   * @param fn - function returning promise result.\n   * @param options - additional options.\n   */\n  static fn(t, n) {\n    return new zt((r, s, o) => {\n      try {\n        Promise.resolve(t(o)).then(r, s);\n      } catch (a) {\n        s(a);\n      }\n    }, n);\n  }\n  static resolve(t) {\n    return this.fn(() => t);\n  }\n  /**\n   * @see Promise.reject\n   */\n  static reject(t) {\n    return new zt((n, r) => {\n      r(t);\n    });\n  }\n  /**\n   * @see Promise.catch\n   */\n  catch(t) {\n    return this.then(void 0, t);\n  }\n  /**\n   * @see Promise.finally\n   */\n  finally(t) {\n    return Cr(super.finally(t), this);\n  }\n  /**\n   * @see Promise.then\n   */\n  then(t, n) {\n    return Cr(super.then(t, n), this);\n  }\n};\nfunction ni(e) {\n  return e.replace(/_[a-z]/g, (t) => t[1].toUpperCase());\n}\nfunction ri(e) {\n  return Object.entries(e).reduce((t, [n, r]) => (t[ni(n)] = r, t), {});\n}\nfunction Gt(e) {\n  const t = ri(e);\n  for (const n in t) {\n    const r = t[n];\n    r && typeof r == \"object\" && !(r instanceof Date) && (t[n] = Array.isArray(r) ? r.map(Gt) : Gt(r));\n  }\n  return t;\n}\nfunction hs(e) {\n  return `tapps/${e}`;\n}\nfunction _s(e, t) {\n  sessionStorage.setItem(hs(e), JSON.stringify(t));\n}\nfunction si(e) {\n  const t = sessionStorage.getItem(hs(e));\n  try {\n    return t ? JSON.parse(t) : void 0;\n  } catch {\n  }\n}\nfunction oi(...e) {\n  const t = e.flat(1);\n  return [\n    t.push.bind(t),\n    () => {\n      t.forEach((n) => {\n        n();\n      });\n    }\n  ];\n}\n// @__NO_SIDE_EFFECTS__\nfunction ai(e, t) {\n  t || (t = {});\n  const {\n    textColor: n,\n    bgColor: r,\n    shouldLog: s\n  } = t, o = s === void 0 ? !0 : s, a = typeof o == \"boolean\" ? () => o : o;\n  function i(u, c, ...l) {\n    if (c || a()) {\n      const p = \"font-weight:bold;padding:0 5px;border-radius:5px\";\n      console[u](\n        `%c${Intl.DateTimeFormat(\"en-GB\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          second: \"2-digit\",\n          fractionalSecondDigits: 3,\n          timeZone: \"UTC\"\n        }).format(/* @__PURE__ */ new Date())}%c / %c${e}`,\n        `${p};background-color: lightblue;color:black`,\n        \"\",\n        `${p};${n ? `color:${n};` : \"\"}${r ? `background-color:${r}` : \"\"}`,\n        ...l\n      );\n    }\n  }\n  return [i.bind(void 0, \"log\"), i.bind(void 0, \"error\")];\n}\n// @__NO_SIDE_EFFECTS__\nfunction bs(e) {\n  return {\n    lang: (e == null ? void 0 : e.lang) ?? void 0,\n    message: e == null ? void 0 : e.message,\n    abortEarly: (e == null ? void 0 : e.abortEarly) ?? void 0,\n    abortPipeEarly: (e == null ? void 0 : e.abortPipeEarly) ?? void 0\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction ii(e, t) {\n  var n;\n  return (n = void 0) == null ? void 0 : n.get(t);\n}\n// @__NO_SIDE_EFFECTS__\nfunction ui(e) {\n  var t, n;\n  const r = typeof e;\n  return r === \"string\" ? `\"${e}\"` : r === \"number\" || r === \"bigint\" || r === \"boolean\" ? `${e}` : r === \"object\" || r === \"function\" ? (e && ((n = (t = Object.getPrototypeOf(e)) == null ? void 0 : t.constructor) == null ? void 0 : n.name)) ?? \"null\" : r;\n}\nfunction q(e, t, n, r, s) {\n  const o = s && \"input\" in s ? s.input : n.value, a = (s == null ? void 0 : s.expected) ?? e.expects ?? null, i = (s == null ? void 0 : s.received) ?? /* @__PURE__ */ ui(o), u = {\n    kind: e.kind,\n    type: e.type,\n    input: o,\n    expected: a,\n    received: i,\n    message: `Invalid ${t}: ${a ? `Expected ${a} but r` : \"R\"}eceived ${i}`,\n    requirement: e.requirement,\n    path: s == null ? void 0 : s.path,\n    issues: s == null ? void 0 : s.issues,\n    lang: r.lang,\n    abortEarly: r.abortEarly,\n    abortPipeEarly: r.abortPipeEarly\n  }, c = e.kind === \"schema\", l = (s == null ? void 0 : s.message) ?? e.message ?? /* @__PURE__ */ ii(e.reference, u.lang) ?? (c ? (u.lang, void 0) : null) ?? r.message ?? (u.lang, void 0);\n  l && (u.message = typeof l == \"function\" ? (\n    // @ts-expect-error\n    l(u)\n  ) : l), c && (n.typed = !1), n.issues ? n.issues.push(u) : n.issues = [u];\n}\n// @__NO_SIDE_EFFECTS__\nfunction F(e) {\n  return {\n    version: 1,\n    vendor: \"valibot\",\n    validate(t) {\n      return e[\"~run\"]({ value: t }, /* @__PURE__ */ bs());\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction ys(e, t) {\n  return Object.hasOwn(e, t) && t !== \"__proto__\" && t !== \"prototype\" && t !== \"constructor\";\n}\n// @__NO_SIDE_EFFECTS__\nfunction ci(e, t) {\n  const n = [...new Set(e)];\n  return n.length > 1 ? `(${n.join(` ${t} `)})` : n[0] ?? \"never\";\n}\nvar li = class extends Error {\n  /**\n   * Creates a Valibot error with useful information.\n   *\n   * @param issues The error issues.\n   */\n  constructor(e) {\n    super(e[0].message), this.name = \"ValiError\", this.issues = e;\n  }\n};\n// @__NO_SIDE_EFFECTS__\nfunction gs(e, t) {\n  return {\n    kind: \"validation\",\n    type: \"check\",\n    reference: gs,\n    async: !1,\n    expects: null,\n    requirement: e,\n    message: t,\n    \"~run\"(n, r) {\n      return n.typed && !this.requirement(n.value) && q(this, \"input\", n, r), n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction vs(e) {\n  return {\n    kind: \"validation\",\n    type: \"integer\",\n    reference: vs,\n    async: !1,\n    expects: null,\n    requirement: Number.isInteger,\n    message: e,\n    \"~run\"(t, n) {\n      return t.typed && !this.requirement(t.value) && q(this, \"integer\", t, n), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction oe(e) {\n  return {\n    kind: \"transformation\",\n    type: \"transform\",\n    reference: oe,\n    async: !1,\n    operation: e,\n    \"~run\"(t) {\n      return t.value = this.operation(t.value), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction ws(e, t, n) {\n  return typeof e.default == \"function\" ? (\n    // @ts-expect-error\n    e.default(t, n)\n  ) : (\n    // @ts-expect-error\n    e.default\n  );\n}\n// @__NO_SIDE_EFFECTS__\nfunction pi(e, t) {\n  return !e[\"~run\"]({ value: t }, { abortEarly: !0 }).issues;\n}\n// @__NO_SIDE_EFFECTS__\nfunction Be(e) {\n  return {\n    kind: \"schema\",\n    type: \"boolean\",\n    reference: Be,\n    expects: \"boolean\",\n    async: !1,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ F(this);\n    },\n    \"~run\"(t, n) {\n      return typeof t.value == \"boolean\" ? t.typed = !0 : q(this, \"type\", t, n), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction Es(e) {\n  return {\n    kind: \"schema\",\n    type: \"date\",\n    reference: Es,\n    expects: \"Date\",\n    async: !1,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ F(this);\n    },\n    \"~run\"(t, n) {\n      return t.value instanceof Date ? isNaN(t.value) ? q(this, \"type\", t, n, {\n        received: '\"Invalid Date\"'\n      }) : t.typed = !0 : q(this, \"type\", t, n), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction $s(e, t) {\n  return {\n    kind: \"schema\",\n    type: \"instance\",\n    reference: $s,\n    expects: e.name,\n    async: !1,\n    class: e,\n    message: t,\n    get \"~standard\"() {\n      return /* @__PURE__ */ F(this);\n    },\n    \"~run\"(n, r) {\n      return n.value instanceof this.class ? n.typed = !0 : q(this, \"type\", n, r), n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction mn(e) {\n  return {\n    kind: \"schema\",\n    type: \"lazy\",\n    reference: mn,\n    expects: \"unknown\",\n    async: !1,\n    getter: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ F(this);\n    },\n    \"~run\"(t, n) {\n      return this.getter(t.value)[\"~run\"](t, n);\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction Se(e, t) {\n  return {\n    kind: \"schema\",\n    type: \"loose_object\",\n    reference: Se,\n    expects: \"Object\",\n    async: !1,\n    entries: e,\n    message: t,\n    get \"~standard\"() {\n      return /* @__PURE__ */ F(this);\n    },\n    \"~run\"(n, r) {\n      var s;\n      const o = n.value;\n      if (o && typeof o == \"object\") {\n        n.typed = !0, n.value = {};\n        for (const a in this.entries) {\n          const i = this.entries[a];\n          if (a in o || (i.type === \"exact_optional\" || i.type === \"optional\" || i.type === \"nullish\") && // @ts-expect-error\n          i.default !== void 0) {\n            const u = a in o ? (\n              // @ts-expect-error\n              o[a]\n            ) : /* @__PURE__ */ ws(i), c = i[\"~run\"]({ value: u }, r);\n            if (c.issues) {\n              const l = {\n                type: \"object\",\n                origin: \"value\",\n                input: o,\n                key: a,\n                value: u\n              };\n              for (const p of c.issues)\n                p.path ? p.path.unshift(l) : p.path = [l], (s = n.issues) == null || s.push(p);\n              if (n.issues || (n.issues = c.issues), r.abortEarly) {\n                n.typed = !1;\n                break;\n              }\n            }\n            c.typed || (n.typed = !1), n.value[a] = c.value;\n          } else if (i.type !== \"exact_optional\" && i.type !== \"optional\" && i.type !== \"nullish\" && (q(this, \"key\", n, r, {\n            input: void 0,\n            expected: `\"${a}\"`,\n            path: [\n              {\n                type: \"object\",\n                origin: \"key\",\n                input: o,\n                key: a,\n                // @ts-expect-error\n                value: o[a]\n              }\n            ]\n          }), r.abortEarly))\n            break;\n        }\n        if (!n.issues || !r.abortEarly)\n          for (const a in o)\n            /* @__PURE__ */ ys(o, a) && !(a in this.entries) && (n.value[a] = o[a]);\n      } else\n        q(this, \"type\", n, r);\n      return n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction st(e) {\n  return {\n    kind: \"schema\",\n    type: \"number\",\n    reference: st,\n    expects: \"number\",\n    async: !1,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ F(this);\n    },\n    \"~run\"(t, n) {\n      return typeof t.value == \"number\" && !isNaN(t.value) ? t.typed = !0 : q(this, \"type\", t, n), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction v(e, t) {\n  return {\n    kind: \"schema\",\n    type: \"optional\",\n    reference: v,\n    expects: `(${e.expects} | undefined)`,\n    async: !1,\n    wrapped: e,\n    default: t,\n    get \"~standard\"() {\n      return /* @__PURE__ */ F(this);\n    },\n    \"~run\"(n, r) {\n      return n.value === void 0 && (this.default !== void 0 && (n.value = /* @__PURE__ */ ws(this, n, r)), n.value === void 0) ? (n.typed = !0, n) : this.wrapped[\"~run\"](n, r);\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction Ss(e, t, n) {\n  return {\n    kind: \"schema\",\n    type: \"record\",\n    reference: Ss,\n    expects: \"Object\",\n    async: !1,\n    key: e,\n    value: t,\n    message: n,\n    get \"~standard\"() {\n      return /* @__PURE__ */ F(this);\n    },\n    \"~run\"(r, s) {\n      var o, a;\n      const i = r.value;\n      if (i && typeof i == \"object\") {\n        r.typed = !0, r.value = {};\n        for (const u in i)\n          if (/* @__PURE__ */ ys(i, u)) {\n            const c = i[u], l = this.key[\"~run\"]({ value: u }, s);\n            if (l.issues) {\n              const m = {\n                type: \"object\",\n                origin: \"key\",\n                input: i,\n                key: u,\n                value: c\n              };\n              for (const f of l.issues)\n                f.path = [m], (o = r.issues) == null || o.push(f);\n              if (r.issues || (r.issues = l.issues), s.abortEarly) {\n                r.typed = !1;\n                break;\n              }\n            }\n            const p = this.value[\"~run\"](\n              { value: c },\n              s\n            );\n            if (p.issues) {\n              const m = {\n                type: \"object\",\n                origin: \"value\",\n                input: i,\n                key: u,\n                value: c\n              };\n              for (const f of p.issues)\n                f.path ? f.path.unshift(m) : f.path = [m], (a = r.issues) == null || a.push(f);\n              if (r.issues || (r.issues = p.issues), s.abortEarly) {\n                r.typed = !1;\n                break;\n              }\n            }\n            (!l.typed || !p.typed) && (r.typed = !1), l.typed && (r.value[l.value] = p.value);\n          }\n      } else\n        q(this, \"type\", r, s);\n      return r;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction y(e) {\n  return {\n    kind: \"schema\",\n    type: \"string\",\n    reference: y,\n    expects: \"string\",\n    async: !1,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ F(this);\n    },\n    \"~run\"(t, n) {\n      return typeof t.value == \"string\" ? t.typed = !0 : q(this, \"type\", t, n), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction Ar(e) {\n  let t;\n  if (e)\n    for (const n of e)\n      t ? t.push(...n.issues) : t = n.issues;\n  return t;\n}\n// @__NO_SIDE_EFFECTS__\nfunction hn(e, t) {\n  return {\n    kind: \"schema\",\n    type: \"union\",\n    reference: hn,\n    expects: /* @__PURE__ */ ci(\n      e.map((n) => n.expects),\n      \"|\"\n    ),\n    async: !1,\n    options: e,\n    message: t,\n    get \"~standard\"() {\n      return /* @__PURE__ */ F(this);\n    },\n    \"~run\"(n, r) {\n      let s, o, a;\n      for (const i of this.options) {\n        const u = i[\"~run\"]({ value: n.value }, r);\n        if (u.typed)\n          if (u.issues)\n            o ? o.push(u) : o = [u];\n          else {\n            s = u;\n            break;\n          }\n        else\n          a ? a.push(u) : a = [u];\n      }\n      if (s)\n        return s;\n      if (o) {\n        if (o.length === 1)\n          return o[0];\n        q(this, \"type\", n, r, {\n          issues: /* @__PURE__ */ Ar(o)\n        }), n.typed = !0;\n      } else {\n        if ((a == null ? void 0 : a.length) === 1)\n          return a[0];\n        q(this, \"type\", n, r, {\n          issues: /* @__PURE__ */ Ar(a)\n        });\n      }\n      return n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction Cs() {\n  return {\n    kind: \"schema\",\n    type: \"unknown\",\n    reference: Cs,\n    expects: \"unknown\",\n    async: !1,\n    get \"~standard\"() {\n      return /* @__PURE__ */ F(this);\n    },\n    \"~run\"(e) {\n      return e.typed = !0, e;\n    }\n  };\n}\nfunction As(e, t, n) {\n  const r = e[\"~run\"]({ value: t }, /* @__PURE__ */ bs(n));\n  if (r.issues)\n    throw new li(r.issues);\n  return r.value;\n}\n// @__NO_SIDE_EFFECTS__\nfunction ae(...e) {\n  return {\n    ...e[0],\n    pipe: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ F(this);\n    },\n    \"~run\"(t, n) {\n      for (const r of e)\n        if (r.kind !== \"metadata\") {\n          if (t.issues && (r.kind === \"schema\" || r.kind === \"transformation\")) {\n            t.typed = !1;\n            break;\n          }\n          (!t.issues || !n.abortEarly && !n.abortPipeEarly) && (t = r[\"~run\"](t, n));\n        }\n      return t;\n    }\n  };\n}\nfunction di(e) {\n  return e.replace(/_[a-z]/g, (t) => t[1].toUpperCase());\n}\nfunction fi(e) {\n  return Object.entries(e).reduce((t, [n, r]) => (t[di(n)] = r, t), {});\n}\nfunction Qt(e) {\n  const t = fi(e);\n  for (const n in t) {\n    const r = t[n];\n    r && typeof r == \"object\" && !(r instanceof Date) && (t[n] = Array.isArray(r) ? r.map(Qt) : Qt(r));\n  }\n  return t;\n}\nfunction _n(e) {\n  return /* @__PURE__ */ oe((t) => e ? Qt(t) : t);\n}\nfunction ks(e) {\n  return (t) => /* @__PURE__ */ ae(\n    e,\n    _n(t)\n  );\n}\nfunction mi(e) {\n  return (t, n) => As(\n    /* @__PURE__ */ ae(e, _n(n)),\n    t\n  );\n}\nfunction bn() {\n  return /* @__PURE__ */ oe(JSON.parse);\n}\nfunction yn(e) {\n  const t = ks(e);\n  return (n) => /* @__PURE__ */ ae(\n    /* @__PURE__ */ y(),\n    bn(),\n    t(n)\n  );\n}\nfunction hi(e) {\n  return /* @__PURE__ */ oe((t) => {\n    const n = {};\n    return new URLSearchParams(t).forEach((r, s) => {\n      const o = n[s];\n      Array.isArray(o) ? o.push(r) : o === void 0 ? n[s] = r : n[s] = [o, r];\n    }), As(e, n);\n  });\n}\nfunction Ms(e) {\n  return (t) => /* @__PURE__ */ ae(\n    /* @__PURE__ */ hn([/* @__PURE__ */ y(), /* @__PURE__ */ $s(URLSearchParams)]),\n    hi(e),\n    _n(t)\n  );\n}\nconst kr = /* @__PURE__ */ v(/* @__PURE__ */ mn(() => vi())), _i = /* @__PURE__ */ Se({\n  id: /* @__PURE__ */ st(),\n  photo_url: /* @__PURE__ */ v(/* @__PURE__ */ y()),\n  type: /* @__PURE__ */ y(),\n  title: /* @__PURE__ */ y(),\n  username: /* @__PURE__ */ v(/* @__PURE__ */ y())\n}), bi = /* @__PURE__ */ Se({\n  added_to_attachment_menu: /* @__PURE__ */ v(/* @__PURE__ */ Be()),\n  allows_write_to_pm: /* @__PURE__ */ v(/* @__PURE__ */ Be()),\n  first_name: /* @__PURE__ */ y(),\n  id: /* @__PURE__ */ st(),\n  is_bot: /* @__PURE__ */ v(/* @__PURE__ */ Be()),\n  is_premium: /* @__PURE__ */ v(/* @__PURE__ */ Be()),\n  last_name: /* @__PURE__ */ v(/* @__PURE__ */ y()),\n  language_code: /* @__PURE__ */ v(/* @__PURE__ */ y()),\n  photo_url: /* @__PURE__ */ v(/* @__PURE__ */ y()),\n  username: /* @__PURE__ */ v(/* @__PURE__ */ y())\n}), yi = /* @__PURE__ */ Se({\n  auth_date: /* @__PURE__ */ ae(\n    /* @__PURE__ */ y(),\n    /* @__PURE__ */ oe((e) => new Date(Number(e) * 1e3)),\n    /* @__PURE__ */ Es()\n  ),\n  can_send_after: /* @__PURE__ */ v(/* @__PURE__ */ ae(/* @__PURE__ */ y(), /* @__PURE__ */ oe(Number), /* @__PURE__ */ vs())),\n  chat: /* @__PURE__ */ v(/* @__PURE__ */ mn(() => gi())),\n  chat_type: /* @__PURE__ */ v(/* @__PURE__ */ y()),\n  chat_instance: /* @__PURE__ */ v(/* @__PURE__ */ y()),\n  hash: /* @__PURE__ */ y(),\n  query_id: /* @__PURE__ */ v(/* @__PURE__ */ y()),\n  receiver: kr,\n  start_param: /* @__PURE__ */ v(/* @__PURE__ */ y()),\n  signature: /* @__PURE__ */ y(),\n  user: kr\n}), gi = yn(_i), vi = yn(bi), wi = Ms(yi);\nfunction Ei(e) {\n  return /^#[\\da-f]{6}$/i.test(e);\n}\nconst Ps = ks(\n  /* @__PURE__ */ Ss(\n    /* @__PURE__ */ y(),\n    /* @__PURE__ */ ae(\n      /* @__PURE__ */ hn([/* @__PURE__ */ y(), /* @__PURE__ */ st()]),\n      /* @__PURE__ */ oe((e) => typeof e == \"number\" ? `#${(e & 16777215).toString(16).padStart(6, \"0\")}` : e),\n      /* @__PURE__ */ gs(Ei)\n    )\n  )\n), Mt = /* @__PURE__ */ v(\n  /* @__PURE__ */ ae(/* @__PURE__ */ y(), /* @__PURE__ */ oe((e) => e === \"1\"))\n), Mr = yn(Ps()), $i = /* @__PURE__ */ Se({\n  tgWebAppBotInline: Mt,\n  tgWebAppData: /* @__PURE__ */ v(wi()),\n  tgWebAppDefaultColors: /* @__PURE__ */ v(Mr()),\n  tgWebAppFullscreen: Mt,\n  tgWebAppPlatform: /* @__PURE__ */ y(),\n  tgWebAppShowSettings: Mt,\n  tgWebAppStartParam: /* @__PURE__ */ v(/* @__PURE__ */ y()),\n  tgWebAppThemeParams: Mr(),\n  tgWebAppVersion: /* @__PURE__ */ y()\n}), xs = Ms($i), gn = mi(xs()), Ts = /* @__PURE__ */ Se({\n  eventType: /* @__PURE__ */ y(),\n  eventData: /* @__PURE__ */ v(/* @__PURE__ */ Cs())\n});\nfunction Bs(e, t) {\n  return t || (t = (n, r) => JSON.stringify(r)), new URLSearchParams(\n    Object.entries(e).reduce((n, [r, s]) => (Array.isArray(s) ? n.push(...s.map((o) => [r, String(o)])) : s != null && n.push([\n      r,\n      s instanceof Date ? (s.getTime() / 1e3 | 0).toString() : typeof s == \"string\" || typeof s == \"number\" ? String(s) : typeof s == \"boolean\" ? s ? \"1\" : \"0\" : t(r, s)\n    ]), n), [])\n  ).toString();\n}\nfunction Si(e) {\n  return Bs(e);\n}\nfunction Ci(e) {\n  return Bs(e, (t, n) => t === \"tgWebAppData\" ? Si(n) : JSON.stringify(n));\n}\nfunction Os(e) {\n  try {\n    return /* @__PURE__ */ pi(xs(), e);\n  } catch {\n    return !1;\n  }\n}\nfunction Ai(e) {\n  return { all: e = e || /* @__PURE__ */ new Map(), on: function(t, n) {\n    var r = e.get(t);\n    r ? r.push(n) : e.set(t, [n]);\n  }, off: function(t, n) {\n    var r = e.get(t);\n    r && (n ? r.splice(r.indexOf(n) >>> 0, 1) : e.set(t, []));\n  }, emit: function(t, n) {\n    var r = e.get(t);\n    r && r.slice().map(function(s) {\n      s(n);\n    }), (r = e.get(\"*\")) && r.slice().map(function(s) {\n      s(t, n);\n    });\n  } };\n}\nfunction ki(e, t) {\n  const n = Ai(), r = /* @__PURE__ */ new Map(), s = (o, a, i) => {\n    i || (i = !1);\n    const u = r.get(o) || /* @__PURE__ */ new Map();\n    r.set(o, u);\n    const c = u.get(a) || [];\n    u.set(a, c);\n    const l = c.findIndex((p) => p[1] === i);\n    l >= 0 && (n.off(o, c[l][0]), c.splice(l, 1), !c.length && u.delete(a), u.size || (r.delete(o), !r.size && t()));\n  };\n  return [\n    function(o, a, i) {\n      !r.size && e();\n      function u() {\n        s(o, a, i);\n      }\n      function c(...m) {\n        i && u(), o === \"*\" ? a(m) : a(...m);\n      }\n      n.on(o, c);\n      const l = r.get(o) || /* @__PURE__ */ new Map();\n      r.set(o, l);\n      const p = l.get(a) || [];\n      return l.set(a, p), p.push([c, i || !1]), u;\n    },\n    s,\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    n.emit,\n    function() {\n      const o = n.all.size;\n      n.all.clear(), r.clear(), o && t();\n    }\n  ];\n}\nfunction Pr(e, t) {\n  window.dispatchEvent(new MessageEvent(\"message\", {\n    data: JSON.stringify({ eventType: e, eventData: t }),\n    // We specify window.parent to imitate the case, the parent iframe sent us this event.\n    source: window.parent\n  }));\n}\nlet ze = !1;\nconst [vn, Mi] = /* @__PURE__ */ ai(\"Bridge\", {\n  bgColor: \"#9147ff\",\n  textColor: \"white\",\n  shouldLog() {\n    return ze;\n  }\n}), xr = (e) => {\n  vn(!1, \"Event received:\", e);\n};\nfunction Pi(e) {\n  e !== ze && (ze = e, ze ? S(\"*\", xr) : B(\"*\", xr));\n}\nconst xi = {\n  clipboard_text_received: /* @__PURE__ */ U({\n    req_id: /* @__PURE__ */ re(),\n    data: /* @__PURE__ */ Te(/* @__PURE__ */ re())\n  }),\n  custom_method_invoked: /* @__PURE__ */ U({\n    req_id: /* @__PURE__ */ re(),\n    result: /* @__PURE__ */ Ht(/* @__PURE__ */ cs()),\n    error: /* @__PURE__ */ Ht(/* @__PURE__ */ re())\n  }),\n  popup_closed: /* @__PURE__ */ Te(\n    /* @__PURE__ */ U({ button_id: /* @__PURE__ */ Te(/* @__PURE__ */ re(), () => {\n    }) }),\n    {}\n  ),\n  viewport_changed: /* @__PURE__ */ U({\n    height: /* @__PURE__ */ Rt(),\n    width: /* @__PURE__ */ Te(/* @__PURE__ */ Rt(), () => window.innerWidth),\n    is_state_stable: /* @__PURE__ */ Lt(),\n    is_expanded: /* @__PURE__ */ Lt()\n  }),\n  theme_changed: /* @__PURE__ */ U({\n    theme_params: Ps()\n  })\n};\nfunction Tr(e) {\n  if (e.source !== window.parent)\n    return;\n  let t;\n  try {\n    t = Ft(/* @__PURE__ */ ls(/* @__PURE__ */ re(), bn(), Ts), e.data);\n  } catch {\n    return;\n  }\n  const { eventType: n, eventData: r } = t, s = xi[n];\n  try {\n    const o = s ? Ft(s, r) : r;\n    Ti(n, o);\n  } catch (o) {\n    Mi(\n      !0,\n      [\n        `An error occurred processing the \"${n}\" event from the Telegram application.`,\n        \"Please, file an issue here:\",\n        \"https://github.com/Telegram-Mini-Apps/telegram-apps/issues/new/choose\"\n      ].join(`\n`),\n      t,\n      o\n    );\n  }\n}\nconst [\n  S,\n  B,\n  Ti,\n  Af\n] = ki(\n  () => {\n    const e = window, t = { receiveEvent: Pr };\n    e.TelegramGameProxy_receiveEvent = Pr, e.TelegramGameProxy = t, e.Telegram = { WebView: t }, window.addEventListener(\"message\", Tr);\n  },\n  () => {\n    [\"TelegramGameProxy_receiveEvent\", \"TelegramGameProxy\", \"Telegram\"].forEach((e) => {\n      delete window[e];\n    }), window.removeEventListener(\"message\", Tr);\n  }\n);\nvar Bi = Object.defineProperty, Oi = (e, t, n) => t in e ? Bi(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n, Ii = (e, t, n) => Oi(e, t + \"\", n);\nfunction Is(e) {\n  return (t) => t instanceof e;\n}\nfunction Ce(e, t) {\n  t || (t = []);\n  class n extends Error {\n    constructor(...s) {\n      const o = typeof t == \"function\" ? t(...s) : typeof t == \"string\" ? [t] : t || [];\n      super(...o), this.name = e;\n    }\n  }\n  return Object.defineProperty(n, \"name\", { value: e }), [n, Is(n)];\n}\nfunction ji(e, t, n) {\n  class r extends Ce(e, n)[0] {\n    constructor(...o) {\n      super(...o), Ii(this, \"data\"), this.data = t(...o);\n    }\n  }\n  return Object.defineProperty(r, \"name\", { value: e }), [r, Is(r)];\n}\nconst [\n  qi,\n  kf\n] = Ce(\n  \"MethodUnsupportedError\",\n  (e, t) => [\n    `Method \"${e}\" is unsupported in Mini Apps version ${t}`\n  ]\n), [\n  Di,\n  Mf\n] = Ce(\n  \"MethodParameterUnsupportedError\",\n  (e, t, n) => [\n    `Parameter \"${t}\" of \"${e}\" method is unsupported in Mini Apps version ${n}`\n  ]\n), [\n  Ni,\n  Pf\n] = ji(\n  \"LaunchParamsRetrieveError\",\n  (e) => ({ errors: e }),\n  (e) => [\n    [\n      \"Unable to retrieve launch parameters from any known source. Perhaps, you have opened your app outside Telegram?\",\n      \"📖 Refer to docs for more information:\",\n      \"https://docs.telegram-mini-apps.com/packages/telegram-apps-bridge/environment\",\n      \"\",\n      \"Collected errors:\",\n      ...e.map(([t, n]) => `Source: ${t} / ${n instanceof Error ? n.message : String(n)}`)\n    ].join(`\n`)\n  ]\n), [\n  Vi,\n  xf\n] = Ce(\n  \"InvalidLaunchParamsError\",\n  (e, t) => [\n    `Invalid value for launch params: ${e}`,\n    { cause: t }\n  ]\n), [Li, Tf] = Ce(\"UnknownEnvError\"), [\n  Ri,\n  Bf\n] = Ce(\n  \"InvokeCustomMethodError\",\n  (e) => [`Server returned error: ${e}`]\n);\nfunction Hi(e, t) {\n  t();\n}\n// @__NO_SIDE_EFFECTS__\nfunction js(e, t) {\n  t || (t = {});\n  const n = t.equals || Object.is;\n  let r = [], s = e;\n  const o = (c) => {\n    if (!n(s, c)) {\n      const l = s;\n      s = c, Hi(u, () => {\n        [...r].forEach(([p, m]) => {\n          p(c, l), m && i(p, !0);\n        });\n      });\n    }\n  };\n  function a(c) {\n    const l = typeof c != \"object\" ? { once: c } : c;\n    return {\n      once: l.once || !1,\n      signal: l.signal || !1\n    };\n  }\n  const i = (c, l) => {\n    const p = a(l), m = r.findIndex(([f, k]) => f === c && k.once === p.once && k.signal === p.signal);\n    m >= 0 && r.splice(m, 1);\n  }, u = Object.assign(\n    function() {\n      return Fi(u), s;\n    },\n    {\n      destroy() {\n        r = [];\n      },\n      set: o,\n      reset() {\n        o(e);\n      },\n      sub(c, l) {\n        return r.push([c, a(l)]), () => i(c, l);\n      },\n      unsub: i,\n      unsubAll() {\n        r = r.filter((c) => c[1].signal);\n      }\n    }\n  );\n  return u;\n}\nconst Pt = [];\nfunction Fi(e) {\n  Pt.length && Pt[Pt.length - 1].add(e);\n}\nconst Ge = /* @__PURE__ */ js((...e) => window.parent.postMessage(...e)), Wi = (...e) => Ge()(...e), Ui = /* @__PURE__ */ js(\"https://web.telegram.org\");\nfunction wn(e, t) {\n  vn(!1, \"Posting event:\", t ? { eventType: e, eventData: t } : { eventType: e });\n  const n = window, r = JSON.stringify({ eventType: e, eventData: t });\n  if (ds())\n    return Wi(r, Ui());\n  if (ps(n)) {\n    n.TelegramWebviewProxy.postEvent(e, JSON.stringify(t));\n    return;\n  }\n  if (/* @__PURE__ */ rt(/* @__PURE__ */ U({ external: /* @__PURE__ */ U({ notify: /* @__PURE__ */ dn() }) }), n)) {\n    n.external.notify(r);\n    return;\n  }\n  throw new Li();\n}\nfunction En(e, t, n) {\n  n || (n = {});\n  const { capture: r } = n, [s, o] = oi();\n  return new fn((a) => {\n    (Array.isArray(t) ? t : [t]).forEach((i) => {\n      s(\n        S(i, (u) => {\n          (!r || (Array.isArray(t) ? r({\n            event: i,\n            payload: u\n          }) : r(u))) && a(u);\n        })\n      );\n    }), (n.postEvent || wn)(e, n.params);\n  }, n).finally(o);\n}\nconst Br = \"launchParams\";\nfunction Or(e) {\n  return e.replace(/^[^?#]*[?#]/, \"\").replace(/[?#]/g, \"&\");\n}\nfunction qs() {\n  const e = [];\n  for (const [t, n] of [\n    // Try to retrieve launch parameters from the current location. This method can return\n    // nothing in case, location was changed, and then the page was reloaded.\n    [() => Or(window.location.href), \"window.location.href\"],\n    // Then, try using the lower level API - window.performance.\n    [() => {\n      const r = performance.getEntriesByType(\"navigation\")[0];\n      return r && Or(r.name);\n    }, \"performance navigation entries\"],\n    [() => si(Br), \"local storage\"]\n  ]) {\n    const r = t();\n    if (!r) {\n      e.push([n, new Error(\"Source is empty\")]);\n      continue;\n    }\n    if (Os(r))\n      return _s(Br, r), r;\n    try {\n      gn(r);\n    } catch (s) {\n      e.push([n, s]);\n    }\n  }\n  throw new Ni(e);\n}\nfunction $n(e) {\n  const t = gn(qs());\n  return e ? Gt(t) : t;\n}\nfunction Ir(e, t) {\n  if (!e)\n    try {\n      return $n(), !0;\n    } catch {\n      return !1;\n    }\n  return fn.fn(async (n) => {\n    if (ps(window))\n      return !0;\n    try {\n      return await En(\"web_app_request_theme\", \"theme_changed\", n), !0;\n    } catch {\n      return !1;\n    }\n  }, t || { timeout: 100 });\n}\nfunction Of({ launchParams: e, onEvent: t, resetPostMessage: n } = {}) {\n  if (e) {\n    const o = typeof e == \"string\" || e instanceof URLSearchParams ? e.toString() : (\n      // Here we have to trick serializeLaunchParamsQuery into thinking, it serializes a valid\n      // value. We are doing it because we are working with tgWebAppData presented as a\n      // string, not an object as serializeLaunchParamsQuery requires.\n      Ci({ ...e, tgWebAppData: void 0 }) + (e.tgWebAppData ? `&tgWebAppData=${encodeURIComponent(e.tgWebAppData.toString())}` : \"\")\n    );\n    if (!Os(o))\n      try {\n        gn(o);\n      } catch (a) {\n        throw new Vi(o, a);\n      }\n    _s(\"launchParams\", o);\n  }\n  if (ds()) {\n    if (!t)\n      return;\n    const o = /* @__PURE__ */ ls(\n      /* @__PURE__ */ re(),\n      bn(),\n      Ts\n    );\n    n && Ge.reset();\n    const a = Ge();\n    Ge.set((...i) => {\n      const [u] = i, c = () => {\n        a(...i);\n      };\n      if (/* @__PURE__ */ rt(o, u)) {\n        const l = Ft(o, u);\n        t([l.eventType, l.eventData], c);\n      } else\n        c();\n    });\n    return;\n  }\n  const r = window.TelegramWebviewProxy || {}, s = r.postEvent || (() => {\n  });\n  window.TelegramWebviewProxy = {\n    ...r,\n    postEvent(o, a) {\n      const i = () => {\n        s(o, a);\n      };\n      t ? t([o, a ? JSON.parse(a) : void 0], i) : i();\n    }\n  }, vn(!1, \"Environment was mocked by the mockTelegramEnv function\");\n}\nfunction zi() {\n  return new URLSearchParams(qs()).get(\"tgWebAppData\") || void 0;\n}\nfunction Ds(e) {\n  return ({ req_id: t }) => t === e;\n}\nfunction jr(e) {\n  return e.split(\".\").map(Number);\n}\nfunction Gi(e, t) {\n  const n = jr(e), r = jr(t), s = Math.max(n.length, r.length);\n  for (let o = 0; o < s; o += 1) {\n    const a = n[o] || 0, i = r[o] || 0;\n    if (a !== i)\n      return a > i ? 1 : -1;\n  }\n  return 0;\n}\nfunction P(e, t) {\n  return Gi(e, t) <= 0;\n}\nfunction fe(e, t, n) {\n  if (typeof n == \"string\") {\n    if (e === \"web_app_open_link\") {\n      if (t === \"try_instant_view\")\n        return P(\"6.4\", n);\n      if (t === \"try_browser\")\n        return P(\"7.6\", n);\n    }\n    if (e === \"web_app_set_header_color\" && t === \"color\")\n      return P(\"6.9\", n);\n    if (e === \"web_app_close\" && t === \"return_back\")\n      return P(\"7.6\", n);\n    if (e === \"web_app_setup_main_button\" && t === \"has_shine_effect\")\n      return P(\"7.10\", n);\n  }\n  switch (e) {\n    case \"web_app_open_tg_link\":\n    case \"web_app_open_invoice\":\n    case \"web_app_setup_back_button\":\n    case \"web_app_set_background_color\":\n    case \"web_app_set_header_color\":\n    case \"web_app_trigger_haptic_feedback\":\n      return P(\"6.1\", t);\n    case \"web_app_open_popup\":\n      return P(\"6.2\", t);\n    case \"web_app_close_scan_qr_popup\":\n    case \"web_app_open_scan_qr_popup\":\n    case \"web_app_read_text_from_clipboard\":\n      return P(\"6.4\", t);\n    case \"web_app_switch_inline_query\":\n      return P(\"6.7\", t);\n    case \"web_app_invoke_custom_method\":\n    case \"web_app_request_write_access\":\n    case \"web_app_request_phone\":\n      return P(\"6.9\", t);\n    case \"web_app_setup_settings_button\":\n      return P(\"6.10\", t);\n    case \"web_app_biometry_get_info\":\n    case \"web_app_biometry_open_settings\":\n    case \"web_app_biometry_request_access\":\n    case \"web_app_biometry_request_auth\":\n    case \"web_app_biometry_update_token\":\n      return P(\"7.2\", t);\n    case \"web_app_setup_swipe_behavior\":\n      return P(\"7.7\", t);\n    case \"web_app_share_to_story\":\n      return P(\"7.8\", t);\n    case \"web_app_setup_secondary_button\":\n    case \"web_app_set_bottom_bar_color\":\n      return P(\"7.10\", t);\n    case \"web_app_request_safe_area\":\n    case \"web_app_request_content_safe_area\":\n    case \"web_app_request_fullscreen\":\n    case \"web_app_exit_fullscreen\":\n    case \"web_app_set_emoji_status\":\n    case \"web_app_add_to_home_screen\":\n    case \"web_app_check_home_screen\":\n    case \"web_app_request_emoji_status_access\":\n    case \"web_app_check_location\":\n    case \"web_app_open_location_settings\":\n    case \"web_app_request_file_download\":\n    case \"web_app_request_location\":\n    case \"web_app_send_prepared_message\":\n    case \"web_app_start_accelerometer\":\n    case \"web_app_start_device_orientation\":\n    case \"web_app_start_gyroscope\":\n    case \"web_app_stop_accelerometer\":\n    case \"web_app_stop_device_orientation\":\n    case \"web_app_stop_gyroscope\":\n    case \"web_app_toggle_orientation_lock\":\n      return P(\"8.0\", t);\n    default:\n      return [\n        \"iframe_ready\",\n        \"iframe_will_reload\",\n        \"web_app_close\",\n        \"web_app_data_send\",\n        \"web_app_expand\",\n        \"web_app_open_link\",\n        \"web_app_ready\",\n        \"web_app_request_theme\",\n        \"web_app_request_viewport\",\n        \"web_app_setup_main_button\",\n        \"web_app_setup_closing_behavior\"\n      ].includes(e);\n  }\n}\nfunction Qi(e, t) {\n  t || (t = \"strict\");\n  const n = typeof t == \"function\" ? t : (r) => {\n    const { method: s, version: o } = r, a = \"param\" in r ? new Di(s, r.param, o) : new qi(s, o);\n    if (t === \"strict\")\n      throw a;\n    return console.warn(a.message);\n  };\n  return (r, s) => fe(r, e) ? r === \"web_app_set_header_color\" && /* @__PURE__ */ rt(/* @__PURE__ */ U({ color: /* @__PURE__ */ us() }), s) && !fe(r, \"color\", e) ? n({ version: e, method: r, param: \"color\" }) : wn(r, s) : n({ version: e, method: r });\n}\nfunction Ji(e, t, n, r) {\n  return En(\"web_app_invoke_custom_method\", \"custom_method_invoked\", {\n    ...r || {},\n    params: { method: e, params: t, req_id: n },\n    capture: Ds(n)\n  }).then(({ result: s, error: o }) => {\n    if (o)\n      throw new Ri(o);\n    return s;\n  });\n}\nfunction Ns(e) {\n  return e.replace(/[A-Z]/g, (t) => `-${t.toLowerCase()}`);\n}\nfunction Ki(e) {\n  return e.replace(/_([a-z])/g, (t, n) => `-${n.toLowerCase()}`);\n}\nfunction Vs(e) {\n  return `tapps/${e}`;\n}\nfunction z(e, t) {\n  sessionStorage.setItem(Vs(e), JSON.stringify(t));\n}\nfunction N(e) {\n  const t = sessionStorage.getItem(Vs(e));\n  try {\n    return t ? JSON.parse(t) : void 0;\n  } catch {\n  }\n}\nfunction Sn(...e) {\n  const t = e.flat(1);\n  return [\n    t.push.bind(t),\n    () => {\n      t.forEach((n) => {\n        n();\n      });\n    }\n  ];\n}\n// @__NO_SIDE_EFFECTS__\nfunction Yi(e, t) {\n  t || (t = {});\n  const {\n    textColor: n,\n    bgColor: r,\n    shouldLog: s\n  } = t, o = s === void 0 ? !0 : s, a = typeof o == \"boolean\" ? () => o : o;\n  function i(u, c, ...l) {\n    if (c || a()) {\n      const p = \"font-weight:bold;padding:0 5px;border-radius:5px\";\n      console[u](\n        `%c${Intl.DateTimeFormat(\"en-GB\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          second: \"2-digit\",\n          fractionalSecondDigits: 3,\n          timeZone: \"UTC\"\n        }).format(/* @__PURE__ */ new Date())}%c / %c${e}`,\n        `${p};background-color: lightblue;color:black`,\n        \"\",\n        `${p};${n ? `color:${n};` : \"\"}${r ? `background-color:${r}` : \"\"}`,\n        ...l\n      );\n    }\n  }\n  return [i.bind(void 0, \"log\"), i.bind(void 0, \"error\")];\n}\nfunction Zi() {\n  return performance.getEntriesByType(\"navigation\")[0];\n}\nfunction V() {\n  const e = Zi();\n  return !!e && e.type === \"reload\";\n}\nlet ve;\nfunction Xi(e, t) {\n  ve && ve.set(e, t) || t();\n}\nfunction Ne(e) {\n  if (ve)\n    return e();\n  ve = /* @__PURE__ */ new Map();\n  try {\n    e();\n  } finally {\n    ve.forEach((t) => t()), ve = void 0;\n  }\n}\n// @__NO_SIDE_EFFECTS__\nfunction Ls(e, t) {\n  t || (t = {});\n  const n = t.equals || Object.is;\n  let r = [], s = e;\n  const o = (c) => {\n    if (!n(s, c)) {\n      const l = s;\n      s = c, Xi(u, () => {\n        [...r].forEach(([p, m]) => {\n          p(c, l), m && i(p, !0);\n        });\n      });\n    }\n  };\n  function a(c) {\n    const l = typeof c != \"object\" ? { once: c } : c;\n    return {\n      once: l.once || !1,\n      signal: l.signal || !1\n    };\n  }\n  const i = (c, l) => {\n    const p = a(l), m = r.findIndex(([f, k]) => f === c && k.once === p.once && k.signal === p.signal);\n    m >= 0 && r.splice(m, 1);\n  }, u = Object.assign(\n    function() {\n      return eu(u), s;\n    },\n    {\n      destroy() {\n        r = [];\n      },\n      set: o,\n      reset() {\n        o(e);\n      },\n      sub(c, l) {\n        return r.push([c, a(l)]), () => i(c, l);\n      },\n      unsub: i,\n      unsubAll() {\n        r = r.filter((c) => c[1].signal);\n      }\n    }\n  );\n  return u;\n}\nconst Ie = [];\nfunction eu(e) {\n  Ie.length && Ie[Ie.length - 1].add(e);\n}\n// @__NO_SIDE_EFFECTS__\nfunction tu(e, t) {\n  let n = /* @__PURE__ */ new Set(), r;\n  function s() {\n    return r || (r = /* @__PURE__ */ Ls(a(), t));\n  }\n  function o() {\n    s().set(a());\n  }\n  function a() {\n    n.forEach((c) => {\n      c.unsub(o, { signal: !0 });\n    });\n    const i = /* @__PURE__ */ new Set();\n    let u;\n    Ie.push(i);\n    try {\n      u = e();\n    } finally {\n      Ie.pop();\n    }\n    return i.forEach((c) => {\n      c.sub(o, { signal: !0 });\n    }), n = i, u;\n  }\n  return Object.assign(function() {\n    return s()();\n  }, {\n    destroy() {\n      s().destroy();\n    },\n    sub(...i) {\n      return s().sub(...i);\n    },\n    unsub(...i) {\n      s().unsub(...i);\n    },\n    unsubAll(...i) {\n      s().unsubAll(...i);\n    }\n  });\n}\n// @__NO_SIDE_EFFECTS__\nfunction Ae(e, t) {\n  return /* @__PURE__ */ Ls(e, t);\n}\n// @__NO_SIDE_EFFECTS__\nfunction h(e, t) {\n  return /* @__PURE__ */ tu(e, t);\n}\n// @__NO_SIDE_EFFECTS__\nfunction b(e, t) {\n  const n = /* @__PURE__ */ Ae(e, t);\n  return [n, /* @__PURE__ */ h(n)];\n}\nlet Rs = !1;\nconst [Jt, If] = /* @__PURE__ */ Yi(\"SDK\", {\n  bgColor: \"forestgreen\",\n  textColor: \"white\",\n  shouldLog() {\n    return Rs;\n  }\n});\nfunction jf(e) {\n  Rs = e, Pi(e);\n}\nconst xt = /* @__PURE__ */ Ae(0), Hs = /* @__PURE__ */ Ae(wn), [qr, Re] = /* @__PURE__ */ b({\n  tgWebAppPlatform: \"unknown\",\n  tgWebAppVersion: \"0.0\"\n}), se = /* @__PURE__ */ h(() => Re().tgWebAppVersion);\nfunction nu(e) {\n  e || (e = {});\n  const { postEvent: t } = e, n = e.launchParams || $n();\n  qr.set(n), Hs.set(\n    typeof t == \"function\" ? t : Qi(n.tgWebAppVersion)\n  ), Jt(!1, \"The package was configured. Launch params:\", qr());\n}\nfunction Fs() {\n  return xt.set(xt() + 1), xt().toString();\n}\nfunction ke(e, t, n) {\n  return Ji(e, t, Fs(), {\n    ...n || {},\n    postEvent: _\n  });\n}\nconst C = (e, t, n) => (n || (n = {}), n.postEvent || (n.postEvent = _), En(e, t, n)), _ = (e, t) => Hs()(e, t);\nfunction G(e) {\n  return /* @__PURE__ */ h(() => fe(e, se()));\n}\nfunction ru(e) {\n  return (t) => t instanceof e;\n}\nfunction Y(e, t) {\n  t || (t = []);\n  class n extends Error {\n    constructor(...s) {\n      const o = typeof t == \"function\" ? t(...s) : typeof t == \"string\" ? [t] : t || [];\n      super(...o), this.name = e;\n    }\n  }\n  return Object.defineProperty(n, \"name\", { value: e }), [n, ru(n)];\n}\nfunction he(e) {\n  return [e];\n}\nconst [\n  Cn,\n  qf\n] = Y(\"CSSVarsBoundError\", \"CSS variables are already bound\"), [\n  Ws,\n  Df\n] = Y(\"NotAvailableError\", he), [\n  Nf,\n  Vf\n] = Y(\"InvalidEnvError\", he), [\n  xe,\n  Lf\n] = Y(\"FunctionNotAvailableError\", he), [\n  J,\n  Rf\n] = Y(\n  \"InvalidArgumentsError\",\n  (e, t) => [e, { cause: t }]\n), [\n  su,\n  Hf\n] = Y(\"ConcurrentCallError\", he), [\n  ou,\n  Ff\n] = Y(\n  \"SetEmojiStatusError\",\n  (e) => [`Failed to set emoji status: ${e}`]\n), [\n  Us,\n  Wf\n] = Y(\"AccessDeniedError\", he), [\n  au,\n  Uf\n] = Y(\"FullscreenFailedError\", he), [\n  iu,\n  zf\n] = Y(\"ShareMessageError\", he);\nfunction Dr() {\n  return typeof window > \"u\";\n}\n// @__NO_SIDE_EFFECTS__\nfunction A(e, t, n) {\n  n || (n = {});\n  const {\n    isSupported: r,\n    isMounted: s,\n    isMounting: o,\n    component: a,\n    supports: i\n  } = n || {}, u = `${a ? `${a}.` : \"\"}${e}()`, c = r ? Array.isArray(r) || typeof r == \"object\" && \"any\" in r ? r : [r] : void 0;\n  function l(E) {\n    if (i) {\n      const $ = i[E];\n      return fe($[0], $[1], se());\n    }\n    return !0;\n  }\n  function p() {\n    if (!c)\n      return;\n    function E(R) {\n      return typeof R == \"function\" ? R() : fe(R, se()) ? void 0 : `it is unsupported in Mini Apps version ${se()}`;\n    }\n    const $ = Array.isArray(c) ? c : c.any, I = $.map(E).filter(Boolean);\n    return Array.isArray(c) ? I[0] : I.length === $.length ? I[I.length - 1] : void 0;\n  }\n  function m(...E) {\n    for (const $ in i)\n      if (i[$][2](...E) && !l($))\n        return `option ${$} is not supported in Mini Apps version ${se()}`;\n  }\n  let f;\n  if (i) {\n    f = {};\n    for (const E in i)\n      f[E] = /* @__PURE__ */ h(() => l(E));\n  }\n  const k = /* @__PURE__ */ h(() => !p()), ge = /* @__PURE__ */ h(() => se() !== \"0.0\"), M = /* @__PURE__ */ h(() => !s || s()), ne = /* @__PURE__ */ h(\n    () => Ir() && !Dr() && ge() && k() && M()\n  );\n  return Object.assign(\n    (...E) => {\n      const $ = `Unable to call the ${u} ${a ? \"method\" : \"function\"}:`;\n      if (Dr() || !Ir())\n        throw new xe(`${$} it can't be called outside Mini Apps`);\n      if (!ge())\n        throw new xe(`${$} the SDK was not initialized. Use the SDK init() function`);\n      const I = p();\n      if (I)\n        throw new xe(`${$} ${I}`);\n      const R = m(...E);\n      if (R)\n        throw new xe(`${$} ${R}`);\n      if (!M()) {\n        const d = o && o() ? \"mounting. Wait for the mount completion\" : `unmounted. Use the ${a}.mount() method`;\n        throw new xe(`${$} the component is ${d}`);\n      }\n      return t(...E);\n    },\n    t,\n    {\n      isAvailable: ne,\n      ifAvailable(...E) {\n        return ne() ? [!0, t(...E)] : [!1];\n      }\n    },\n    c ? { isSupported: k } : {},\n    f ? { supports: f } : {}\n  );\n}\nfunction ot(e, t) {\n  return t || (t = {}), (n, r, s, o) => /* @__PURE__ */ A(n, r, {\n    ...t,\n    isSupported: s || t.isSupported,\n    supports: o,\n    component: e\n  });\n}\nfunction ce(e, t, n) {\n  return ot(e, { isSupported: n, isMounted: t });\n}\nfunction L(e, t) {\n  return ot(e, { isSupported: t });\n}\nconst at = \"web_app_setup_back_button\", zs = \"back_button_pressed\", it = \"backButton\", [Nr, uu] = /* @__PURE__ */ b(!1), [Ke, cu] = /* @__PURE__ */ b(!1), lu = G(at), Gs = ce(it, Ke, at), An = L(it, at), pu = Gs(\"hide\", () => {\n  kn(!1);\n}), du = An(\"mount\", () => {\n  Ke() || (kn(V() && N(it) || !1), Ke.set(!0));\n});\nfunction kn(e) {\n  e !== Nr() && (_(at, { is_visible: e }), z(it, e), Nr.set(e));\n}\nconst fu = An(\n  \"onClick\",\n  (e) => S(zs, e)\n), mu = An(\n  \"offClick\",\n  (e) => {\n    B(zs, e);\n  }\n), hu = Gs(\"show\", () => {\n  kn(!0);\n});\nfunction _u() {\n  Ke.set(!1);\n}\nconst Gf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  hide: pu,\n  isMounted: cu,\n  isSupported: lu,\n  isVisible: uu,\n  mount: du,\n  offClick: mu,\n  onClick: fu,\n  show: hu,\n  unmount: _u\n}, Symbol.toStringTag, { value: \"Module\" }));\nvar bu = Object.defineProperty, yu = (e, t, n) => t in e ? bu(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n, Kt = (e, t, n) => yu(e, typeof t != \"symbol\" ? t + \"\" : t, n);\nfunction gu(e) {\n  return (t) => t instanceof e;\n}\nfunction Qs(e, t) {\n  t || (t = []);\n  class n extends Error {\n    constructor(...s) {\n      const o = typeof t == \"function\" ? t(...s) : typeof t == \"string\" ? [t] : t || [];\n      super(...o), this.name = e;\n    }\n  }\n  return Object.defineProperty(n, \"name\", { value: e }), [n, gu(n)];\n}\nconst [vu, wu] = Qs(\"CancelledError\", \"Promise was canceled\"), [Eu, Qf] = Qs(\n  \"TimeoutError\",\n  (e, t) => [`Timeout reached: ${e}ms`, { cause: t }]\n), Js = Symbol(\"Resolved\");\nfunction Vr(e) {\n  return Array.isArray(e) && e[0] === Js;\n}\nfunction $u(e) {\n  return [Js, e];\n}\nfunction Lr(e, t) {\n  return e.reject = t.reject, e.abort = t.abort, e;\n}\nlet x = class Yt extends Promise {\n  constructor(t, n) {\n    let r, s;\n    super((o, a) => {\n      let i, u;\n      typeof t == \"function\" ? (i = t, u = n) : u = t;\n      const c = [], l = (d) => (...j) => {\n        const ee = d(...j);\n        return c.forEach((kt) => kt()), ee;\n      }, p = new AbortController(), { signal: m } = p;\n      s = (d) => {\n        !m.aborted && p.abort(d);\n      };\n      const f = () => m.reason, k = (d) => {\n        const j = () => {\n          d(f());\n        };\n        m.addEventListener(\"abort\", j, !0);\n        const ee = () => {\n          m.removeEventListener(\"abort\", j, !0);\n        };\n        return c.push(ee), ee;\n      }, ge = l((d) => {\n        o(d), s($u(d));\n      });\n      r = l((d) => {\n        a(d), s(d);\n      }), u || (u = {});\n      const { abortSignal: M, rejectOnAbort: ne = !0 } = u;\n      if (M)\n        if (M.aborted) {\n          const { reason: d } = M;\n          if (ne)\n            return r(d);\n          s(d);\n        } else {\n          const d = () => {\n            s(M.reason);\n          };\n          M.addEventListener(\"abort\", d), c.push(() => {\n            M.removeEventListener(\"abort\", d);\n          });\n        }\n      ne && k(a);\n      const { timeout: E } = u;\n      if (E) {\n        const d = setTimeout(() => {\n          s(new Eu(E));\n        }, E);\n        c.push(() => {\n          clearTimeout(d);\n        });\n      }\n      const $ = () => m.aborted, I = () => Vr(f()), R = () => {\n        const d = f();\n        return Vr(d) ? d[1] : void 0;\n      };\n      try {\n        const d = i && i(ge, r, {\n          abortReason: f,\n          abortSignal: m,\n          isAborted: $,\n          isResolved: I,\n          onAborted: k,\n          onResolved: (j) => k(() => {\n            I() && j(R());\n          }),\n          resolved: R,\n          throwIfAborted() {\n            if ($())\n              throw f();\n          }\n        });\n        d instanceof Promise && d.catch(r);\n      } catch (d) {\n        r(d);\n      }\n    }), Kt(this, \"abort\"), Kt(this, \"reject\"), this.abort = s, this.reject = r;\n  }\n  /**\n   * Creates a new AbortablePromise instance using an executor, resolving the promise when a result\n   * was returned.\n   * @param fn - function returning promise result.\n   * @param options - additional options.\n   */\n  static fn(t, n) {\n    return new Yt(async (r, s, o) => {\n      try {\n        r(await t(o));\n      } catch (a) {\n        s(a);\n      }\n    }, n);\n  }\n  static resolve(t) {\n    return this.fn(() => t);\n  }\n  /**\n   * @see Promise.reject\n   */\n  static reject(t) {\n    return new Yt((n, r) => {\n      r(t);\n    });\n  }\n  /**\n   * Aborts the promise with the cancel error.\n   */\n  cancel() {\n    this.abort(new vu());\n  }\n  /**\n   * @see Promise.catch\n   */\n  catch(t) {\n    return this.then(void 0, t);\n  }\n  /**\n   * @see Promise.finally\n   */\n  finally(t) {\n    return Lr(super.finally(t), this);\n  }\n  /**\n   * @see Promise.then\n   */\n  then(t, n) {\n    return Lr(super.then(t, n), this);\n  }\n};\nfunction Rr(e, t) {\n  return e.resolve = t.resolve, e;\n}\nlet Su = class Zt extends x {\n  constructor(t, n) {\n    let r, s;\n    typeof t == \"function\" ? (r = t, s = n) : s = t;\n    let o;\n    super((a, i, u) => {\n      o = a, r && r(a, i, u);\n    }, s), Kt(this, \"resolve\"), this.resolve = o;\n  }\n  /**\n   * Creates a new ManualPromise instance using an executor, resolving the promise when a result\n   * was returned.\n   * @param fn - function returning promise result.\n   * @param options - additional options.\n   */\n  static fn(t, n) {\n    return new Zt((r, s, o) => {\n      try {\n        Promise.resolve(t(o)).then(r, s);\n      } catch (a) {\n        s(a);\n      }\n    }, n);\n  }\n  static resolve(t) {\n    return this.fn(() => t);\n  }\n  /**\n   * @see Promise.reject\n   */\n  static reject(t) {\n    return new Zt((n, r) => {\n      r(t);\n    });\n  }\n  /**\n   * @see Promise.catch\n   */\n  catch(t) {\n    return this.then(void 0, t);\n  }\n  /**\n   * @see Promise.finally\n   */\n  finally(t) {\n    return Rr(super.finally(t), this);\n  }\n  /**\n   * @see Promise.then\n   */\n  then(t, n) {\n    return Rr(super.then(t, n), this);\n  }\n};\nfunction O(e, t, n) {\n  n || (n = {});\n  const {\n    promise: r,\n    error: s\n  } = n, [o, a] = r ? [r, /* @__PURE__ */ h(r)] : /* @__PURE__ */ b(), [i, u] = s ? [s, /* @__PURE__ */ h(s)] : /* @__PURE__ */ b();\n  return [\n    Object.assign((...c) => {\n      if (o()) {\n        const p = new su(t);\n        return i.set(p), x.reject(p);\n      }\n      Ne(() => {\n        o.set(e(...c)), i.set(void 0);\n      });\n      let l;\n      return o().catch((p) => {\n        throw l = p, p;\n      }).finally(() => {\n        Ne(() => {\n          o.set(void 0), i.set(l);\n        });\n      });\n    }, e),\n    [o, a, /* @__PURE__ */ h(() => !!o())],\n    [i, u]\n  ];\n}\n// @__NO_SIDE_EFFECTS__\nfunction He(e, t, n) {\n  const [r, ...s] = O(t, `The ${e} component is already mounting`), [o, a] = /* @__PURE__ */ b(!1);\n  return [\n    (...i) => o() ? x.resolve() : r(...i).then((u) => {\n      Ne(() => {\n        o.set(!0), n(u);\n      });\n    }),\n    ...s,\n    [o, a]\n  ];\n}\nconst [Mn, Cu] = /* @__PURE__ */ b({\n  available: !1,\n  type: \"\",\n  accessGranted: !1,\n  accessRequested: !1,\n  deviceId: \"\",\n  tokenSaved: !1\n}), Au = /* @__PURE__ */ h(() => Mn().available), Hr = \"web_app_biometry_get_info\", ku = /* @__PURE__ */ A(\n  \"requestBiometry\",\n  (e) => C(Hr, \"biometry_info_received\", e),\n  { isSupported: Hr }\n);\nfunction Ks(e) {\n  if (!wu(e))\n    throw e;\n}\nfunction Me(e) {\n  const t = e();\n  t && t.catch(Ks).cancel();\n}\nconst Ve = \"biometry\", ut = \"web_app_biometry_request_auth\", Pn = \"biometry_info_received\", Ys = (e) => {\n  ct(xn(e));\n};\nfunction Zs() {\n  throw new Ws(\"Biometry is not available\");\n}\nfunction xn(e) {\n  let t = !1, n = !1, r = \"\", s = !1, o = \"\", a = !1;\n  return e.available && (t = !0, n = e.token_saved, r = e.device_id, s = e.access_requested, o = e.type, a = e.access_granted), { available: t, tokenSaved: n, deviceId: r, type: o, accessGranted: a, accessRequested: s };\n}\nconst Mu = G(ut), [\n  Pu,\n  xu,\n  Tu,\n  Xs\n] = /* @__PURE__ */ He(\n  Ve,\n  (e) => {\n    const t = V() && N(Ve);\n    return t ? x.resolve(t) : ku({ abortSignal: e }).then(xn);\n  },\n  (e) => {\n    S(Pn, Ys), ct(e);\n  }\n), eo = L(Ve, ut), Tn = ce(Ve, Xs[0], ut), Bu = eo(\"mount\", Pu), [, to, Ou] = xu, [, Iu] = Tu, [ju, qu] = Xs, [\n  Du,\n  Nu,\n  Vu\n] = O(\n  (e) => x.fn(async (t) => {\n    const n = Mn();\n    n.available || Zs();\n    const r = await C(ut, \"biometry_auth_requested\", {\n      ...e,\n      ...t,\n      params: { reason: ((e || {}).reason || \"\").trim() }\n    }), { token: s } = r;\n    return typeof s == \"string\" && ct({ ...n, token: s }), r;\n  }, e),\n  \"Biometry authentication is already in progress\"\n), Lu = Tn(\"authenticate\", Du), [, no, Ru] = Nu, [, Hu] = Vu, Fu = eo(\"openSettings\", () => {\n  _(\"web_app_biometry_open_settings\");\n}), [\n  Wu,\n  Uu,\n  zu\n] = O(\n  (e) => x.fn(async (t) => {\n    const n = await C(\"web_app_biometry_request_access\", Pn, {\n      ...e,\n      ...t,\n      params: { reason: (e || {}).reason || \"\" }\n    }).then(xn);\n    return n.available || Zs(), ct(n), n.accessGranted;\n  }, e),\n  \"Biometry access request is already in progress\"\n), Gu = Tn(\"requestAccess\", Wu), [, ro, Qu] = Uu, [, Ju] = zu;\nfunction ct(e) {\n  Mn.set(e), z(Ve, e);\n}\nfunction Ku() {\n  [no, ro, to].forEach(Me), B(Pn, Ys), ju.set(!1);\n}\nconst Yu = Tn(\n  \"updateToken\",\n  (e) => (e || (e = {}), C(\"web_app_biometry_update_token\", \"biometry_token_updated\", {\n    ...e,\n    params: {\n      token: e.token || \"\",\n      reason: e.reason\n    }\n  }).then((t) => t.status))\n), Jf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  authError: Hu,\n  authPromise: no,\n  authenticate: Lu,\n  isAuthenticating: Ru,\n  isAvailable: Au,\n  isMounted: qu,\n  isMounting: Ou,\n  isRequestingAccess: Qu,\n  isSupported: Mu,\n  mount: Bu,\n  mountError: Iu,\n  mountPromise: to,\n  openSettings: Fu,\n  requestAccess: Gu,\n  requestAccessError: Ju,\n  requestAccessPromise: ro,\n  state: Cu,\n  unmount: Ku,\n  updateToken: Yu\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction lt(e, t) {\n  return ot(e, { isMounted: t });\n}\nconst le = ot, pt = \"closingBehavior\", [Fr, Zu] = /* @__PURE__ */ b(!1), [Xt, so] = /* @__PURE__ */ b(!1), oo = lt(pt, so), Xu = le(pt), ec = oo(\"disableConfirmation\", () => {\n  Bn(!1);\n}), tc = oo(\"enableConfirmation\", () => {\n  Bn(!0);\n}), nc = Xu(\"mount\", () => {\n  Xt() || (Bn(\n    V() && N(pt) || !1\n  ), Xt.set(!0));\n});\nfunction Bn(e) {\n  e !== Fr() && (_(\"web_app_setup_closing_behavior\", { need_confirmation: e }), z(pt, e), Fr.set(e));\n}\nfunction rc() {\n  Xt.set(!1);\n}\nconst Kf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  disableConfirmation: ec,\n  enableConfirmation: tc,\n  isConfirmationEnabled: Zu,\n  isMounted: so,\n  mount: nc,\n  unmount: rc\n}, Symbol.toStringTag, { value: \"Module\" }));\nvar te;\n// @__NO_SIDE_EFFECTS__\nfunction ao(e) {\n  return {\n    lang: (e == null ? void 0 : e.lang) ?? (te == null ? void 0 : te.lang),\n    message: e == null ? void 0 : e.message,\n    abortEarly: (e == null ? void 0 : e.abortEarly) ?? (te == null ? void 0 : te.abortEarly),\n    abortPipeEarly: (e == null ? void 0 : e.abortPipeEarly) ?? (te == null ? void 0 : te.abortPipeEarly)\n  };\n}\nvar Tt;\n// @__NO_SIDE_EFFECTS__\nfunction sc(e) {\n  return Tt == null ? void 0 : Tt.get(e);\n}\nvar Bt;\n// @__NO_SIDE_EFFECTS__\nfunction oc(e) {\n  return Bt == null ? void 0 : Bt.get(e);\n}\nvar Ot;\n// @__NO_SIDE_EFFECTS__\nfunction ac(e, t) {\n  var n;\n  return (n = Ot == null ? void 0 : Ot.get(e)) == null ? void 0 : n.get(t);\n}\n// @__NO_SIDE_EFFECTS__\nfunction ic(e) {\n  var n, r;\n  const t = typeof e;\n  return t === \"string\" ? `\"${e}\"` : t === \"number\" || t === \"bigint\" || t === \"boolean\" ? `${e}` : t === \"object\" || t === \"function\" ? (e && ((r = (n = Object.getPrototypeOf(e)) == null ? void 0 : n.constructor) == null ? void 0 : r.name)) ?? \"null\" : t;\n}\nfunction H(e, t, n, r, s) {\n  const o = s && \"input\" in s ? s.input : n.value, a = (s == null ? void 0 : s.expected) ?? e.expects ?? null, i = (s == null ? void 0 : s.received) ?? /* @__PURE__ */ ic(o), u = {\n    kind: e.kind,\n    type: e.type,\n    input: o,\n    expected: a,\n    received: i,\n    message: `Invalid ${t}: ${a ? `Expected ${a} but r` : \"R\"}eceived ${i}`,\n    requirement: e.requirement,\n    path: s == null ? void 0 : s.path,\n    issues: s == null ? void 0 : s.issues,\n    lang: r.lang,\n    abortEarly: r.abortEarly,\n    abortPipeEarly: r.abortPipeEarly\n  }, c = e.kind === \"schema\", l = (s == null ? void 0 : s.message) ?? e.message ?? /* @__PURE__ */ ac(e.reference, u.lang) ?? (c ? /* @__PURE__ */ oc(u.lang) : null) ?? r.message ?? /* @__PURE__ */ sc(u.lang);\n  l && (u.message = typeof l == \"function\" ? (\n    // @ts-expect-error\n    l(u)\n  ) : l), c && (n.typed = !1), n.issues ? n.issues.push(u) : n.issues = [u];\n}\n// @__NO_SIDE_EFFECTS__\nfunction Z(e) {\n  return {\n    version: 1,\n    vendor: \"valibot\",\n    validate(t) {\n      return e[\"~run\"]({ value: t }, /* @__PURE__ */ ao());\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction io(e, t) {\n  return Object.hasOwn(e, t) && t !== \"__proto__\" && t !== \"prototype\" && t !== \"constructor\";\n}\n// @__NO_SIDE_EFFECTS__\nfunction uc(e, t) {\n  const n = [...new Set(e)];\n  return n.length > 1 ? `(${n.join(` ${t} `)})` : n[0] ?? \"never\";\n}\nvar en = class extends Error {\n  /**\n   * Creates a Valibot error with useful information.\n   *\n   * @param issues The error issues.\n   */\n  constructor(e) {\n    super(e[0].message), this.name = \"ValiError\", this.issues = e;\n  }\n};\n// @__NO_SIDE_EFFECTS__\nfunction uo(e) {\n  return {\n    kind: \"validation\",\n    type: \"integer\",\n    reference: uo,\n    async: !1,\n    expects: null,\n    requirement: Number.isInteger,\n    message: e,\n    \"~run\"(t, n) {\n      return t.typed && !this.requirement(t.value) && H(this, \"integer\", t, n), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction On(e) {\n  return {\n    kind: \"transformation\",\n    type: \"transform\",\n    reference: On,\n    async: !1,\n    operation: e,\n    \"~run\"(t) {\n      return t.value = this.operation(t.value), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction co(e, t, n) {\n  return typeof e.default == \"function\" ? (\n    // @ts-expect-error\n    e.default(t, n)\n  ) : (\n    // @ts-expect-error\n    e.default\n  );\n}\n// @__NO_SIDE_EFFECTS__\nfunction lo(e, t) {\n  return {\n    kind: \"schema\",\n    type: \"array\",\n    reference: lo,\n    expects: \"Array\",\n    async: !1,\n    item: e,\n    message: t,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Z(this);\n    },\n    \"~run\"(n, r) {\n      var o;\n      const s = n.value;\n      if (Array.isArray(s)) {\n        n.typed = !0, n.value = [];\n        for (let a = 0; a < s.length; a++) {\n          const i = s[a], u = this.item[\"~run\"]({ value: i }, r);\n          if (u.issues) {\n            const c = {\n              type: \"array\",\n              origin: \"value\",\n              input: s,\n              key: a,\n              value: i\n            };\n            for (const l of u.issues)\n              l.path ? l.path.unshift(c) : l.path = [c], (o = n.issues) == null || o.push(l);\n            if (n.issues || (n.issues = u.issues), r.abortEarly) {\n              n.typed = !1;\n              break;\n            }\n          }\n          u.typed || (n.typed = !1), n.value.push(u.value);\n        }\n      } else\n        H(this, \"type\", n, r);\n      return n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction In(e) {\n  return {\n    kind: \"schema\",\n    type: \"date\",\n    reference: In,\n    expects: \"Date\",\n    async: !1,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Z(this);\n    },\n    \"~run\"(t, n) {\n      return t.value instanceof Date ? isNaN(t.value) ? H(this, \"type\", t, n, {\n        received: '\"Invalid Date\"'\n      }) : t.typed = !0 : H(this, \"type\", t, n), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction po(e, t) {\n  return {\n    kind: \"schema\",\n    type: \"instance\",\n    reference: po,\n    expects: e.name,\n    async: !1,\n    class: e,\n    message: t,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Z(this);\n    },\n    \"~run\"(n, r) {\n      return n.value instanceof this.class ? n.typed = !0 : H(this, \"type\", n, r), n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction tn(e, t) {\n  return {\n    kind: \"schema\",\n    type: \"loose_object\",\n    reference: tn,\n    expects: \"Object\",\n    async: !1,\n    entries: e,\n    message: t,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Z(this);\n    },\n    \"~run\"(n, r) {\n      var o;\n      const s = n.value;\n      if (s && typeof s == \"object\") {\n        n.typed = !0, n.value = {};\n        for (const a in this.entries) {\n          const i = this.entries[a];\n          if (a in s || (i.type === \"exact_optional\" || i.type === \"optional\" || i.type === \"nullish\") && // @ts-expect-error\n          i.default !== void 0) {\n            const u = a in s ? (\n              // @ts-expect-error\n              s[a]\n            ) : /* @__PURE__ */ co(i), c = i[\"~run\"]({ value: u }, r);\n            if (c.issues) {\n              const l = {\n                type: \"object\",\n                origin: \"value\",\n                input: s,\n                key: a,\n                value: u\n              };\n              for (const p of c.issues)\n                p.path ? p.path.unshift(l) : p.path = [l], (o = n.issues) == null || o.push(p);\n              if (n.issues || (n.issues = c.issues), r.abortEarly) {\n                n.typed = !1;\n                break;\n              }\n            }\n            c.typed || (n.typed = !1), n.value[a] = c.value;\n          } else if (i.type !== \"exact_optional\" && i.type !== \"optional\" && i.type !== \"nullish\" && (H(this, \"key\", n, r, {\n            input: void 0,\n            expected: `\"${a}\"`,\n            path: [\n              {\n                type: \"object\",\n                origin: \"key\",\n                input: s,\n                key: a,\n                // @ts-expect-error\n                value: s[a]\n              }\n            ]\n          }), r.abortEarly))\n            break;\n        }\n        if (!n.issues || !r.abortEarly)\n          for (const a in s)\n            /* @__PURE__ */ io(s, a) && !(a in this.entries) && (n.value[a] = s[a]);\n      } else\n        H(this, \"type\", n, r);\n      return n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction jn(e) {\n  return {\n    kind: \"schema\",\n    type: \"number\",\n    reference: jn,\n    expects: \"number\",\n    async: !1,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Z(this);\n    },\n    \"~run\"(t, n) {\n      return typeof t.value == \"number\" && !isNaN(t.value) ? t.typed = !0 : H(this, \"type\", t, n), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction fo(e, t) {\n  return {\n    kind: \"schema\",\n    type: \"optional\",\n    reference: fo,\n    expects: `(${e.expects} | undefined)`,\n    async: !1,\n    wrapped: e,\n    default: t,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Z(this);\n    },\n    \"~run\"(n, r) {\n      return n.value === void 0 && (this.default !== void 0 && (n.value = /* @__PURE__ */ co(this, n, r)), n.value === void 0) ? (n.typed = !0, n) : this.wrapped[\"~run\"](n, r);\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction mo(e, t, n) {\n  return {\n    kind: \"schema\",\n    type: \"record\",\n    reference: mo,\n    expects: \"Object\",\n    async: !1,\n    key: e,\n    value: t,\n    message: n,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Z(this);\n    },\n    \"~run\"(r, s) {\n      var a, i;\n      const o = r.value;\n      if (o && typeof o == \"object\") {\n        r.typed = !0, r.value = {};\n        for (const u in o)\n          if (/* @__PURE__ */ io(o, u)) {\n            const c = o[u], l = this.key[\"~run\"]({ value: u }, s);\n            if (l.issues) {\n              const m = {\n                type: \"object\",\n                origin: \"key\",\n                input: o,\n                key: u,\n                value: c\n              };\n              for (const f of l.issues)\n                f.path = [m], (a = r.issues) == null || a.push(f);\n              if (r.issues || (r.issues = l.issues), s.abortEarly) {\n                r.typed = !1;\n                break;\n              }\n            }\n            const p = this.value[\"~run\"](\n              { value: c },\n              s\n            );\n            if (p.issues) {\n              const m = {\n                type: \"object\",\n                origin: \"value\",\n                input: o,\n                key: u,\n                value: c\n              };\n              for (const f of p.issues)\n                f.path ? f.path.unshift(m) : f.path = [m], (i = r.issues) == null || i.push(f);\n              if (r.issues || (r.issues = p.issues), s.abortEarly) {\n                r.typed = !1;\n                break;\n              }\n            }\n            (!l.typed || !p.typed) && (r.typed = !1), l.typed && (r.value[l.value] = p.value);\n          }\n      } else\n        H(this, \"type\", r, s);\n      return r;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction W(e) {\n  return {\n    kind: \"schema\",\n    type: \"string\",\n    reference: W,\n    expects: \"string\",\n    async: !1,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Z(this);\n    },\n    \"~run\"(t, n) {\n      return typeof t.value == \"string\" ? t.typed = !0 : H(this, \"type\", t, n), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction Wr(e) {\n  let t;\n  if (e)\n    for (const n of e)\n      t ? t.push(...n.issues) : t = n.issues;\n  return t;\n}\n// @__NO_SIDE_EFFECTS__\nfunction ho(e, t) {\n  return {\n    kind: \"schema\",\n    type: \"union\",\n    reference: ho,\n    expects: /* @__PURE__ */ uc(\n      e.map((n) => n.expects),\n      \"|\"\n    ),\n    async: !1,\n    options: e,\n    message: t,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Z(this);\n    },\n    \"~run\"(n, r) {\n      let s, o, a;\n      for (const i of this.options) {\n        const u = i[\"~run\"]({ value: n.value }, r);\n        if (u.typed)\n          if (u.issues)\n            o ? o.push(u) : o = [u];\n          else {\n            s = u;\n            break;\n          }\n        else\n          a ? a.push(u) : a = [u];\n      }\n      if (s)\n        return s;\n      if (o) {\n        if (o.length === 1)\n          return o[0];\n        H(this, \"type\", n, r, {\n          issues: /* @__PURE__ */ Wr(o)\n        }), n.typed = !0;\n      } else {\n        if ((a == null ? void 0 : a.length) === 1)\n          return a[0];\n        H(this, \"type\", n, r, {\n          issues: /* @__PURE__ */ Wr(a)\n        });\n      }\n      return n;\n    }\n  };\n}\nfunction dt(e, t, n) {\n  const r = e[\"~run\"]({ value: t }, /* @__PURE__ */ ao(n));\n  if (r.issues)\n    throw new en(r.issues);\n  return r.value;\n}\n// @__NO_SIDE_EFFECTS__\nfunction Qe(...e) {\n  return {\n    ...e[0],\n    pipe: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Z(this);\n    },\n    \"~run\"(t, n) {\n      for (const r of e)\n        if (r.kind !== \"metadata\") {\n          if (t.issues && (r.kind === \"schema\" || r.kind === \"transformation\")) {\n            t.typed = !1;\n            break;\n          }\n          (!t.issues || !n.abortEarly && !n.abortPipeEarly) && (t = r[\"~run\"](t, n));\n        }\n      return t;\n    }\n  };\n}\nconst _o = \"web_app_invoke_custom_method\", Fe = L(\"cloudStorage\", _o), cc = G(_o), bo = Fe(\"deleteItem\", (e, t) => {\n  const n = Array.isArray(e) ? e : [e];\n  return n.length ? ke(\"deleteStorageValues\", { keys: n }, t).then() : x.resolve();\n});\nfunction lc(e, t) {\n  const n = Array.isArray(e) ? e : [e];\n  return n.length ? ke(\"getStorageValues\", { keys: n }, t).then((r) => {\n    const s = {\n      // Fulfill the response with probably missing keys.\n      ...n.reduce((o, a) => (o[a] = \"\", o), {}),\n      ...dt(/* @__PURE__ */ mo(/* @__PURE__ */ W(), /* @__PURE__ */ W()), r)\n    };\n    return typeof e == \"string\" ? s[e] : s;\n  }) : x.resolve(Array.isArray(e) ? {} : \"\");\n}\nconst pc = Fe(\"getItem\", lc), yo = Fe(\"getKeys\", (e) => ke(\"getStorageKeys\", {}, e).then(\n  (t) => dt(/* @__PURE__ */ lo(/* @__PURE__ */ W()), t)\n)), dc = Fe(\"setItem\", (e, t, n) => ke(\"saveStorageValue\", {\n  key: e,\n  value: t\n}, n).then()), fc = Fe(\"clear\", (e) => yo(e).then(bo)), Yf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  clear: fc,\n  deleteItem: bo,\n  getItem: pc,\n  getKeys: yo,\n  isSupported: cc,\n  setItem: dc\n}, Symbol.toStringTag, { value: \"Module\" })), We = \"web_app_trigger_haptic_feedback\", qn = L(\"hapticFeedback\", We), mc = G(We), hc = qn(\n  \"impactOccurred\",\n  (e) => {\n    _(We, {\n      type: \"impact\",\n      impact_style: e\n    });\n  }\n), _c = qn(\n  \"notificationOccurred\",\n  (e) => {\n    _(We, {\n      type: \"notification\",\n      notification_type: e\n    });\n  }\n), bc = qn(\n  \"selectionChanged\",\n  () => {\n    _(We, { type: \"selection_change\" });\n  }\n), Zf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  impactOccurred: hc,\n  isSupported: mc,\n  notificationOccurred: _c,\n  selectionChanged: bc\n}, Symbol.toStringTag, { value: \"Module\" })), [go, yc] = /* @__PURE__ */ b(void 0);\nfunction X(e) {\n  return /* @__PURE__ */ h(() => {\n    const t = go();\n    return t ? t[e] : void 0;\n  });\n}\nconst vo = X(\"auth_date\"), wo = X(\"can_send_after\"), gc = /* @__PURE__ */ h(() => {\n  const e = vo(), t = wo();\n  return t && e ? new Date(e.getTime() + t * 1e3) : void 0;\n}), vc = X(\"chat\"), wc = X(\"chat_type\"), Ec = X(\"chat_instance\"), $c = X(\"hash\"), Sc = X(\"query_id\"), [Cc, Ac] = /* @__PURE__ */ b(), kc = X(\"receiver\");\nfunction Mc() {\n  const e = $n();\n  go.set(e.tgWebAppData), Cc.set(zi());\n}\nconst Pc = X(\"start_param\"), xc = X(\"user\"), Xf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  authDate: vo,\n  canSendAfter: wo,\n  canSendAfterDate: gc,\n  chat: vc,\n  chatInstance: Ec,\n  chatType: wc,\n  hash: $c,\n  queryId: Sc,\n  raw: Ac,\n  receiver: kc,\n  restore: Mc,\n  startParam: Pc,\n  state: yc,\n  user: xc\n}, Symbol.toStringTag, { value: \"Module\" })), Dn = \"web_app_open_invoice\", Tc = L(\"invoice\", Dn), Bc = G(Dn);\nfunction Oc(e, t, n) {\n  let r;\n  if (t === \"url\") {\n    const { hostname: s, pathname: o } = new URL(e, window.location.href);\n    if (s !== \"t.me\")\n      throw new J(`Link has unexpected hostname: ${s}`);\n    const a = o.match(/^\\/(\\$|invoice\\/)([A-Za-z0-9\\-_=]+)$/);\n    if (!a)\n      throw new J(\n        'Expected to receive a link with a pathname in format \"/invoice/{slug}\" or \"/${slug}\"'\n      );\n    [, , r] = a;\n  } else\n    r = e, n = t;\n  return C(Dn, \"invoice_closed\", {\n    ...n,\n    params: { slug: r },\n    capture: (s) => r === s.slug\n  }).then((s) => s.status);\n}\nconst [\n  Ic,\n  jc,\n  qc\n] = O(Oc, \"Invoice is already opened\"), Dc = Tc(\"open\", Ic), [, Nc, Vc] = jc, [, Lc] = qc, em = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  isOpened: Vc,\n  isSupported: Bc,\n  open: Dc,\n  openError: Lc,\n  openPromise: Nc\n}, Symbol.toStringTag, { value: \"Module\" })), je = \"locationManager\", Nn = \"web_app_check_location\", Ur = \"web_app_open_location_settings\", Ye = /* @__PURE__ */ Ae({\n  available: !1,\n  accessGranted: !1,\n  accessRequested: !1\n});\nfunction Vn(e) {\n  return /* @__PURE__ */ h(() => Ye()[e]);\n}\nconst Rc = G(Nn), Hc = Vn(\"available\"), Fc = Vn(\"accessGranted\"), Wc = Vn(\"accessRequested\");\nfunction Uc(e) {\n  let t = !1, n, r;\n  return e.available && (t = !0, n = e.access_requested, r = e.access_granted), {\n    available: t,\n    accessGranted: r || !1,\n    accessRequested: n || !1\n  };\n}\nconst [\n  zc,\n  Gc,\n  Qc,\n  Eo\n] = /* @__PURE__ */ He(\n  je,\n  (e) => {\n    const t = V() && N(je);\n    return t ? x.resolve(t) : C(\"web_app_check_location\", \"location_checked\", e).then(Uc);\n  },\n  (e) => {\n    Ye.set(e), z(je, e);\n  }\n), $o = L(je, Nn), Jc = ce(je, Eo[0], Nn), Kc = $o(\"mount\", zc), [, Yc, Zc] = Gc, [, Xc] = Qc, [el, tl] = Eo, [\n  nl,\n  rl,\n  sl\n] = O(\n  (e) => C(\"web_app_request_location\", \"location_requested\", e).then((t) => {\n    if (!t.available)\n      throw Ye.set({ ...Ye(), available: !1 }), new Ws(\"Location data tracking is not available\");\n    const { available: n, ...r } = t;\n    return r;\n  }),\n  \"Location request is currently in progress\"\n), ol = Jc(\"requestLocation\", nl), [, So, al] = rl, [, il] = sl, ul = $o(\"openSettings\", () => {\n  _(Ur);\n}, Ur);\nfunction cl() {\n  Me(So), el.set(!1);\n}\nconst tm = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  isAccessGranted: Fc,\n  isAccessRequested: Wc,\n  isAvailable: Hc,\n  isMounted: tl,\n  isMounting: Zc,\n  isRequestingLocation: al,\n  isSupported: Rc,\n  mount: Kc,\n  mountError: Xc,\n  mountPromise: Yc,\n  openSettings: ul,\n  requestLocation: ol,\n  requestLocationError: il,\n  requestLocationPromise: So,\n  unmount: cl\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction Ln(e) {\n  const t = {};\n  for (const n in e) {\n    const r = e[n];\n    r !== void 0 && (t[n] = r);\n  }\n  return t;\n}\n// @__NO_SIDE_EFFECTS__\nfunction Co(e) {\n  return {\n    lang: (e == null ? void 0 : e.lang) ?? void 0,\n    message: e == null ? void 0 : e.message,\n    abortEarly: (e == null ? void 0 : e.abortEarly) ?? void 0,\n    abortPipeEarly: (e == null ? void 0 : e.abortPipeEarly) ?? void 0\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction ll(e, t) {\n  var n;\n  return (n = void 0) == null ? void 0 : n.get(t);\n}\n// @__NO_SIDE_EFFECTS__\nfunction pl(e) {\n  var t, n;\n  const r = typeof e;\n  return r === \"string\" ? `\"${e}\"` : r === \"number\" || r === \"bigint\" || r === \"boolean\" ? `${e}` : r === \"object\" || r === \"function\" ? (e && ((n = (t = Object.getPrototypeOf(e)) == null ? void 0 : t.constructor) == null ? void 0 : n.name)) ?? \"null\" : r;\n}\nfunction D(e, t, n, r, s) {\n  const o = s && \"input\" in s ? s.input : n.value, a = (s == null ? void 0 : s.expected) ?? e.expects ?? null, i = (s == null ? void 0 : s.received) ?? /* @__PURE__ */ pl(o), u = {\n    kind: e.kind,\n    type: e.type,\n    input: o,\n    expected: a,\n    received: i,\n    message: `Invalid ${t}: ${a ? `Expected ${a} but r` : \"R\"}eceived ${i}`,\n    requirement: e.requirement,\n    path: s == null ? void 0 : s.path,\n    issues: s == null ? void 0 : s.issues,\n    lang: r.lang,\n    abortEarly: r.abortEarly,\n    abortPipeEarly: r.abortPipeEarly\n  }, c = e.kind === \"schema\", l = (s == null ? void 0 : s.message) ?? e.message ?? /* @__PURE__ */ ll(e.reference, u.lang) ?? (c ? (u.lang, void 0) : null) ?? r.message ?? (u.lang, void 0);\n  l && (u.message = typeof l == \"function\" ? (\n    // @ts-expect-error\n    l(u)\n  ) : l), c && (n.typed = !1), n.issues ? n.issues.push(u) : n.issues = [u];\n}\n// @__NO_SIDE_EFFECTS__\nfunction Q(e) {\n  return {\n    version: 1,\n    vendor: \"valibot\",\n    validate(t) {\n      return e[\"~run\"]({ value: t }, /* @__PURE__ */ Co());\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction Ao(e, t) {\n  return Object.hasOwn(e, t) && t !== \"__proto__\" && t !== \"prototype\" && t !== \"constructor\";\n}\n// @__NO_SIDE_EFFECTS__\nfunction dl(e, t) {\n  const n = [...new Set(e)];\n  return n.length > 1 ? `(${n.join(` ${t} `)})` : n[0] ?? \"never\";\n}\nvar fl = class extends Error {\n  /**\n   * Creates a Valibot error with useful information.\n   *\n   * @param issues The error issues.\n   */\n  constructor(e) {\n    super(e[0].message), this.name = \"ValiError\", this.issues = e;\n  }\n};\n// @__NO_SIDE_EFFECTS__\nfunction ko(e, t) {\n  return {\n    kind: \"validation\",\n    type: \"check\",\n    reference: ko,\n    async: !1,\n    expects: null,\n    requirement: e,\n    message: t,\n    \"~run\"(n, r) {\n      return n.typed && !this.requirement(n.value) && D(this, \"input\", n, r), n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction Mo(e) {\n  return {\n    kind: \"validation\",\n    type: \"integer\",\n    reference: Mo,\n    async: !1,\n    expects: null,\n    requirement: Number.isInteger,\n    message: e,\n    \"~run\"(t, n) {\n      return t.typed && !this.requirement(t.value) && D(this, \"integer\", t, n), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction ie(e) {\n  return {\n    kind: \"transformation\",\n    type: \"transform\",\n    reference: ie,\n    async: !1,\n    operation: e,\n    \"~run\"(t) {\n      return t.value = this.operation(t.value), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction Po(e, t, n) {\n  return typeof e.default == \"function\" ? (\n    // @ts-expect-error\n    e.default(t, n)\n  ) : (\n    // @ts-expect-error\n    e.default\n  );\n}\n// @__NO_SIDE_EFFECTS__\nfunction Oe(e) {\n  return {\n    kind: \"schema\",\n    type: \"boolean\",\n    reference: Oe,\n    expects: \"boolean\",\n    async: !1,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Q(this);\n    },\n    \"~run\"(t, n) {\n      return typeof t.value == \"boolean\" ? t.typed = !0 : D(this, \"type\", t, n), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction xo(e) {\n  return {\n    kind: \"schema\",\n    type: \"date\",\n    reference: xo,\n    expects: \"Date\",\n    async: !1,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Q(this);\n    },\n    \"~run\"(t, n) {\n      return t.value instanceof Date ? isNaN(t.value) ? D(this, \"type\", t, n, {\n        received: '\"Invalid Date\"'\n      }) : t.typed = !0 : D(this, \"type\", t, n), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction To(e, t) {\n  return {\n    kind: \"schema\",\n    type: \"instance\",\n    reference: To,\n    expects: e.name,\n    async: !1,\n    class: e,\n    message: t,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Q(this);\n    },\n    \"~run\"(n, r) {\n      return n.value instanceof this.class ? n.typed = !0 : D(this, \"type\", n, r), n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction Rn(e) {\n  return {\n    kind: \"schema\",\n    type: \"lazy\",\n    reference: Rn,\n    expects: \"unknown\",\n    async: !1,\n    getter: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Q(this);\n    },\n    \"~run\"(t, n) {\n      return this.getter(t.value)[\"~run\"](t, n);\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction Ue(e, t) {\n  return {\n    kind: \"schema\",\n    type: \"loose_object\",\n    reference: Ue,\n    expects: \"Object\",\n    async: !1,\n    entries: e,\n    message: t,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Q(this);\n    },\n    \"~run\"(n, r) {\n      var s;\n      const o = n.value;\n      if (o && typeof o == \"object\") {\n        n.typed = !0, n.value = {};\n        for (const a in this.entries) {\n          const i = this.entries[a];\n          if (a in o || (i.type === \"exact_optional\" || i.type === \"optional\" || i.type === \"nullish\") && // @ts-expect-error\n          i.default !== void 0) {\n            const u = a in o ? (\n              // @ts-expect-error\n              o[a]\n            ) : /* @__PURE__ */ Po(i), c = i[\"~run\"]({ value: u }, r);\n            if (c.issues) {\n              const l = {\n                type: \"object\",\n                origin: \"value\",\n                input: o,\n                key: a,\n                value: u\n              };\n              for (const p of c.issues)\n                p.path ? p.path.unshift(l) : p.path = [l], (s = n.issues) == null || s.push(p);\n              if (n.issues || (n.issues = c.issues), r.abortEarly) {\n                n.typed = !1;\n                break;\n              }\n            }\n            c.typed || (n.typed = !1), n.value[a] = c.value;\n          } else if (i.type !== \"exact_optional\" && i.type !== \"optional\" && i.type !== \"nullish\" && (D(this, \"key\", n, r, {\n            input: void 0,\n            expected: `\"${a}\"`,\n            path: [\n              {\n                type: \"object\",\n                origin: \"key\",\n                input: o,\n                key: a,\n                // @ts-expect-error\n                value: o[a]\n              }\n            ]\n          }), r.abortEarly))\n            break;\n        }\n        if (!n.issues || !r.abortEarly)\n          for (const a in o)\n            /* @__PURE__ */ Ao(o, a) && !(a in this.entries) && (n.value[a] = o[a]);\n      } else\n        D(this, \"type\", n, r);\n      return n;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction ft(e) {\n  return {\n    kind: \"schema\",\n    type: \"number\",\n    reference: ft,\n    expects: \"number\",\n    async: !1,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Q(this);\n    },\n    \"~run\"(t, n) {\n      return typeof t.value == \"number\" && !isNaN(t.value) ? t.typed = !0 : D(this, \"type\", t, n), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction w(e, t) {\n  return {\n    kind: \"schema\",\n    type: \"optional\",\n    reference: w,\n    expects: `(${e.expects} | undefined)`,\n    async: !1,\n    wrapped: e,\n    default: t,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Q(this);\n    },\n    \"~run\"(n, r) {\n      return n.value === void 0 && (this.default !== void 0 && (n.value = /* @__PURE__ */ Po(this, n, r)), n.value === void 0) ? (n.typed = !0, n) : this.wrapped[\"~run\"](n, r);\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction Bo(e, t, n) {\n  return {\n    kind: \"schema\",\n    type: \"record\",\n    reference: Bo,\n    expects: \"Object\",\n    async: !1,\n    key: e,\n    value: t,\n    message: n,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Q(this);\n    },\n    \"~run\"(r, s) {\n      var o, a;\n      const i = r.value;\n      if (i && typeof i == \"object\") {\n        r.typed = !0, r.value = {};\n        for (const u in i)\n          if (/* @__PURE__ */ Ao(i, u)) {\n            const c = i[u], l = this.key[\"~run\"]({ value: u }, s);\n            if (l.issues) {\n              const m = {\n                type: \"object\",\n                origin: \"key\",\n                input: i,\n                key: u,\n                value: c\n              };\n              for (const f of l.issues)\n                f.path = [m], (o = r.issues) == null || o.push(f);\n              if (r.issues || (r.issues = l.issues), s.abortEarly) {\n                r.typed = !1;\n                break;\n              }\n            }\n            const p = this.value[\"~run\"](\n              { value: c },\n              s\n            );\n            if (p.issues) {\n              const m = {\n                type: \"object\",\n                origin: \"value\",\n                input: i,\n                key: u,\n                value: c\n              };\n              for (const f of p.issues)\n                f.path ? f.path.unshift(m) : f.path = [m], (a = r.issues) == null || a.push(f);\n              if (r.issues || (r.issues = p.issues), s.abortEarly) {\n                r.typed = !1;\n                break;\n              }\n            }\n            (!l.typed || !p.typed) && (r.typed = !1), l.typed && (r.value[l.value] = p.value);\n          }\n      } else\n        D(this, \"type\", r, s);\n      return r;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction g(e) {\n  return {\n    kind: \"schema\",\n    type: \"string\",\n    reference: g,\n    expects: \"string\",\n    async: !1,\n    message: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Q(this);\n    },\n    \"~run\"(t, n) {\n      return typeof t.value == \"string\" ? t.typed = !0 : D(this, \"type\", t, n), t;\n    }\n  };\n}\n// @__NO_SIDE_EFFECTS__\nfunction zr(e) {\n  let t;\n  if (e)\n    for (const n of e)\n      t ? t.push(...n.issues) : t = n.issues;\n  return t;\n}\n// @__NO_SIDE_EFFECTS__\nfunction Hn(e, t) {\n  return {\n    kind: \"schema\",\n    type: \"union\",\n    reference: Hn,\n    expects: /* @__PURE__ */ dl(\n      e.map((n) => n.expects),\n      \"|\"\n    ),\n    async: !1,\n    options: e,\n    message: t,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Q(this);\n    },\n    \"~run\"(n, r) {\n      let s, o, a;\n      for (const i of this.options) {\n        const u = i[\"~run\"]({ value: n.value }, r);\n        if (u.typed)\n          if (u.issues)\n            o ? o.push(u) : o = [u];\n          else {\n            s = u;\n            break;\n          }\n        else\n          a ? a.push(u) : a = [u];\n      }\n      if (s)\n        return s;\n      if (o) {\n        if (o.length === 1)\n          return o[0];\n        D(this, \"type\", n, r, {\n          issues: /* @__PURE__ */ zr(o)\n        }), n.typed = !0;\n      } else {\n        if ((a == null ? void 0 : a.length) === 1)\n          return a[0];\n        D(this, \"type\", n, r, {\n          issues: /* @__PURE__ */ zr(a)\n        });\n      }\n      return n;\n    }\n  };\n}\nfunction Oo(e, t, n) {\n  const r = e[\"~run\"]({ value: t }, /* @__PURE__ */ Co(n));\n  if (r.issues)\n    throw new fl(r.issues);\n  return r.value;\n}\n// @__NO_SIDE_EFFECTS__\nfunction ue(...e) {\n  return {\n    ...e[0],\n    pipe: e,\n    get \"~standard\"() {\n      return /* @__PURE__ */ Q(this);\n    },\n    \"~run\"(t, n) {\n      for (const r of e)\n        if (r.kind !== \"metadata\") {\n          if (t.issues && (r.kind === \"schema\" || r.kind === \"transformation\")) {\n            t.typed = !1;\n            break;\n          }\n          (!t.issues || !n.abortEarly && !n.abortPipeEarly) && (t = r[\"~run\"](t, n));\n        }\n      return t;\n    }\n  };\n}\nfunction ml(e) {\n  return e.replace(/_[a-z]/g, (t) => t[1].toUpperCase());\n}\nfunction hl(e) {\n  return Object.entries(e).reduce((t, [n, r]) => (t[ml(n)] = r, t), {});\n}\nfunction nn(e) {\n  const t = hl(e);\n  for (const n in t) {\n    const r = t[n];\n    r && typeof r == \"object\" && !(r instanceof Date) && (t[n] = Array.isArray(r) ? r.map(nn) : nn(r));\n  }\n  return t;\n}\nfunction Fn(e) {\n  return /* @__PURE__ */ ie((t) => e ? nn(t) : t);\n}\nfunction Io(e) {\n  return (t) => /* @__PURE__ */ ue(\n    e,\n    Fn(t)\n  );\n}\nfunction jo(e) {\n  return (t, n) => Oo(\n    /* @__PURE__ */ ue(e, Fn(n)),\n    t\n  );\n}\nfunction qo() {\n  return /* @__PURE__ */ ie(JSON.parse);\n}\nfunction Wn(e) {\n  const t = Io(e);\n  return (n) => /* @__PURE__ */ ue(\n    /* @__PURE__ */ g(),\n    qo(),\n    t(n)\n  );\n}\nfunction Do(e) {\n  return /* @__PURE__ */ ie((t) => {\n    const n = {};\n    return new URLSearchParams(t).forEach((r, s) => {\n      const o = n[s];\n      Array.isArray(o) ? o.push(r) : o === void 0 ? n[s] = r : n[s] = [o, r];\n    }), Oo(e, n);\n  });\n}\nfunction No(e) {\n  return (t) => /* @__PURE__ */ ue(\n    /* @__PURE__ */ Hn([/* @__PURE__ */ g(), /* @__PURE__ */ To(URLSearchParams)]),\n    Do(e),\n    Fn(t)\n  );\n}\nconst Gr = /* @__PURE__ */ w(/* @__PURE__ */ Rn(() => vl())), _l = /* @__PURE__ */ Ue({\n  id: /* @__PURE__ */ ft(),\n  photo_url: /* @__PURE__ */ w(/* @__PURE__ */ g()),\n  type: /* @__PURE__ */ g(),\n  title: /* @__PURE__ */ g(),\n  username: /* @__PURE__ */ w(/* @__PURE__ */ g())\n}), bl = /* @__PURE__ */ Ue({\n  added_to_attachment_menu: /* @__PURE__ */ w(/* @__PURE__ */ Oe()),\n  allows_write_to_pm: /* @__PURE__ */ w(/* @__PURE__ */ Oe()),\n  first_name: /* @__PURE__ */ g(),\n  id: /* @__PURE__ */ ft(),\n  is_bot: /* @__PURE__ */ w(/* @__PURE__ */ Oe()),\n  is_premium: /* @__PURE__ */ w(/* @__PURE__ */ Oe()),\n  last_name: /* @__PURE__ */ w(/* @__PURE__ */ g()),\n  language_code: /* @__PURE__ */ w(/* @__PURE__ */ g()),\n  photo_url: /* @__PURE__ */ w(/* @__PURE__ */ g()),\n  username: /* @__PURE__ */ w(/* @__PURE__ */ g())\n}), yl = /* @__PURE__ */ Ue({\n  auth_date: /* @__PURE__ */ ue(\n    /* @__PURE__ */ g(),\n    /* @__PURE__ */ ie((e) => new Date(Number(e) * 1e3)),\n    /* @__PURE__ */ xo()\n  ),\n  can_send_after: /* @__PURE__ */ w(/* @__PURE__ */ ue(/* @__PURE__ */ g(), /* @__PURE__ */ ie(Number), /* @__PURE__ */ Mo())),\n  chat: /* @__PURE__ */ w(/* @__PURE__ */ Rn(() => gl())),\n  chat_type: /* @__PURE__ */ w(/* @__PURE__ */ g()),\n  chat_instance: /* @__PURE__ */ w(/* @__PURE__ */ g()),\n  hash: /* @__PURE__ */ g(),\n  query_id: /* @__PURE__ */ w(/* @__PURE__ */ g()),\n  receiver: Gr,\n  start_param: /* @__PURE__ */ w(/* @__PURE__ */ g()),\n  signature: /* @__PURE__ */ g(),\n  user: Gr\n}), gl = Wn(_l), vl = Wn(bl), Vo = No(yl);\nfunction Ee(e) {\n  return /^#[\\da-f]{6}$/i.test(e);\n}\nfunction wl(e) {\n  return /^#[\\da-f]{3}$/i.test(e);\n}\nfunction El(e) {\n  const t = e.replace(/\\s/g, \"\").toLowerCase();\n  if (Ee(t))\n    return t;\n  if (wl(t)) {\n    let r = \"#\";\n    for (let s = 0; s < 3; s += 1)\n      r += t[1 + s].repeat(2);\n    return r;\n  }\n  const n = t.match(/^rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)$/) || t.match(/^rgba\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3}),\\d{1,3}\\)$/);\n  if (!n)\n    throw new Error(`Value \"${e}\" does not satisfy any of known RGB formats.`);\n  return n.slice(1).reduce((r, s) => r + parseInt(s, 10).toString(16).padStart(2, \"0\"), \"#\");\n}\nconst $l = Io(\n  /* @__PURE__ */ Bo(\n    /* @__PURE__ */ g(),\n    /* @__PURE__ */ ue(\n      /* @__PURE__ */ Hn([/* @__PURE__ */ g(), /* @__PURE__ */ ft()]),\n      /* @__PURE__ */ ie((e) => typeof e == \"number\" ? `#${(e & 16777215).toString(16).padStart(6, \"0\")}` : e),\n      /* @__PURE__ */ ko(Ee)\n    )\n  )\n), It = /* @__PURE__ */ w(\n  /* @__PURE__ */ ue(/* @__PURE__ */ g(), /* @__PURE__ */ ie((e) => e === \"1\"))\n), Qr = Wn($l()), Sl = /* @__PURE__ */ Ue({\n  tgWebAppBotInline: It,\n  tgWebAppData: /* @__PURE__ */ w(Vo()),\n  tgWebAppDefaultColors: /* @__PURE__ */ w(Qr()),\n  tgWebAppFullscreen: It,\n  tgWebAppPlatform: /* @__PURE__ */ g(),\n  tgWebAppShowSettings: It,\n  tgWebAppStartParam: /* @__PURE__ */ w(/* @__PURE__ */ g()),\n  tgWebAppThemeParams: Qr(),\n  tgWebAppVersion: /* @__PURE__ */ g()\n}), Cl = No(Sl), nm = jo(Vo()), rm = jo(Cl());\nfunction Lo(e, t) {\n  return t || (t = (n, r) => JSON.stringify(r)), new URLSearchParams(\n    Object.entries(e).reduce((n, [r, s]) => (Array.isArray(s) ? n.push(...s.map((o) => [r, String(o)])) : s != null && n.push([\n      r,\n      s instanceof Date ? (s.getTime() / 1e3 | 0).toString() : typeof s == \"string\" || typeof s == \"number\" ? String(s) : typeof s == \"boolean\" ? s ? \"1\" : \"0\" : t(r, s)\n    ]), n), [])\n  ).toString();\n}\nfunction Al(e) {\n  return Lo(e);\n}\nfunction sm(e) {\n  return Lo(e, (t, n) => t === \"tgWebAppData\" ? Al(n) : JSON.stringify(n));\n}\nfunction Ro(e) {\n  const t = El(e);\n  return Math.sqrt(\n    [0.299, 0.587, 0.114].reduce((n, r, s) => {\n      const o = parseInt(t.slice(1 + s * 2, 1 + (s + 1) * 2), 16);\n      return n + o * o * r;\n    }, 0)\n  ) < 120;\n}\nconst [jt, kl] = /* @__PURE__ */ b(!1), [de, Ml] = /* @__PURE__ */ b({});\nfunction T(e) {\n  return /* @__PURE__ */ h(() => de()[e]);\n}\nconst Pl = T(\"accent_text_color\"), mt = T(\"bg_color\"), Un = T(\"button_color\"), Ho = T(\"button_text_color\"), Fo = T(\"bottom_bar_bg_color\"), xl = T(\"destructive_text_color\"), Tl = T(\"header_bg_color\"), Bl = T(\"hint_color\"), Ol = /* @__PURE__ */ h(() => {\n  const e = mt();\n  return !e || Ro(e);\n}), Il = T(\"link_color\"), Ze = T(\"secondary_bg_color\"), jl = T(\"section_bg_color\"), ql = T(\"section_header_text_color\"), Dl = T(\"section_separator_color\"), Nl = T(\"subtitle_text_color\"), Vl = T(\"text_color\");\nfunction _e(e) {\n  return /* @__PURE__ */ h(() => zn()[e]);\n}\nconst qe = /* @__PURE__ */ Ae({\n  hasShineEffect: !1,\n  isEnabled: !0,\n  isLoaderVisible: !1,\n  isVisible: !1,\n  text: \"Continue\"\n}), zn = /* @__PURE__ */ h(() => {\n  const e = qe();\n  return {\n    ...e,\n    backgroundColor: e.backgroundColor || Un() || \"#2481cc\",\n    textColor: e.textColor || Ho() || \"#ffffff\"\n  };\n}), [rn, Wo] = /* @__PURE__ */ b(!1), Ll = _e(\"backgroundColor\"), Rl = _e(\"hasShineEffect\"), Hl = _e(\"isEnabled\"), Fl = _e(\"isLoaderVisible\"), Wl = _e(\"isVisible\"), Ul = _e(\"text\"), zl = _e(\"textColor\"), Gl = \"web_app_setup_main_button\", Uo = \"main_button_pressed\", ht = \"mainButton\", Gn = le(ht), Ql = lt(ht, Wo), Jl = Gn(\"mount\", () => {\n  if (!rn()) {\n    const e = V() && N(ht);\n    e && qe.set(e), rn.set(!0);\n  }\n}), Kl = Gn(\n  \"onClick\",\n  (e) => S(Uo, e)\n), Yl = Gn(\n  \"offClick\",\n  (e) => {\n    B(Uo, e);\n  }\n), Zl = Ql(\n  \"setParams\",\n  (e) => {\n    qe.set({ ...qe(), ...Ln(e) }), z(ht, qe());\n    const t = zn();\n    t.text && _(Gl, {\n      color: t.backgroundColor,\n      has_shine_effect: t.hasShineEffect,\n      is_active: t.isEnabled,\n      is_progress_visible: t.isLoaderVisible,\n      is_visible: t.isVisible,\n      text: t.text,\n      text_color: t.textColor\n    });\n  }\n);\nfunction Xl() {\n  rn.set(!1);\n}\nconst om = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  backgroundColor: Ll,\n  hasShineEffect: Rl,\n  isEnabled: Hl,\n  isLoaderVisible: Fl,\n  isMounted: Wo,\n  isVisible: Wl,\n  mount: Jl,\n  offClick: Yl,\n  onClick: Kl,\n  setParams: Zl,\n  state: zn,\n  text: Ul,\n  textColor: zl,\n  unmount: Xl\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction Qn(e, t) {\n  document.documentElement.style.setProperty(e, t);\n}\nfunction Jn(e) {\n  document.documentElement.style.removeProperty(e);\n}\nconst $e = \"themeParams\", Kn = \"theme_changed\", zo = le($e), Yn = ({ theme_params: e }) => {\n  de.set(e), z($e, e);\n}, [\n  ep,\n  Go,\n  tp,\n  Qo\n] = /* @__PURE__ */ He(\n  $e,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  (e) => x.resolve(\n    V() && N($e) || Re().tgWebAppThemeParams || {}\n  ),\n  (e) => {\n    S(Kn, Yn), de.set(e);\n  }\n), np = lt($e, Qo[0]), rp = np(\n  \"bindCssVars\",\n  (e) => {\n    if (jt())\n      throw new Cn();\n    e || (e = (r) => `--tg-theme-${Ki(r)}`);\n    function t(r) {\n      Object.entries(de()).forEach(([s, o]) => {\n        o && r(s, o);\n      });\n    }\n    function n() {\n      t((r, s) => {\n        Qn(e(r), s);\n      });\n    }\n    return n(), de.sub(n), jt.set(!0), () => {\n      t(Jn), de.unsub(n), jt.set(!1);\n    };\n  }\n), Jo = zo(\"mount\", ep), sp = Go[2], Ko = Go[1], op = tp[1], [sn, ap] = Qo, Yo = zo(\"mountSync\", () => {\n  if (!sn()) {\n    const e = V() && N($e) || Re().tgWebAppThemeParams || {};\n    S(Kn, Yn), Ne(() => {\n      de.set(e), sn.set(!0);\n    });\n  }\n});\nfunction ip() {\n  Me(Ko), B(Kn, Yn), sn.set(!1);\n}\nconst am = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  accentTextColor: Pl,\n  backgroundColor: mt,\n  bindCssVars: rp,\n  bottomBarBgColor: Fo,\n  buttonColor: Un,\n  buttonTextColor: Ho,\n  destructiveTextColor: xl,\n  headerBackgroundColor: Tl,\n  hintColor: Bl,\n  isCssVarsBound: kl,\n  isDark: Ol,\n  isMounted: ap,\n  isMounting: sp,\n  linkColor: Il,\n  mount: Jo,\n  mountError: op,\n  mountPromise: Ko,\n  mountSync: Yo,\n  secondaryBackgroundColor: Ze,\n  sectionBackgroundColor: jl,\n  sectionHeaderTextColor: ql,\n  sectionSeparatorColor: Dl,\n  state: Ml,\n  subtitleTextColor: Nl,\n  textColor: Vl,\n  unmount: ip\n}, Symbol.toStringTag, { value: \"Module\" }));\n// @__NO_SIDE_EFFECTS__\nfunction Zo(e) {\n  return /* @__PURE__ */ h(() => {\n    const t = e();\n    return Ee(t) ? t : t === \"bg_color\" ? mt() : Ze();\n  });\n}\nconst [Xe, up] = /* @__PURE__ */ b(\"bg_color\"), Zn = /* @__PURE__ */ Zo(Xe), [et, cp] = /* @__PURE__ */ b(\"bottom_bar_bg_color\"), Xn = /* @__PURE__ */ h(() => {\n  const e = et();\n  return Ee(e) ? e : e === \"bottom_bar_bg_color\" ? Fo() || Ze() : e === \"secondary_bg_color\" ? Ze() : mt();\n}), [tt, lp] = /* @__PURE__ */ b(\"bg_color\"), Xo = /* @__PURE__ */ Zo(tt), [qt, pp] = /* @__PURE__ */ b(!1), dp = /* @__PURE__ */ h(() => {\n  const e = Zn();\n  return e ? Ro(e) : !1;\n}), [_t, fp] = /* @__PURE__ */ b(!0), ea = /* @__PURE__ */ h(() => ({\n  backgroundColor: Xe(),\n  bottomBarColor: et(),\n  headerColor: tt(),\n  isActive: _t()\n})), on = \"web_app_set_background_color\", an = \"web_app_set_bottom_bar_color\", Je = \"web_app_set_header_color\", er = \"visibility_changed\", me = \"miniApp\", tr = {\n  any: [\n    on,\n    an,\n    Je\n  ]\n}, mp = /* @__PURE__ */ h(() => tr.any.some((e) => fe(e, se()))), nr = (e) => {\n  _t.set(e.is_visible), yt();\n}, [\n  hp,\n  ta,\n  _p,\n  na\n] = /* @__PURE__ */ He(\n  me,\n  (e) => Jo(e).then(() => V() && N(me) || void 0),\n  (e) => {\n    rr.ifAvailable(e ? e.backgroundColor : \"bg_color\"), sr.ifAvailable(e ? e.bottomBarColor : \"bottom_bar_bg_color\"), or.ifAvailable(e ? e.headerColor : \"bg_color\"), _t.set(e ? e.isActive : !0), S(er, nr);\n  }\n), ra = le(me), sa = L(me, tr), bt = ce(me, na[0], tr), bp = bt(\n  \"bindCssVars\",\n  (e) => {\n    if (qt())\n      throw new Cn();\n    const [t, n] = Sn();\n    function r(s, o) {\n      function a() {\n        Qn(s, o() || null);\n      }\n      a(), t(o.sub(a), Jn.bind(null, s));\n    }\n    return e || (e = (s) => `--tg-${Ns(s)}`), r(e(\"bgColor\"), Zn), r(e(\"bottomBarColor\"), Xn), r(e(\"headerColor\"), Xo), t(() => {\n      qt.set(!1);\n    }), qt.set(!0), n;\n  }\n), yp = ra(\"close\", (e) => {\n  _(\"web_app_close\", { return_back: e });\n}), gp = sa(\"mount\", hp), vp = ta[2], oa = ta[1], wp = _p[1], [un, Ep] = na, $p = sa(\"mountSync\", () => {\n  if (!un()) {\n    Yo();\n    const e = V() && N(me) || void 0;\n    rr.ifAvailable(e ? e.backgroundColor : \"bg_color\"), sr.ifAvailable(e ? e.bottomBarColor : \"bottom_bar_bg_color\"), or.ifAvailable(e ? e.headerColor : \"bg_color\"), S(er, nr), Ne(() => {\n      _t.set(e ? e.isActive : !0), un.set(!0);\n    });\n  }\n}), Sp = ra(\"ready\", () => {\n  _(\"web_app_ready\");\n});\nfunction yt() {\n  z(me, ea());\n}\nconst rr = bt(\n  \"setBackgroundColor\",\n  (e) => {\n    e !== Xe() && (_(on, { color: e }), Xe.set(e), yt());\n  },\n  on\n), sr = bt(\n  \"setBottomBarColor\",\n  (e) => {\n    e !== et() && (_(an, { color: e }), et.set(e), yt());\n  },\n  an\n), or = bt(\n  \"setHeaderColor\",\n  (e) => {\n    e !== tt() && (_(Je, Ee(e) ? { color: e } : { color_key: e }), tt.set(e), yt());\n  },\n  Je,\n  {\n    rgb: [Je, \"color\", Ee]\n  }\n);\nfunction Cp() {\n  Me(oa), B(er, nr), un.set(!1);\n}\nconst im = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  backgroundColor: up,\n  backgroundColorRGB: Zn,\n  bindCssVars: bp,\n  bottomBarColor: cp,\n  bottomBarColorRGB: Xn,\n  close: yp,\n  headerColor: lp,\n  headerColorRGB: Xo,\n  isActive: fp,\n  isCssVarsBound: pp,\n  isDark: dp,\n  isMounted: Ep,\n  isMounting: vp,\n  isSupported: mp,\n  mount: gp,\n  mountError: wp,\n  mountPromise: oa,\n  mountSync: $p,\n  ready: Sp,\n  setBackgroundColor: rr,\n  setBottomBarColor: sr,\n  setHeaderColor: or,\n  state: ea,\n  unmount: Cp\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction Ap(e) {\n  const t = e.message.trim(), n = (e.title || \"\").trim(), r = e.buttons || [];\n  if (n.length > 64)\n    throw new J(`Invalid title: ${n}`);\n  if (!t || t.length > 256)\n    throw new J(`Invalid message: ${t}`);\n  if (r.length > 3)\n    throw new J(`Invalid buttons count: ${r.length}`);\n  return {\n    title: n,\n    message: t,\n    buttons: r.length ? r.map((s, o) => {\n      const a = s.id || \"\";\n      if (a.length > 64)\n        throw new J(`Button with index ${o} has invalid id: ${a}`);\n      if (!s.type || s.type === \"default\" || s.type === \"destructive\") {\n        const i = s.text.trim();\n        if (!i || i.length > 64)\n          throw new J(`Button with index ${o} has invalid text: ${i}`);\n        return { type: s.type, text: i, id: a };\n      }\n      return { type: s.type, id: a };\n    }) : [{ type: \"close\", id: \"\" }]\n  };\n}\nconst ar = \"web_app_open_popup\", aa = L(\"popup\", ar), kp = G(ar), [ia, ir, ua] = O(\n  (e) => C(ar, \"popup_closed\", {\n    ...e,\n    params: Ap(e)\n  }).then(({ button_id: t }) => t === void 0 ? null : t),\n  \"A popup is already opened\"\n), Mp = aa(\"open\", ia), Pp = ir[1], xp = ir[2], Tp = ua[1], Bp = aa(\"show\", ia), [, Op, Ip] = ir, [, jp] = ua, um = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  isOpened: xp,\n  isShown: Ip,\n  isSupported: kp,\n  open: Mp,\n  openError: Tp,\n  openPromise: Pp,\n  show: Bp,\n  showError: jp,\n  showPromise: Op\n}, Symbol.toStringTag, { value: \"Module\" })), ca = \"web_app_close_scan_qr_popup\", ur = \"web_app_open_scan_qr_popup\", qp = \"scan_qr_popup_closed\", Dp = \"qr_text_received\", la = L(\"qrScanner\", ur), Np = la(\"close\", () => {\n  _(ca), Me(pa);\n}), Vp = G(ur);\nfunction Lp(e) {\n  e || (e = {});\n  const { onCaptured: t, text: n, capture: r } = e, [, s] = Sn(\n    S(qp, () => {\n      o.resolve();\n    }),\n    S(Dp, (a) => {\n      t ? t(a.data) : (!r || r(a.data)) && (o.resolve(a.data), _(ca));\n    })\n  ), o = new Su(e);\n  return (e.postEvent || _)(ur, { text: n }), x.resolve(o).catch(Ks).finally(s);\n}\nconst [\n  Rp,\n  Hp,\n  Fp\n] = O(Lp, \"The QR Scanner is already opened\"), Wp = la(\"open\", Rp), [, pa, Up] = Hp, [, zp] = Fp, cm = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  close: Np,\n  isOpened: Up,\n  isSupported: Vp,\n  open: Wp,\n  openError: zp,\n  openPromise: pa\n}, Symbol.toStringTag, { value: \"Module\" }));\nfunction pe(e) {\n  return /* @__PURE__ */ h(() => cr()[e]);\n}\nconst De = /* @__PURE__ */ Ae({\n  hasShineEffect: !1,\n  isEnabled: !0,\n  isLoaderVisible: !1,\n  isVisible: !1,\n  position: \"left\",\n  text: \"Cancel\"\n}), cr = /* @__PURE__ */ h(() => {\n  const e = De();\n  return {\n    ...e,\n    backgroundColor: e.backgroundColor || Xn() || \"#000000\",\n    textColor: e.textColor || Un() || \"#2481cc\"\n  };\n}), [cn, da] = /* @__PURE__ */ b(!1), Gp = pe(\"backgroundColor\"), Qp = pe(\"hasShineEffect\"), Jp = pe(\"isEnabled\"), Kp = pe(\"isLoaderVisible\"), Yp = pe(\"isVisible\"), Zp = pe(\"position\"), Xp = pe(\"text\"), ed = pe(\"textColor\"), gt = \"web_app_setup_secondary_button\", fa = \"secondary_button_pressed\", vt = \"secondaryButton\", lr = L(vt, gt), td = ce(vt, da, gt), nd = G(gt), rd = lr(\"mount\", () => {\n  if (!cn()) {\n    const e = V() && N(vt);\n    e && De.set(e), cn.set(!0);\n  }\n}), sd = lr(\n  \"onClick\",\n  (e) => S(fa, e)\n), od = lr(\n  \"offClick\",\n  (e) => {\n    B(fa, e);\n  }\n), ad = td(\n  \"setParams\",\n  (e) => {\n    De.set({ ...De(), ...Ln(e) }), z(vt, De());\n    const t = cr();\n    t.text && _(gt, {\n      color: t.backgroundColor,\n      has_shine_effect: t.hasShineEffect,\n      is_active: t.isEnabled,\n      is_progress_visible: t.isLoaderVisible,\n      is_visible: t.isVisible,\n      position: t.position,\n      text: t.text,\n      text_color: t.textColor\n    });\n  }\n);\nfunction id() {\n  cn.set(!1);\n}\nconst lm = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  backgroundColor: Gp,\n  hasShineEffect: Qp,\n  isEnabled: Jp,\n  isLoaderVisible: Kp,\n  isMounted: da,\n  isSupported: nd,\n  isVisible: Yp,\n  mount: rd,\n  offClick: od,\n  onClick: sd,\n  position: Zp,\n  setParams: ad,\n  state: cr,\n  text: Xp,\n  textColor: ed,\n  unmount: id\n}, Symbol.toStringTag, { value: \"Module\" })), wt = \"web_app_setup_settings_button\", ma = \"settings_button_pressed\", Et = \"settingsButton\", [Jr, ud] = /* @__PURE__ */ b(!1), [nt, cd] = /* @__PURE__ */ b(!1), ld = G(wt), pr = L(Et, wt), ha = ce(Et, nt, wt), pd = ha(\"hide\", () => {\n  dr(!1);\n}), dd = pr(\"mount\", () => {\n  nt() || (dr(V() && N(Et) || !1), nt.set(!0));\n});\nfunction dr(e) {\n  e !== Jr() && (_(wt, { is_visible: e }), z(Et, e), Jr.set(e));\n}\nconst fd = pr(\n  \"onClick\",\n  (e) => S(ma, e)\n), md = pr(\n  \"offClick\",\n  (e) => {\n    B(ma, e);\n  }\n), hd = ha(\"show\", () => {\n  dr(!0);\n});\nfunction _d() {\n  nt.set(!1);\n}\nconst pm = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  hide: pd,\n  isMounted: cd,\n  isSupported: ld,\n  isVisible: ud,\n  mount: dd,\n  offClick: md,\n  onClick: fd,\n  show: hd,\n  unmount: _d\n}, Symbol.toStringTag, { value: \"Module\" })), $t = \"web_app_setup_swipe_behavior\", St = \"swipeBehavior\", [Le, bd] = /* @__PURE__ */ b(!1), yd = G($t), [ln, gd] = /* @__PURE__ */ b(!0), vd = L(St, $t), _a = ce(St, Le, $t), wd = _a(\"disableVertical\", () => {\n  fr(!1);\n}), Ed = _a(\"enableVertical\", () => {\n  fr(!0);\n}), $d = vd(\"mount\", () => {\n  Le() || (fr(\n    V() && N(St) || !1,\n    !0\n  ), Le.set(!0));\n});\nfunction fr(e, t) {\n  (e !== ln() || t) && (_($t, { allow_vertical_swipe: e }), z(St, e), ln.set(e));\n}\nfunction Sd() {\n  Le.set(!1);\n}\nconst dm = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  _isMounted: Le,\n  _isVerticalEnabled: ln,\n  disableVertical: wd,\n  enableVertical: Ed,\n  isMounted: bd,\n  isSupported: yd,\n  isVerticalEnabled: gd,\n  mount: $d,\n  unmount: Sd\n}, Symbol.toStringTag, { value: \"Module\" })), be = \"viewport\", mr = \"fullscreen_changed\", hr = \"safe_area_changed\", _r = \"content_safe_area_changed\", br = \"viewport_changed\", ba = le(be), Kr = { left: 0, top: 0, bottom: 0, right: 0 };\nfunction Dt(e) {\n  return Math.max(e, 0);\n}\nconst [Nt, ya] = /* @__PURE__ */ b({\n  contentSafeAreaInsets: Kr,\n  height: 0,\n  isExpanded: !1,\n  isFullscreen: !1,\n  safeAreaInsets: Kr,\n  stableHeight: 0,\n  width: 0\n});\nfunction ye(e) {\n  return /* @__PURE__ */ h(() => ya()[e]);\n}\nconst yr = ye(\"height\"), gr = ye(\"stableHeight\"), ga = ye(\"width\"), Cd = ye(\"isExpanded\"), Ad = /* @__PURE__ */ h(() => yr() === gr());\nfunction Pe(e) {\n  const { height: t, stableHeight: n, width: r } = e;\n  Nt.set({\n    ...Nt(),\n    ...Ln({\n      ...e,\n      height: t ? Dt(t) : void 0,\n      width: r ? Dt(r) : void 0,\n      stableHeight: n ? Dt(n) : void 0\n    })\n  }), z(be, Nt());\n}\nfunction kd() {\n  return N(be);\n}\nfunction Ct(e) {\n  return /* @__PURE__ */ h(() => vr()[e]);\n}\nconst vr = ye(\"contentSafeAreaInsets\"), va = Ct(\"bottom\"), wa = Ct(\"left\"), Ea = Ct(\"right\"), $a = Ct(\"top\");\nfunction At(e) {\n  return /* @__PURE__ */ h(() => wr()[e]);\n}\nconst wr = ye(\"safeAreaInsets\"), Sa = At(\"bottom\"), Ca = At(\"left\"), Aa = At(\"right\"), ka = At(\"top\"), Ma = \"web_app_request_safe_area\", Pa = L(be, Ma), Yr = Pa(\n  \"requestContentSafeAreaInsets\",\n  (e) => C(\"web_app_request_content_safe_area\", _r, e)\n);\nfunction Md(e) {\n  return C(\"web_app_request_viewport\", br, e);\n}\nconst Zr = Pa(\n  \"requestSafeAreaInsets\",\n  (e) => C(Ma, hr, e)\n), xa = (e) => {\n  const { height: t } = e;\n  Pe({\n    isExpanded: e.is_expanded,\n    height: t,\n    width: e.width,\n    stableHeight: e.is_state_stable ? t : void 0\n  });\n}, Ta = (e) => {\n  Pe({ isFullscreen: e.is_fullscreen });\n}, Ba = (e) => {\n  Pe({ safeAreaInsets: e });\n}, Oa = (e) => {\n  Pe({ contentSafeAreaInsets: e });\n}, [\n  Pd,\n  xd,\n  Td,\n  Bd\n] = /* @__PURE__ */ He(\n  be,\n  (e) => {\n    const t = V() && kd();\n    return t ? x.resolve(t) : x.fn(async (n) => {\n      const r = await x.all([\n        Zr.isAvailable() ? Zr(n) : wr(),\n        Yr.isAvailable() ? Yr(n) : vr()\n      ]), s = Re(), o = {\n        contentSafeAreaInsets: r[1],\n        isFullscreen: !!s.tgWebAppFullscreen,\n        safeAreaInsets: r[0]\n      };\n      if ([\"macos\", \"tdesktop\", \"unigram\", \"webk\", \"weba\", \"web\"].includes(s.tgWebAppPlatform)) {\n        const a = window;\n        return {\n          ...o,\n          height: a.innerHeight,\n          isExpanded: !0,\n          stableHeight: a.innerHeight,\n          width: a.innerWidth\n        };\n      }\n      return Md(n).then((a) => ({\n        ...o,\n        height: a.height,\n        isExpanded: a.is_expanded,\n        stableHeight: a.is_state_stable ? a.height : 0,\n        width: a.width\n      }));\n    }, e);\n  },\n  (e) => {\n    S(br, xa), S(mr, Ta), S(hr, Ba), S(_r, Oa), Pe(e);\n  }\n), Od = ba(\"mount\", Pd), [, Ia, Id] = xd, [, jd] = Td, [Er, qd] = Bd;\nfunction Dd() {\n  Me(Ia), B(br, xa), B(mr, Ta), B(hr, Ba), B(_r, Oa), Er.set(!1);\n}\nconst Nd = lt(be, Er), [Vt, Vd] = /* @__PURE__ */ b(!1), Ld = Nd(\n  \"bindCssVars\",\n  (e) => {\n    if (Vt())\n      throw new Cn();\n    e || (e = (n) => `--tg-viewport-${Ns(n)}`);\n    const t = [\n      [\"height\", yr],\n      [\"stableHeight\", gr],\n      [\"width\", ga],\n      [\"safeAreaInsetTop\", ka],\n      [\"safeAreaInsetBottom\", Sa],\n      [\"safeAreaInsetLeft\", Ca],\n      [\"safeAreaInsetRight\", Aa],\n      [\"contentSafeAreaInsetTop\", $a],\n      [\"contentSafeAreaInsetBottom\", va],\n      [\"contentSafeAreaInsetLeft\", wa],\n      [\"contentSafeAreaInsetRight\", Ea]\n    ].reduce((n, [r, s]) => {\n      const o = e(r);\n      if (o) {\n        const a = () => {\n          Qn(o, `${s()}px`);\n        };\n        n.push([a, s.sub(a), o]);\n      }\n      return n;\n    }, []);\n    return t.forEach((n) => {\n      n[0]();\n    }), Vt.set(!0), () => {\n      t.forEach((n) => {\n        n[1](), Jn(n[2]);\n      }), Vt.set(!1);\n    };\n  }\n), Rd = ba(\"expand\", () => {\n  _(\"web_app_expand\");\n}), ja = \"web_app_request_fullscreen\", Hd = ce(be, Er, ja), qa = ye(\"isFullscreen\"), [\n  Fd,\n  Wd\n] = /* @__PURE__ */ b(), [\n  Ud,\n  zd\n] = /* @__PURE__ */ b();\nfunction Da(e, t) {\n  return Hd(\n    e,\n    O(\n      (n) => C(\n        t ? ja : \"web_app_exit_fullscreen\",\n        [mr, \"fullscreen_failed\"],\n        n\n      ).then((r) => {\n        if (\"error\" in r && r.error !== \"ALREADY_FULLSCREEN\")\n          throw new au(r.error);\n        const s = \"is_fullscreen\" in r ? r.is_fullscreen : !0;\n        s !== qa() && Pe({ isFullscreen: s });\n      }),\n      \"Fullscreen mode change is already being requested\",\n      {\n        promise: Fd,\n        error: Ud\n      }\n    )[0]\n  );\n}\nconst Gd = Da(\"requestFullscreen\", !0), Qd = Da(\"exitFullscreen\"), fm = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  bindCssVars: Ld,\n  changeFullscreenError: zd,\n  changeFullscreenPromise: Wd,\n  contentSafeAreaInsetBottom: va,\n  contentSafeAreaInsetLeft: wa,\n  contentSafeAreaInsetRight: Ea,\n  contentSafeAreaInsetTop: $a,\n  contentSafeAreaInsets: vr,\n  exitFullscreen: Qd,\n  expand: Rd,\n  height: yr,\n  isCssVarsBound: Vd,\n  isExpanded: Cd,\n  isFullscreen: qa,\n  isMounted: qd,\n  isMounting: Id,\n  isStable: Ad,\n  mount: Od,\n  mountError: jd,\n  mountPromise: Ia,\n  requestFullscreen: Gd,\n  safeAreaInsetBottom: Sa,\n  safeAreaInsetLeft: Ca,\n  safeAreaInsetRight: Aa,\n  safeAreaInsetTop: ka,\n  safeAreaInsets: wr,\n  stableHeight: gr,\n  state: ya,\n  unmount: Dd,\n  width: ga\n}, Symbol.toStringTag, { value: \"Module\" })), Na = \"web_app_request_emoji_status_access\", [\n  Jd,\n  Kd,\n  Yd\n] = O((e) => C(Na, \"emoji_status_access_requested\", e).then((t) => t.status), \"Emoji status access request is already in progress\"), mm = /* @__PURE__ */ A(\n  \"requestEmojiStatusAccess\",\n  Jd,\n  { isSupported: Na }\n), [, hm, _m] = Kd, [, bm] = Yd, Va = \"web_app_set_emoji_status\", [\n  Zd,\n  Xd,\n  ef\n] = O(\n  (e, t) => C(Va, [\"emoji_status_set\", \"emoji_status_failed\"], {\n    params: {\n      custom_emoji_id: e,\n      duration: (t || {}).duration\n    },\n    ...t\n  }).then((n) => {\n    if (n && \"error\" in n)\n      throw new ou(n.error);\n  }),\n  \"Emoji status set request is currently in progress\"\n), ym = /* @__PURE__ */ A(\"setEmojiStatus\", Zd, {\n  isSupported: Va\n}), [, gm, vm] = Xd, [, wm] = ef, tf = { isSupported: \"web_app_add_to_home_screen\" }, La = \"home_screen_failed\", Em = /* @__PURE__ */ A(\n  \"onAddToHomeScreenFailed\",\n  (e, t) => S(La, e, t),\n  { isSupported: \"web_app_add_to_home_screen\" }\n), $m = /* @__PURE__ */ A(\n  \"offAddToHomeScreenFailed\",\n  (e) => {\n    B(La, e);\n  },\n  tf\n), Ra = { isSupported: \"web_app_add_to_home_screen\" }, Ha = \"home_screen_added\", Sm = /* @__PURE__ */ A(\n  \"onAddedToHomeScreen\",\n  (e, t) => S(Ha, e, t),\n  Ra\n), Cm = /* @__PURE__ */ A(\n  \"offAddedToHomeScreen\",\n  (e) => {\n    B(Ha, e);\n  },\n  Ra\n), Xr = \"web_app_add_to_home_screen\", Am = /* @__PURE__ */ A(\n  \"addToHomeScreen\",\n  () => {\n    _(Xr);\n  },\n  { isSupported: Xr }\n), Fa = \"web_app_check_home_screen\", [\n  nf,\n  rf,\n  sf\n] = O((e) => C(Fa, \"home_screen_checked\", e).then((t) => t.status || \"unknown\"), \"Check home screen status request is currently in progress\"), km = /* @__PURE__ */ A(\"checkHomeScreenStatus\", nf, {\n  isSupported: Fa\n}), [, Mm, Pm] = rf, [, xm] = sf, of = le(), Tm = of(\n  \"openLink\",\n  (e, t) => {\n    if (typeof e == \"string\")\n      try {\n        e = new URL(e);\n      } catch (n) {\n        throw new J(`\"${e.toString()}\" is invalid URL`, n);\n      }\n    t || (t = {}), _(\"web_app_open_link\", {\n      url: e.toString(),\n      try_browser: t.tryBrowser,\n      try_instant_view: t.tryInstantView\n    });\n  }\n), es = \"web_app_open_tg_link\", af = le(), uf = af(\n  \"openTelegramLink\",\n  (e) => {\n    const t = e.toString();\n    if (!t.match(/^https:\\/\\/t.me\\/.+/))\n      throw new J(`\"${t}\" is invalid URL`);\n    if (!fe(es, se())) {\n      window.location.href = t;\n      return;\n    }\n    e = new URL(e), _(es, { path_full: e.pathname + e.search });\n  }\n), cf = le(), Bm = cf(\n  \"shareURL\",\n  (e, t) => {\n    uf(\n      \"https://t.me/share/url?\" + new URLSearchParams({ url: e, text: t || \"\" }).toString().replace(/\\+/g, \"%20\")\n    );\n  }\n);\nfunction lf(e, t) {\n  return new x({ abortSignal: t, timeout: e }).catch(() => {\n  });\n}\nconst Wa = \"web_app_request_phone\", [\n  pf,\n  df,\n  ff\n] = O((e) => C(Wa, \"phone_requested\", e).then((t) => t.status), \"Phone access request is currently in progress\"), mf = /* @__PURE__ */ A(\"requestPhoneAccess\", pf, {\n  isSupported: Wa\n}), [, Om, Im] = df, [, jm] = ff;\nasync function ts(e) {\n  const t = await ke(\"getRequestedContact\", {}, {\n    ...e,\n    timeout: (e || {}).timeout || 5e3\n  });\n  return dt(\n    /* @__PURE__ */ Qe(\n      // todo: Union is unnecessary here, but we use it to comply TypeScript checker.\n      /* @__PURE__ */ ho([/* @__PURE__ */ W(), /* @__PURE__ */ po(URLSearchParams)]),\n      Do(\n        /* @__PURE__ */ tn({\n          contact: /* @__PURE__ */ Qe(\n            /* @__PURE__ */ W(),\n            qo(),\n            /* @__PURE__ */ tn({\n              user_id: /* @__PURE__ */ jn(),\n              phone_number: /* @__PURE__ */ W(),\n              first_name: /* @__PURE__ */ W(),\n              last_name: /* @__PURE__ */ fo(/* @__PURE__ */ W())\n            })\n          ),\n          auth_date: /* @__PURE__ */ Qe(\n            /* @__PURE__ */ W(),\n            /* @__PURE__ */ On((n) => new Date(Number(n) * 1e3)),\n            /* @__PURE__ */ In()\n          ),\n          hash: /* @__PURE__ */ W()\n        })\n      )\n    ),\n    t\n  );\n}\nconst [\n  hf,\n  _f,\n  bf\n] = O(\n  (e) => new x(async (t, n, r) => {\n    try {\n      return t(await ts(r));\n    } catch (a) {\n      if (a instanceof en)\n        throw a;\n    }\n    if (await mf(r) !== \"sent\")\n      throw new Us(\"User denied access\");\n    let o = 50;\n    for (; !r.isAborted(); ) {\n      try {\n        return t(await ts(r));\n      } catch (a) {\n        if (a instanceof en)\n          throw a;\n      }\n      await lf(o), o += 50;\n    }\n  }, e),\n  \"Contact is already being requested\"\n), qm = /* @__PURE__ */ A(\"requestContact\", hf, {\n  isSupported: \"web_app_request_phone\"\n}), [, Dm, Nm] = _f, [, Vm] = bf, Ua = \"web_app_request_write_access\", [\n  yf,\n  gf,\n  vf\n] = O(\n  (e) => C(Ua, \"write_access_requested\", e).then((t) => t.status),\n  \"Write access request is currently in progress\"\n), Lm = /* @__PURE__ */ A(\"requestWriteAccess\", yf, {\n  isSupported: Ua\n}), [, Rm, Hm] = gf, [, Fm] = vf;\nfunction wf(e) {\n  const t = document.createElement(\"textarea\");\n  t.value = e, t.style.top = \"0\", t.style.left = \"0\", t.style.position = \"fixed\", document.body.appendChild(t), t.focus(), t.select();\n  try {\n    document.execCommand(\"copy\");\n  } finally {\n    document.body.removeChild(t);\n  }\n}\nasync function Wm(e) {\n  try {\n    const { clipboard: t } = navigator;\n    if (t)\n      return await t.writeText(e);\n  } catch {\n  }\n  wf(e);\n}\nconst ns = \"web_app_request_file_download\", Um = /* @__PURE__ */ A(\n  \"downloadFile\",\n  (e, t, n) => C(\n    ns,\n    \"file_download_requested\",\n    { ...n, params: { url: e, file_name: t } }\n  ).then((r) => {\n    if (r.status !== \"downloading\")\n      throw new Us(\"User denied the action\");\n  }),\n  { isSupported: ns }\n), zm = /* @__PURE__ */ A(\n  \"getCurrentTime\",\n  (e) => ke(\"getCurrentTime\", {}, e).then((t) => dt(\n    /* @__PURE__ */ Qe(/* @__PURE__ */ jn(), /* @__PURE__ */ uo(), /* @__PURE__ */ On((n) => new Date(n * 1e3)), /* @__PURE__ */ In()),\n    t\n  )),\n  { isSupported: \"web_app_invoke_custom_method\" }\n), rs = \"web_app_read_text_from_clipboard\", Gm = /* @__PURE__ */ A(\n  \"readTextFromClipboard\",\n  (e) => {\n    const t = Fs();\n    return C(rs, \"clipboard_text_received\", {\n      ...e,\n      params: { req_id: t },\n      capture: Ds(t)\n    }).then(({ data: n = null }) => n);\n  },\n  { isSupported: rs }\n), ss = \"web_app_data_send\", Qm = /* @__PURE__ */ A(\n  \"sendData\",\n  (e) => {\n    const { size: t } = new Blob([e]);\n    if (!t || t > 4096)\n      throw new J(t ? \"Maximum size of data to send is 4096 bytes\" : \"Attempted to send empty data\");\n    _(ss, { data: e });\n  },\n  { isSupported: ss }\n), os = \"web_app_send_prepared_message\", Jm = /* @__PURE__ */ A(\n  \"shareMessage\",\n  (e, t) => C(os, [\"prepared_message_failed\", \"prepared_message_sent\"], {\n    ...t,\n    params: { id: e }\n  }).then((n) => {\n    if (n && \"error\" in n)\n      throw new iu(n.error);\n  }),\n  { isSupported: os }\n), as = \"web_app_share_to_story\", Km = /* @__PURE__ */ A(\n  \"shareStory\",\n  (e, t) => {\n    t || (t = {}), _(as, {\n      text: t.text,\n      media_url: e,\n      widget_link: t.widgetLink\n    });\n  },\n  { isSupported: as }\n), Ef = \"web_app_switch_inline_query\", Ym = /* @__PURE__ */ A(\n  \"switchInlineQuery\",\n  (e, t) => {\n    _(Ef, {\n      query: e,\n      chat_types: t || []\n    });\n  },\n  {\n    isSupported() {\n      return Re().tgWebAppBotInline ? void 0 : \"The application must be launched in the inline mode\";\n    }\n  }\n);\nfunction Zm(e) {\n  try {\n    return [!0, e()];\n  } catch (t) {\n    return [!1, t];\n  }\n}\nfunction Xm(e) {\n  nu(e);\n  const [t, n] = Sn(\n    S(\"reload_iframe\", () => {\n      Jt(!1, \"Received a request to reload the page\"), _(\"iframe_will_reload\"), window.location.reload();\n    })\n  ), { acceptCustomStyles: r = !0 } = e || {};\n  if (r) {\n    const s = document.createElement(\"style\");\n    s.id = \"telegram-custom-styles\", document.head.appendChild(s), t(\n      S(\"set_custom_style\", (o) => {\n        s.innerHTML = o;\n      }),\n      () => {\n        document.head.removeChild(s);\n      }\n    );\n  }\n  return _(\"iframe_ready\", { reload_supported: !0 }), Jt(!1, \"The package was initialized\"), n;\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@telegram-apps/sdk/dist/index.js\n");

/***/ })

};
;